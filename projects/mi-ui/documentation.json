{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-6f0dee0956a33fdec95b3a2e3477d434ae9ed6357edd2a9c71036560a7c24c5212219b3afe774bddb9cc100486f1f29d7e3e37965cc57602fdfd0573ad608410",
            "file": "projects/mi-ui/src/stories/data-table.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import type { Meta, StoryObj } from '@storybook/angular';\r\nimport { DataTableComponent, DataTableColumn } from '../lib/mi-ui/data-table/data-table';\r\n\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  age: number;\r\n  isActive: boolean;\r\n  joinDate: string;\r\n}\r\n\r\nconst meta: Meta<DataTableComponent<User>> = {\r\n  title: 'Components/Data Table',\r\n  component: DataTableComponent,\r\n  parameters: {\r\n    layout: 'padded',\r\n    docs: {\r\n      description: {\r\n        component: 'Powerful table with sorting, pagination, and customizable columns.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    data: {\r\n      control: 'object',\r\n      description: 'Array of data objects to display',\r\n    },\r\n    columns: {\r\n      control: 'object',\r\n      description: 'Column definitions',\r\n    },\r\n    pageSize: {\r\n      control: 'number',\r\n      description: 'Number of items per page',\r\n    },\r\n    showPagination: {\r\n      control: 'boolean',\r\n      description: 'Whether to show pagination controls',\r\n    },\r\n    sortable: {\r\n      control: 'boolean',\r\n      description: 'Whether columns can be sorted',\r\n    },\r\n    emptyMessage: {\r\n      control: 'text',\r\n      description: 'Message to show when no data is available',\r\n    },\r\n  },\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<DataTableComponent<User>>;\r\n\r\nconst sampleUsers: User[] = [\r\n  { id: 1, name: 'John Doe', email: 'john@example.com', age: 32, isActive: true, joinDate: '2023-01-15' },\r\n  { id: 2, name: 'Jane Smith', email: 'jane@example.com', age: 28, isActive: true, joinDate: '2023-02-20' },\r\n  { id: 3, name: 'Bob Johnson', email: 'bob@example.com', age: 45, isActive: false, joinDate: '2023-03-10' },\r\n  { id: 4, name: 'Alice Brown', email: 'alice@example.com', age: 35, isActive: true, joinDate: '2023-04-05' },\r\n  { id: 5, name: 'Charlie Wilson', email: 'charlie@example.com', age: 29, isActive: false, joinDate: '2023-05-12' },\r\n  { id: 6, name: 'Diana Davis', email: 'diana@example.com', age: 31, isActive: true, joinDate: '2023-06-18' },\r\n  { id: 7, name: 'Edward Miller', email: 'edward@example.com', age: 38, isActive: true, joinDate: '2023-07-22' },\r\n  { id: 8, name: 'Fiona Taylor', email: 'fiona@example.com', age: 26, isActive: false, joinDate: '2023-08-14' },\r\n  { id: 9, name: 'George Anderson', email: 'george@example.com', age: 42, isActive: true, joinDate: '2023-09-03' },\r\n  { id: 10, name: 'Helen Thomas', email: 'helen@example.com', age: 33, isActive: true, joinDate: '2023-10-01' },\r\n  { id: 11, name: 'Ian Jackson', email: 'ian@example.com', age: 27, isActive: false, joinDate: '2023-11-15' },\r\n  { id: 12, name: 'Julia White', email: 'julia@example.com', age: 30, isActive: true, joinDate: '2023-12-08' },\r\n];\r\n\r\nconst userColumns: DataTableColumn<User>[] = [\r\n  {\r\n    key: 'id',\r\n    header: 'ID',\r\n    sortable: true,\r\n    width: '80px',\r\n    type: 'number'\r\n  },\r\n  {\r\n    key: 'name',\r\n    header: 'Name',\r\n    sortable: true,\r\n    type: 'text'\r\n  },\r\n  {\r\n    key: 'email',\r\n    header: 'Email',\r\n    sortable: true,\r\n    type: 'text'\r\n  },\r\n  {\r\n    key: 'age',\r\n    header: 'Age',\r\n    sortable: true,\r\n    width: '100px',\r\n    type: 'number'\r\n  },\r\n  {\r\n    key: 'isActive',\r\n    header: 'Status',\r\n    sortable: true,\r\n    width: '120px',\r\n    type: 'boolean'\r\n  },\r\n  {\r\n    key: 'joinDate',\r\n    header: 'Join Date',\r\n    sortable: true,\r\n    width: '150px',\r\n    type: 'date'\r\n  }\r\n];\r\n\r\nexport const Default: Story = {\r\n  args: {\r\n    data: sampleUsers,\r\n    columns: userColumns,\r\n    pageSize: 5,\r\n  },\r\n};\r\n\r\nexport const WithoutPagination: Story = {\r\n  args: {\r\n    data: sampleUsers.slice(0, 5),\r\n    columns: userColumns,\r\n    showPagination: false,\r\n  },\r\n};\r\n\r\nexport const NotSortable: Story = {\r\n  args: {\r\n    data: sampleUsers.slice(0, 5),\r\n    columns: userColumns,\r\n    sortable: false,\r\n    showPagination: false,\r\n  },\r\n};\r\n\r\nexport const EmptyState: Story = {\r\n  args: {\r\n    data: [],\r\n    columns: userColumns,\r\n    emptyMessage: 'No users found. Try adjusting your filters.',\r\n  },\r\n};\r\n\r\nexport const LargePageSize: Story = {\r\n  args: {\r\n    data: sampleUsers,\r\n    columns: userColumns,\r\n    pageSize: 10,\r\n  },\r\n};\r\n",
            "properties": [
                {
                    "name": "age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "joinDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "alignmentItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ToggleGroupItem[]",
                "defaultValue": "[\r\n  {\r\n    value: 'left',\r\n    label: '',\r\n    icon: 'M15 12H3m0-6h18m-6 12H3'\r\n  },\r\n  {\r\n    value: 'center',\r\n    label: '',\r\n    icon: 'M17 12H7m10-6H7m10 12H7'\r\n  },\r\n  {\r\n    value: 'right',\r\n    label: '',\r\n    icon: 'M21 12H9m12-6H9m12 12H9'\r\n  },\r\n  {\r\n    value: 'justify',\r\n    label: '',\r\n    icon: 'M3 6h18M3 12h18m-18 6h18'\r\n  }\r\n]"
            },
            {
                "name": "AllComponentsTest",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "AllSizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex items-center gap-4 p-4\">\n        <mi-button size=\"sm\">Small</mi-button>\n        <mi-button size=\"default\">Default</mi-button>\n        <mi-button size=\"lg\">Large</mi-button>\n        <mi-button size=\"icon\">⚙️</mi-button>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "AllVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      handleClick: (variant: string) => {\n        console.log(`${variant} button clicked!`);\n        alert(`${variant} button clicked!`);\n      }\n    },\n    template: `\n      <div class=\"flex flex-wrap gap-4 p-4\">\n        <mi-button variant=\"default\" (buttonClick)=\"handleClick('Default')\">Default</mi-button>\n        <mi-button variant=\"secondary\" (buttonClick)=\"handleClick('Secondary')\">Secondary</mi-button>\n        <mi-button variant=\"destructive\" (buttonClick)=\"handleClick('Destructive')\">Destructive</mi-button>\n        <mi-button variant=\"outline\" (buttonClick)=\"handleClick('Outline')\">Outline</mi-button>\n        <mi-button variant=\"ghost\" (buttonClick)=\"handleClick('Ghost')\">Ghost</mi-button>\n        <mi-button variant=\"link\" (buttonClick)=\"handleClick('Link')\">Link</mi-button>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "AllVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <div>\r\n          <h3 class=\"text-lg font-semibold mb-4\">Input Variants</h3>\r\n\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <!-- Default Variant -->\r\n            <div class=\"space-y-2\">\r\n              <mi-label>Default</mi-label>\r\n              <mi-input\r\n                variant=\"default\"\r\n                placeholder=\"Default input style\"\r\n                value=\"Sample text\" />\r\n            </div>\r\n\r\n            <!-- Filled Variant -->\r\n            <div class=\"space-y-2\">\r\n              <mi-input\r\n                variant=\"filled\"\r\n                label=\"Filled Input\"\r\n                value=\"Sample text\" />\r\n            </div>\r\n\r\n            <!-- Outline Variant -->\r\n            <div class=\"space-y-2\">\r\n              <mi-input\r\n                variant=\"outline\"\r\n                label=\"Outline Input\"\r\n                type=\"email\"\r\n                value=\"user@example.com\" />\r\n            </div>\r\n\r\n            <!-- Floating Variant -->\r\n            <div class=\"space-y-2\">\r\n              <mi-input\r\n                variant=\"floating\"\r\n                label=\"Floating Label\"\r\n                type=\"password\"\r\n                value=\"••••••••\" />\r\n            </div>\r\n\r\n            <!-- Destructive Variant -->\r\n            <div class=\"space-y-2\">\r\n              <mi-label>Destructive (Error State)</mi-label>\r\n              <mi-input\r\n                variant=\"destructive\"\r\n                placeholder=\"This field has an error\"\r\n                value=\"Invalid input\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "AllVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/theme-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"p-6 space-y-6\">\r\n        <div class=\"flex justify-between items-center mb-6\">\r\n          <h2 class=\"text-2xl font-bold text-foreground\">Theme Test - All Component Variants</h2>\r\n          <div class=\"flex gap-2\">\r\n            <button\r\n              class=\"px-3 py-1 text-sm bg-primary text-primary-foreground rounded\"\r\n              onclick=\"document.documentElement.setAttribute('data-mode', 'light'); document.documentElement.classList.remove('dark'); console.log('🎨 Manual: Switched to Light');\">\r\n              ☀️ Light\r\n            </button>\r\n            <button\r\n              class=\"px-3 py-1 text-sm bg-primary text-primary-foreground rounded\"\r\n              onclick=\"document.documentElement.setAttribute('data-mode', 'dark'); document.documentElement.classList.add('dark'); console.log('🎨 Manual: Switched to Dark');\">\r\n              🌙 Dark\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"space-y-4\">\r\n          <h3 class=\"text-lg font-semibold text-foreground\">Button Variants:</h3>\r\n          <div class=\"flex flex-wrap gap-2\">\r\n            <mi-button variant=\"default\">Default</mi-button>\r\n            <mi-button variant=\"primary\">Primary</mi-button>\r\n            <mi-button variant=\"secondary\">Secondary</mi-button>\r\n            <mi-button variant=\"outline\">Outline</mi-button>\r\n            <mi-button variant=\"ghost\">Ghost</mi-button>\r\n            <mi-button variant=\"destructive\">Destructive</mi-button>\r\n            <mi-button variant=\"link\">Link</mi-button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"space-y-4\">\r\n          <h3 class=\"text-lg font-semibold text-foreground\">Card Variants:</h3>\r\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <mi-card variant=\"default\">\r\n              <div class=\"p-4\">\r\n                <h4 class=\"font-semibold\">Default Card</h4>\r\n                <p class=\"text-sm text-muted-foreground\">This is a default card variant.</p>\r\n              </div>\r\n            </mi-card>\r\n\r\n            <mi-card variant=\"elevated\">\r\n              <div class=\"p-4\">\r\n                <h4 class=\"font-semibold\">Elevated Card</h4>\r\n                <p class=\"text-sm text-muted-foreground\">This is an elevated card variant.</p>\r\n              </div>\r\n            </mi-card>\r\n\r\n            <mi-card variant=\"outline\">\r\n              <div class=\"p-4\">\r\n                <h4 class=\"font-semibold\">Outline Card</h4>\r\n                <p class=\"text-sm text-muted-foreground\">This is an outline card variant.</p>\r\n              </div>\r\n            </mi-card>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"space-y-4\">\r\n          <h3 class=\"text-lg font-semibold text-foreground\">Badge Variants:</h3>\r\n          <div class=\"flex flex-wrap gap-2\">\r\n            <mi-badge variant=\"default\">Default</mi-badge>\r\n            <mi-badge variant=\"secondary\">Secondary</mi-badge>\r\n            <mi-badge variant=\"destructive\">Destructive</mi-badge>\r\n            <mi-badge variant=\"outline\">Outline</mi-badge>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mt-8 p-4 bg-muted rounded-lg\">\r\n          <p class=\"text-sm text-muted-foreground\">\r\n            🎨 <strong>Theme Testing:</strong> Use the Light/Dark buttons above to test theme switching.\r\n            Check the browser console for debug logs. Also try the theme toggle in the Storybook toolbar (☀️/🌙).\r\n          </p>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Alphanumeric",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    length: 6,\r\n    allowAlphanumeric: true,\r\n    description: 'Enter the alphanumeric code from your authenticator app.',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onComplete: (value: string) => {\r\n        console.log('Alphanumeric OTP completed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Authenticator Code</label>\r\n        <mi-input-otp\r\n          [length]=\"length\"\r\n          [allowAlphanumeric]=\"allowAlphanumeric\"\r\n          [description]=\"description\"\r\n          (complete)=\"onComplete($event)\">\r\n        </mi-input-otp>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "applicationMenus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenubarMenu[]",
                "defaultValue": "[\r\n  {\r\n    label: 'App',\r\n    value: 'app',\r\n    items: [\r\n      { label: 'About App', value: 'about' },\r\n      { label: 'Preferences', value: 'preferences', shortcut: '⌘,' },\r\n      { separator: true },\r\n      { label: 'Quit App', value: 'quit', shortcut: '⌘Q' }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Window',\r\n    value: 'window',\r\n    items: [\r\n      { label: 'Minimize', value: 'minimize', shortcut: '⌘M' },\r\n      { label: 'Close', value: 'close', shortcut: '⌘W' },\r\n      { separator: true },\r\n      { label: 'Bring All to Front', value: 'bring-all-front' }\r\n    ]\r\n  }\r\n]"
            },
            {
                "name": "ApplicationStyle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    menus: applicationMenus,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onItemSelect: (event: any) => {\r\n        console.log('Application menu item selected:', event);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-full max-w-xs\">\r\n        <mi-menubar\r\n          [menus]=\"menus\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-menubar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "AutoPlay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/carousel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    slides: [1, 2, 3, 4, 5],\r\n    autoPlay: true,\r\n    autoPlayInterval: 2000,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 max-w-xs\">\r\n        <mi-carousel [slides]=\"slides\" [autoPlay]=\"autoPlay\" [autoPlayInterval]=\"autoPlayInterval\" [loop]=\"loop\">\r\n        </mi-carousel>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "AvatarGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <div>\r\n          <h4 class=\"text-sm font-medium mb-2\">Team Members</h4>\r\n          <div class=\"flex -space-x-2\">\r\n            <mi-avatar src=\"https://github.com/shadcn.png\" alt=\"User 1\" class=\"border-2 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"AB\" class=\"border-2 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"CD\" class=\"border-2 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"EF\" class=\"border-2 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"+5\" class=\"border-2 border-background bg-muted\"></mi-avatar>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <h4 class=\"text-sm font-medium mb-2\">Recent Collaborators</h4>\r\n          <div class=\"flex -space-x-3\">\r\n            <mi-avatar src=\"https://github.com/shadcn.png\" alt=\"User 1\" size=\"lg\" class=\"border-4 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"JD\" size=\"lg\" class=\"border-4 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"KL\" size=\"lg\" class=\"border-4 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"MN\" size=\"lg\" class=\"border-4 border-background\"></mi-avatar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "basicOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SelectOption[]",
                "defaultValue": "[\r\n  { value: 'apple', label: 'Apple' },\r\n  { value: 'banana', label: 'Banana' },\r\n  { value: 'orange', label: 'Orange' },\r\n  { value: 'grape', label: 'Grape' },\r\n]"
            },
            {
                "name": "basicTabs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { value: 'tab1', label: 'Account' },\r\n  { value: 'tab2', label: 'Password' },\r\n  { value: 'tab3', label: 'Settings' },\r\n]"
            },
            {
                "name": "BasicThemeTest",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/simple-theme-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div style=\"padding: 2rem; min-height: 100vh; background-color: var(--background); color: var(--foreground);\">\r\n        <h1 style=\"color: var(--foreground); margin-bottom: 2rem;\">Simple Theme Test</h1>\r\n\r\n        <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-bottom: 2rem;\">\r\n\r\n          <div style=\"padding: 1rem; background-color: var(--primary); color: var(--primary-foreground); border-radius: 8px;\">\r\n            <h3>Primary</h3>\r\n            <p>Background: var(--primary)</p>\r\n            <p>Text: var(--primary-foreground)</p>\r\n          </div>\r\n\r\n          <div style=\"padding: 1rem; background-color: var(--secondary); color: var(--secondary-foreground); border-radius: 8px;\">\r\n            <h3>Secondary</h3>\r\n            <p>Background: var(--secondary)</p>\r\n            <p>Text: var(--secondary-foreground)</p>\r\n          </div>\r\n\r\n          <div style=\"padding: 1rem; background-color: var(--card); color: var(--card-foreground); border: 1px solid var(--border); border-radius: 8px;\">\r\n            <h3>Card</h3>\r\n            <p>Background: var(--card)</p>\r\n            <p>Border: var(--border)</p>\r\n          </div>\r\n\r\n          <div style=\"padding: 1rem; background-color: var(--muted); color: var(--muted-foreground); border-radius: 8px;\">\r\n            <h3>Muted</h3>\r\n            <p>Background: var(--muted)</p>\r\n            <p>Text: var(--muted-foreground)</p>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div style=\"margin-bottom: 2rem;\">\r\n          <h2 style=\"margin-bottom: 1rem;\">Manual Theme Switch</h2>\r\n          <button\r\n            style=\"padding: 0.5rem 1rem; margin-right: 0.5rem; background-color: var(--primary); color: var(--primary-foreground); border: none; border-radius: 4px; cursor: pointer;\"\r\n            onclick=\"\r\n              document.documentElement.setAttribute('data-mode', 'light');\r\n              document.documentElement.classList.remove('dark');\r\n              console.log('🎨 Manual: Switched to Light');\r\n              console.log('🎨 Current data-mode:', document.documentElement.getAttribute('data-mode'));\r\n              console.log('🎨 Current classes:', document.documentElement.className);\r\n            \">\r\n            ☀️ Light Mode\r\n          </button>\r\n          <button\r\n            style=\"padding: 0.5rem 1rem; background-color: var(--primary); color: var(--primary-foreground); border: none; border-radius: 4px; cursor: pointer;\"\r\n            onclick=\"\r\n              document.documentElement.setAttribute('data-mode', 'dark');\r\n              document.documentElement.classList.add('dark');\r\n              console.log('🎨 Manual: Switched to Dark');\r\n              console.log('🎨 Current data-mode:', document.documentElement.getAttribute('data-mode'));\r\n              console.log('🎨 Current classes:', document.documentElement.className);\r\n            \">\r\n            🌙 Dark Mode\r\n          </button>\r\n        </div>\r\n\r\n        <div style=\"padding: 1rem; background-color: var(--muted); border-radius: 8px;\">\r\n          <h3>Instructions:</h3>\r\n          <ol>\r\n            <li>Try the theme toggle in the Storybook toolbar (☀️/🌙)</li>\r\n            <li>Try the manual buttons above</li>\r\n            <li>Watch the browser console for debug logs</li>\r\n            <li>Look for color changes in the boxes above</li>\r\n          </ol>\r\n          <p><strong>Expected Result:</strong> Colors should change when switching between light and dark themes.</p>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "BottomSide",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'bottom',\r\n    open: false,\r\n    dismissible: true,\r\n    modal: true,\r\n  },\r\n}"
            },
            {
                "name": "BottomSide",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    isOpen: true,\r\n    side: 'bottom',\r\n    size: 'lg',\r\n    title: 'Quick Actions',\r\n    description: 'Frequently used actions and shortcuts.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-sheet\r\n        [isOpen]=\"isOpen\"\r\n        [side]=\"side\"\r\n        [size]=\"size\"\r\n        [title]=\"title\"\r\n        [description]=\"description\">\r\n        <div class=\"grid grid-cols-3 gap-4\">\r\n          <button class=\"p-4 border rounded hover:bg-accent\">\r\n            <div class=\"text-center\">\r\n              <div class=\"text-lg mb-2\">📊</div>\r\n              <div class=\"text-sm\">Analytics</div>\r\n            </div>\r\n          </button>\r\n          <button class=\"p-4 border rounded hover:bg-accent\">\r\n            <div class=\"text-center\">\r\n              <div class=\"text-lg mb-2\">⚙️</div>\r\n              <div class=\"text-sm\">Settings</div>\r\n            </div>\r\n          </button>\r\n          <button class=\"p-4 border rounded hover:bg-accent\">\r\n            <div class=\"text-center\">\r\n              <div class=\"text-lg mb-2\">💬</div>\r\n              <div class=\"text-sm\">Support</div>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </mi-sheet>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "BrokenImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-4\">\r\n        <mi-avatar src=\"https://broken-url.jpg\" fallback=\"AB\" size=\"sm\"></mi-avatar>\r\n        <mi-avatar src=\"https://broken-url.jpg\" fallback=\"CD\" size=\"default\"></mi-avatar>\r\n        <mi-avatar src=\"https://broken-url.jpg\" fallback=\"EF\" size=\"lg\"></mi-avatar>\r\n        <mi-avatar src=\"https://broken-url.jpg\" fallback=\"GH\" size=\"xl\"></mi-avatar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Card",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 border border-gray-200 dark:border-gray-700 rounded-lg p-6\">\r\n        <div class=\"flex items-center space-x-4 mb-4\">\r\n          <mi-skeleton variant=\"avatar\" width=\"40px\" height=\"40px\"></mi-skeleton>\r\n          <div class=\"space-y-2 flex-1\">\r\n            <mi-skeleton variant=\"text\" width=\"120px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"80px\"></mi-skeleton>\r\n          </div>\r\n        </div>\r\n        <div class=\"space-y-2\">\r\n          <mi-skeleton variant=\"text\" width=\"100%\"></mi-skeleton>\r\n          <mi-skeleton variant=\"text\" width=\"100%\"></mi-skeleton>\r\n          <mi-skeleton variant=\"text\" width=\"60%\"></mi-skeleton>\r\n        </div>\r\n        <div class=\"mt-4 flex justify-between\">\r\n          <mi-skeleton variant=\"button\" width=\"80px\"></mi-skeleton>\r\n          <mi-skeleton variant=\"button\" width=\"60px\"></mi-skeleton>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Checked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    checked: true,\r\n    disabled: false,\r\n    size: 'default',\r\n  },\r\n}"
            },
            {
                "name": "commandGroups",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/command.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CommandGroup[]",
                "defaultValue": "[\r\n  {\r\n    name: 'Suggestions',\r\n    items: [\r\n      { value: 'calendar', label: 'Calendar', icon: 'M8 2v4m8-4v4M3 10h18M5 4h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z' },\r\n      { value: 'search-emoji', label: 'Search Emoji', icon: 'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z' },\r\n      { value: 'calculator', label: 'Calculator', icon: 'M3 7v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2z' },\r\n    ]\r\n  },\r\n  {\r\n    name: 'Settings',\r\n    items: [\r\n      { value: 'profile', label: 'Profile', icon: 'M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2' },\r\n      { value: 'billing', label: 'Billing', icon: 'M3 7v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2z' },\r\n      { value: 'settings', label: 'Settings', icon: 'M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z' },\r\n    ]\r\n  }\r\n]"
            },
            {
                "name": "ComplexContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: complexContentItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    className: 'w-full',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Accordion with rich HTML content and interactive elements.',\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "complexContentItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    value: 'complex-1',\r\n    trigger: 'Rich Content Example',\r\n    content: `\r\n      <div class=\"space-y-4\">\r\n        <p class=\"text-sm text-gray-600\">This accordion item contains rich HTML content:</p>\r\n        <ul class=\"list-disc list-inside space-y-1 text-sm\">\r\n          <li>Bullet points</li>\r\n          <li>Multiple paragraphs</li>\r\n          <li>Custom styling</li>\r\n        </ul>\r\n        <div class=\"mt-4 p-3 bg-gray-100 rounded-md\">\r\n          <p class=\"text-sm font-medium\">Code Example:</p>\r\n          <code class=\"text-xs\">const example = \"Hello World\";</code>\r\n        </div>\r\n      </div>\r\n    `,\r\n    contentClass: 'p-4'\r\n  },\r\n  {\r\n    value: 'complex-2',\r\n    trigger: 'Interactive Content',\r\n    content: `\r\n      <div class=\"space-y-3\">\r\n        <p>This content includes interactive elements:</p>\r\n        <button class=\"px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600\">\r\n          Click me\r\n        </button>\r\n        <p class=\"text-sm text-gray-500\">Note: In a real app, you'd use proper Angular components for interactivity.</p>\r\n      </div>\r\n    `,\r\n    headerClass: 'bg-yellow-50',\r\n    contentClass: 'bg-yellow-25 p-4'\r\n  }\r\n]"
            },
            {
                "name": "ConfirmationDialog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    title: 'Are you absolutely sure?',\r\n    description: 'This action cannot be undone. This will permanently delete your account and remove your data from our servers.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-dialog [open]=\"open\" [title]=\"title\" [description]=\"description\">\r\n        <div slot=\"footer\" class=\"flex justify-end space-x-2\">\r\n          <mi-button variant=\"outline\">Cancel</mi-button>\r\n          <mi-button variant=\"destructive\">Delete account</mi-button>\r\n        </div>\r\n      </mi-dialog>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "ContactForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    fields: contactFormFields,\r\n    submitButtonText: 'Send Message',\r\n    showCancelButton: true,\r\n    cancelButtonText: 'Clear',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onFormSubmit: (data: any) => {\r\n        console.log('Form submitted:', data);\r\n        alert('Form submitted! Check console for data.');\r\n      },\r\n      onFormCancel: () => {\r\n        console.log('Form cancelled');\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-96\">\r\n        <mi-form\r\n          [fields]=\"fields\"\r\n          [initialValues]=\"initialValues\"\r\n          [submitButtonText]=\"submitButtonText\"\r\n          [cancelButtonText]=\"cancelButtonText\"\r\n          [showCancelButton]=\"showCancelButton\"\r\n          [loading]=\"loading\"\r\n          (formSubmit)=\"onFormSubmit($event)\"\r\n          (formCancel)=\"onFormCancel()\">\r\n        </mi-form>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "contactFormFields",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FormField[]",
                "defaultValue": "[\r\n  {\r\n    name: 'firstName',\r\n    label: 'First Name',\r\n    type: 'text',\r\n    placeholder: 'Enter your first name',\r\n    required: true,\r\n  },\r\n  {\r\n    name: 'lastName',\r\n    label: 'Last Name',\r\n    type: 'text',\r\n    placeholder: 'Enter your last name',\r\n    required: true,\r\n  },\r\n  {\r\n    name: 'email',\r\n    label: 'Email',\r\n    type: 'email',\r\n    placeholder: 'Enter your email address',\r\n    required: true,\r\n    description: 'We\\'ll never share your email with anyone else.',\r\n  },\r\n  {\r\n    name: 'message',\r\n    label: 'Message',\r\n    type: 'textarea',\r\n    placeholder: 'Enter your message',\r\n    required: true,\r\n    description: 'Tell us what you\\'re thinking about.',\r\n  },\r\n]"
            },
            {
                "name": "Countries",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: countryOptions,\r\n    placeholder: 'Select a country...',\r\n  },\r\n}"
            },
            {
                "name": "countryOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SelectOption[]",
                "defaultValue": "[\r\n  { value: 'us', label: 'United States' },\r\n  { value: 'ca', label: 'Canada' },\r\n  { value: 'uk', label: 'United Kingdom' },\r\n  { value: 'de', label: 'Germany' },\r\n  { value: 'fr', label: 'France' },\r\n  { value: 'jp', label: 'Japan' },\r\n  { value: 'au', label: 'Australia' },\r\n]"
            },
            {
                "name": "Counts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <div class=\"flex items-center gap-2\">\r\n          <span class=\"text-sm\">Notifications</span>\r\n          <mi-badge variant=\"destructive\">3</mi-badge>\r\n        </div>\r\n\r\n        <div class=\"flex items-center gap-2\">\r\n          <span class=\"text-sm\">Messages</span>\r\n          <mi-badge variant=\"default\">12</mi-badge>\r\n        </div>\r\n\r\n        <div class=\"flex items-center gap-2\">\r\n          <span class=\"text-sm\">Cart Items</span>\r\n          <mi-badge variant=\"secondary\">5</mi-badge>\r\n        </div>\r\n\r\n        <div class=\"flex items-center gap-2\">\r\n          <span class=\"text-sm\">New Updates</span>\r\n          <mi-badge variant=\"success\">2</mi-badge>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "CustomContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: 'Bell',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-alert [variant]=\"variant\" [icon]=\"icon\" [title]=\"title\" [description]=\"description\">\r\n        <p>This alert uses custom content instead of the description prop.</p>\r\n        <ul class=\"mt-2 list-disc list-inside\">\r\n          <li>Custom HTML content</li>\r\n          <li>Lists and other elements</li>\r\n          <li>More flexibility</li>\r\n        </ul>\r\n      </mi-alert>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "CustomEmpty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/command.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: simpleItems,\r\n    placeholder: 'Search for commands...',\r\n    emptyMessage: 'No commands found. Try a different search term.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 h-64 border rounded-lg\">\r\n        <mi-command\r\n          [items]=\"items\"\r\n          [placeholder]=\"placeholder\"\r\n          [emptyMessage]=\"emptyMessage\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-command>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "customIconItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    value: 'icon-1',\r\n    trigger: 'Plus/Minus Icons',\r\n    content: 'This item uses plus and minus icons instead of chevrons.',\r\n    expandIcon: 'Minus',\r\n    collapseIcon: 'Plus'\r\n  },\r\n  {\r\n    value: 'icon-2',\r\n    trigger: 'Caret Icons',\r\n    content: 'This item uses caret icons for expand/collapse.',\r\n    expandIcon: 'CaretUp',\r\n    collapseIcon: 'CaretDown'\r\n  },\r\n  {\r\n    value: 'icon-3',\r\n    trigger: 'Arrow Icons', \r\n    content: 'This item uses arrow icons for a different look.',\r\n    expandIcon: 'ArrowUp',\r\n    collapseIcon: 'ArrowDown'\r\n  }\r\n]"
            },
            {
                "name": "CustomIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: customIconItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    className: 'w-full',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Accordion items with custom expand/collapse icons.',\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "CustomSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'Heart',\r\n    size: 32,\r\n    color: '#ef4444',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Icons can be customized with different sizes and colors.',\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "customStyledItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    value: 'styled-1',\r\n    trigger: 'Custom Header Style',\r\n    content: 'This item has custom header styling with blue colors.',\r\n    headerClass: 'bg-blue-50 text-blue-700 hover:bg-blue-100 border-blue-200',\r\n    contentClass: 'bg-blue-25 text-blue-800',\r\n    iconClass: 'text-blue-500'\r\n  },\r\n  {\r\n    value: 'styled-2',\r\n    trigger: 'Green Themed Item',\r\n    content: 'This item uses green theme colors for a different look.',\r\n    headerClass: 'bg-green-50 text-green-700 hover:bg-green-100',\r\n    contentClass: 'bg-green-25',\r\n    contentStyle: { backgroundColor: '#f0f9f0' }\r\n  },\r\n  {\r\n    value: 'styled-3',\r\n    trigger: 'Purple Accent',\r\n    content: 'Purple themed accordion item with custom styling.',\r\n    headerClass: 'bg-purple-50 text-purple-700 hover:bg-purple-100',\r\n    contentClass: 'bg-purple-25 p-6 rounded-lg'\r\n  }\r\n]"
            },
            {
                "name": "CustomStyling",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: customStyledItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    className: 'w-full',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Accordion with custom header and content styling per item.',\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "DeepNavigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      { label: 'Dashboard', href: '#' },\r\n      { label: 'Projects', href: '#' },\r\n      { label: 'Web Development', href: '#' },\r\n      { label: 'Frontend', href: '#' },\r\n      { label: 'Angular', href: '#' },\r\n      { label: 'Components', href: '#' },\r\n      { label: 'UI Library' }\r\n    ]\r\n  }\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: defaultItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    className: 'w-full',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: 'Info',\r\n    title: 'Info',\r\n    description: 'This is a default alert with some information.',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    ratio: 'video',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-aspect-ratio [ratio]=\"ratio\" class=\"bg-muted rounded-md overflow-hidden\">\r\n        <img\r\n          src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\r\n          alt=\"Photo by Drew Beamer\"\r\n          class=\"h-full w-full object-cover\"\r\n        />\r\n      </mi-aspect-ratio>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-avatar\r\n        [size]=\"size\"\r\n        [src]=\"src\"\r\n        [alt]=\"alt\"\r\n        [fallback]=\"fallback\"\r\n        [class]=\"class\">\r\n      </mi-avatar>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-badge [variant]=\"variant\" [size]=\"size\" [class]=\"class\">\r\n        Badge\r\n      </mi-badge>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'default',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      handleClick: (event: Event) => {\n        console.log('Story button clicked!', event);\n        alert('Button clicked!');\n      }\n    },\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\"\n      (buttonClick)=\"handleClick($event)\">\n      Button\n    </mi-button>`,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-card [variant]=\"variant\" [class]=\"class\" style=\"width: 350px;\">\r\n        <mi-card-header>\r\n          <mi-card-title>Card Title</mi-card-title>\r\n          <mi-card-description>Card description goes here. This provides context about the card's content.</mi-card-description>\r\n        </mi-card-header>\r\n        <mi-card-content>\r\n          <p>This is the main content area of the card. You can put any content here, including text, images, forms, or other components.</p>\r\n        </mi-card-content>\r\n        <mi-card-footer>\r\n          <mi-button variant=\"default\">Action</mi-button>\r\n          <mi-button variant=\"outline\" class=\"ml-2\">Cancel</mi-button>\r\n        </mi-card-footer>\r\n      </mi-card>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/carousel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    slides: [1, 2, 3, 4, 5],\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 max-w-xs\">\r\n        <mi-carousel [slides]=\"slides\" [autoPlay]=\"autoPlay\" [loop]=\"loop\" [showPrevNext]=\"showPrevNext\" [showDots]=\"showDots\">\r\n        </mi-carousel>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-checkbox\r\n        [size]=\"size\"\r\n        [checked]=\"checked\"\r\n        [indeterminate]=\"indeterminate\"\r\n        [disabled]=\"disabled\"\r\n        [class]=\"class\">\r\n        Accept terms and conditions\r\n      </mi-checkbox>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    open: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      isOpen: args.open,\r\n      onToggle: () => {\r\n        args.open = !args.open;\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"w-[350px] space-y-2\">\r\n        <h4 class=\"text-sm font-medium\">\r\n          @peduarte starred 3 repositories\r\n        </h4>\r\n        <mi-collapsible [open]=\"isOpen\" (openChange)=\"onToggle()\">\r\n          <mi-collapsible-trigger [open]=\"isOpen\" [disabled]=\"disabled\" (trigger)=\"onToggle()\">\r\n            Can I use this in my project?\r\n          </mi-collapsible-trigger>\r\n          <mi-collapsible-content [open]=\"isOpen\">\r\n            <div class=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n              @radix-ui/react-collapsible\r\n            </div>\r\n            <div class=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n              @radix-ui/react-accordion\r\n            </div>\r\n            <div class=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n              @radix-ui/react-dropdown-menu\r\n            </div>\r\n          </mi-collapsible-content>\r\n        </mi-collapsible>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: defaultOptions,\r\n    placeholder: 'Select framework...',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <mi-combobox\r\n          [options]=\"options\"\r\n          [placeholder]=\"placeholder\"\r\n          [disabled]=\"disabled\"\r\n          [searchable]=\"searchable\"\r\n          [value]=\"value\">\r\n        </mi-combobox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/command.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: simpleItems,\r\n    placeholder: 'Type a command or search...',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 h-64 border rounded-lg\">\r\n        <mi-command\r\n          [items]=\"items\"\r\n          [placeholder]=\"placeholder\"\r\n          [emptyMessage]=\"emptyMessage\"\r\n          [showSearch]=\"showSearch\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-command>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/context-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    menuItems: defaultMenuItems,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onItemSelected: (item: ContextMenuItem) => {\r\n        console.log('Selected:', item.label);\r\n      }\r\n    },\r\n    template: `\r\n      <mi-context-menu [menuItems]=\"menuItems\" (itemSelected)=\"onItemSelected($event)\">\r\n        <div class=\"flex h-[150px] w-[300px] items-center justify-center rounded-md border border-dashed text-sm\">\r\n          Right click here\r\n        </div>\r\n      </mi-context-menu>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    data: sampleUsers,\r\n    columns: userColumns,\r\n    pageSize: 5,\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Pick a date',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onDateSelect: (date: Date) => {\r\n        console.log('Date selected:', date);\r\n      },\r\n      onValueChange: (date: Date) => {\r\n        console.log('Value changed:', date);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <label class=\"text-sm font-medium mb-2 block\">Select Date</label>\r\n        <mi-date-picker\r\n          [value]=\"value\"\r\n          [placeholder]=\"placeholder\"\r\n          [disabled]=\"disabled\"\r\n          [minDate]=\"minDate\"\r\n          [maxDate]=\"maxDate\"\r\n          [format]=\"format\"\r\n          [showToday]=\"showToday\"\r\n          (dateSelect)=\"onDateSelect($event)\"\r\n          (valueChange)=\"onValueChange($event)\">\r\n        </mi-date-picker>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    title: 'Dialog Title',\r\n    description: 'This is a dialog description that provides more context.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-dialog [open]=\"open\" [title]=\"title\" [description]=\"description\">\r\n        <p>This is the dialog content. You can put any content here.</p>\r\n        <div slot=\"footer\" class=\"flex justify-end space-x-2\">\r\n          <mi-button variant=\"outline\">Cancel</mi-button>\r\n          <mi-button>Confirm</mi-button>\r\n        </div>\r\n      </mi-dialog>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'right',\r\n    open: false,\r\n    dismissible: true,\r\n    modal: true,\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onItemClick(item: DropdownMenuItem) {\r\n        console.log('Clicked item:', item);\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"p-8 flex justify-center\">\r\n        <mi-dropdown-menu [items]=\"items\" [placement]=\"placement\" (itemClick)=\"onItemClick($event)\">\r\n          <mi-button variant=\"outline\">Open Menu</mi-button>\r\n        </mi-dropdown-menu>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/hover-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'bottom',\r\n    openDelay: 700,\r\n    closeDelay: 300,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-hover-card [side]=\"side\" [openDelay]=\"openDelay\" [closeDelay]=\"closeDelay\">\r\n        <a\r\n          slot=\"trigger\"\r\n          class=\"inline-block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground\"\r\n          href=\"https://twitter.com/nextjs\"\r\n          target=\"_blank\"\r\n        >\r\n          <div class=\"text-sm font-medium leading-none\">@nextjs</div>\r\n          <p class=\"line-clamp-2 text-sm leading-snug text-muted-foreground\">\r\n            The React Framework – created and maintained by @vercel.\r\n          </p>\r\n        </a>\r\n\r\n        <div class=\"flex justify-between space-x-4\">\r\n          <div class=\"space-y-1\">\r\n            <h4 class=\"text-sm font-semibold\">@nextjs</h4>\r\n            <p class=\"text-sm\">\r\n              The React Framework – created and maintained by @vercel.\r\n            </p>\r\n            <div class=\"flex items-center pt-2\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                stroke-width=\"2\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                class=\"mr-2 h-4 w-4 opacity-70\">\r\n                <rect width=\"20\" height=\"14\" x=\"2\" y=\"3\" rx=\"2\" ry=\"2\"/>\r\n                <path d=\"m22 3-10 9L2 3\"/>\r\n              </svg>\r\n              <span class=\"text-xs text-muted-foreground\">\r\n                Joined December 2021\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mi-hover-card>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'Check',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    length: 6,\r\n    autoFocus: true,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onComplete: (value: string) => {\r\n        console.log('OTP completed:', value);\r\n        alert(`OTP completed: ${value}`);\r\n      },\r\n      onChange: (value: string) => {\r\n        console.log('OTP changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Enter verification code</label>\r\n        <mi-input-otp\r\n          [length]=\"length\"\r\n          [value]=\"value\"\r\n          [disabled]=\"disabled\"\r\n          [autoFocus]=\"autoFocus\"\r\n          [allowAlphanumeric]=\"allowAlphanumeric\"\r\n          [hasError]=\"hasError\"\r\n          [errorMessage]=\"errorMessage\"\r\n          [description]=\"description\"\r\n          (complete)=\"onComplete($event)\"\r\n          (change)=\"onChange($event)\">\r\n        </mi-input-otp>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Enter your text...',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'default',\r\n    for: 'email',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex flex-col gap-2\">\r\n        <mi-label [for]=\"for\" [size]=\"size\">Email address</mi-label>\r\n        <input id=\"email\" type=\"email\" class=\"px-3 py-2 border border-gray-300 rounded-md\" placeholder=\"Enter your email\" />\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    menus: defaultMenus,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onItemSelect: (event: any) => {\r\n        console.log('Menu item selected:', event);\r\n        alert(`Selected: ${event.item.label} from ${event.menu.label} menu`);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-full max-w-md\">\r\n        <mi-menubar\r\n          [menus]=\"menus\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-menubar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    orientation: 'horizontal',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/pagination.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    currentPage: 1,\r\n    totalPages: 10,\r\n    siblingCount: 1,\r\n    showFirstLast: true,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onPageChange: (page: number) => {\r\n        console.log('Page changed to:', page);\r\n        args.currentPage = page;\r\n      }\r\n    },\r\n    template: `\r\n      <mi-pagination\r\n        [currentPage]=\"currentPage\"\r\n        [totalPages]=\"totalPages\"\r\n        [siblingCount]=\"siblingCount\"\r\n        [showFirstLast]=\"showFirstLast\"\r\n        [disabled]=\"disabled\"\r\n        (pageChange)=\"onPageChange($event)\">\r\n      </mi-pagination>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"p-8 flex justify-center\">\r\n        <mi-popover [content]=\"content\" [placement]=\"placement\" [offset]=\"offset\">\r\n          <mi-button>Open Popover</mi-button>\r\n        </mi-popover>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/progress.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 60,\r\n    max: 100,\r\n    size: 'default',\r\n    variant: 'default',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80\">\r\n        <mi-progress [value]=\"value\" [max]=\"max\" [size]=\"size\" [variant]=\"variant\"></mi-progress>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/radio-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'default-radio',\r\n    options: [\r\n      { value: 'option1', label: 'Option 1' },\r\n      { value: 'option2', label: 'Option 2' },\r\n      { value: 'option3', label: 'Option 3' },\r\n    ],\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'md',\r\n    hideScrollbar: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-scroll-area [size]=\"size\" [hideScrollbar]=\"hideScrollbar\" class=\"w-48 border rounded-md\">\r\n        <div class=\"p-4\">\r\n          <h4 class=\"mb-4 text-sm font-medium leading-none\">Tags</h4>\r\n          <div class=\"text-sm\">\r\n            <div class=\"mb-2\">v1.2.0-beta</div>\r\n            <div class=\"mb-2\">v1.1.0-alpha</div>\r\n            <div class=\"mb-2\">v1.0.0</div>\r\n            <div class=\"mb-2\">v0.9.0</div>\r\n            <div class=\"mb-2\">v0.8.0</div>\r\n            <div class=\"mb-2\">v0.7.0</div>\r\n            <div class=\"mb-2\">v0.6.0</div>\r\n            <div class=\"mb-2\">v0.5.0</div>\r\n            <div class=\"mb-2\">v0.4.0</div>\r\n            <div class=\"mb-2\">v0.3.0</div>\r\n            <div class=\"mb-2\">v0.2.0</div>\r\n            <div class=\"mb-2\">v0.1.0</div>\r\n          </div>\r\n        </div>\r\n      </mi-scroll-area>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: basicOptions,\r\n    placeholder: 'Select a fruit...',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    isOpen: true,\r\n    title: 'Edit Profile',\r\n    description: 'Make changes to your profile here. Click save when you\\'re done.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div>\r\n        <mi-sheet\r\n          [isOpen]=\"isOpen\"\r\n          [side]=\"side\"\r\n          [size]=\"size\"\r\n          [title]=\"title\"\r\n          [description]=\"description\"\r\n          [closeOnBackdropClick]=\"closeOnBackdropClick\"\r\n          [showCloseButton]=\"showCloseButton\"\r\n          [closeOnEscape]=\"closeOnEscape\">\r\n          <div class=\"grid gap-4 py-4\">\r\n            <div class=\"grid grid-cols-4 items-center gap-4\">\r\n              <label class=\"text-right text-sm font-medium\">Name</label>\r\n              <input class=\"col-span-3 flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\" value=\"Pedro Duarte\" />\r\n            </div>\r\n            <div class=\"grid grid-cols-4 items-center gap-4\">\r\n              <label class=\"text-right text-sm font-medium\">Username</label>\r\n              <input class=\"col-span-3 flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\" value=\"@peduarte\" />\r\n            </div>\r\n          </div>\r\n          <div slot=\"footer\" class=\"space-x-2\">\r\n            <button class=\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2\">\r\n              Save changes\r\n            </button>\r\n          </div>\r\n        </mi-sheet>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'left',\r\n    variant: 'sidebar',\r\n    collapsible: 'offcanvas',\r\n    className: '',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'default',\r\n    width: '200px',\r\n    height: '20px',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    min: 0,\r\n    max: 100,\r\n    step: 1,\r\n    orientation: 'horizontal',\r\n    size: 'md',\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      currentValue: 50,\r\n    },\r\n    template: `\r\n      <div class=\"w-80 space-y-4\">\r\n        <mi-slider\r\n          [min]=\"min\"\r\n          [max]=\"max\"\r\n          [step]=\"step\"\r\n          [orientation]=\"orientation\"\r\n          [size]=\"size\"\r\n          [disabled]=\"disabled\">\r\n        </mi-slider>\r\n        <div class=\"text-sm text-muted-foreground\">\r\n          Value: {{ currentValue }}\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    toasts: [],\r\n    showIcon: true,\r\n    maxToasts: 5,\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    checked: false,\r\n    disabled: false,\r\n    size: 'default',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    tabs: basicTabs,\r\n    defaultValue: 'tab1',\r\n    variant: 'default',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-96\">\r\n        <mi-tabs [tabs]=\"tabs\" [defaultValue]=\"defaultValue\" [variant]=\"variant\">\r\n          <div class=\"mt-4 p-4 border border-gray-200 dark:border-gray-700 rounded-md\">\r\n            <h3 class=\"text-lg font-medium mb-2\">Account Information</h3>\r\n            <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              Make changes to your account here. Click save when you're done.\r\n            </p>\r\n          </div>\r\n        </mi-tabs>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Enter your message...',\r\n    rows: 4,\r\n    disabled: false,\r\n    readonly: false,\r\n    variant: 'default',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    title: 'Notification',\r\n    description: 'Your message has been sent successfully.',\r\n    variant: 'default',\r\n    closable: true,\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: textFormattingItems,\r\n    value: 'bold',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Value changed:', value);\r\n      },\r\n      onSelectionChange: (event: any) => {\r\n        console.log('Selection changed:', event);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Text Formatting</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          [multiple]=\"multiple\"\r\n          [disabled]=\"disabled\"\r\n          [variant]=\"variant\"\r\n          [size]=\"size\"\r\n          [orientation]=\"orientation\"\r\n          (valueChange)=\"onValueChange($event)\"\r\n          (selectionChange)=\"onSelectionChange($event)\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'default',\r\n    size: 'default',\r\n    pressed: false,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-toggle\r\n        [variant]=\"variant\"\r\n        [size]=\"size\"\r\n        [pressed]=\"pressed\"\r\n        [disabled]=\"disabled\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          class=\"h-4 w-4\">\r\n          <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"/>\r\n        </svg>\r\n      </mi-toggle>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    content: 'This is a tooltip',\r\n    variant: 'default',\r\n    side: 'top',\r\n    delay: 500,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-tooltip [content]=\"content\" [variant]=\"variant\" [side]=\"side\" [delay]=\"delay\">\r\n        <button class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n          Hover me\r\n        </button>\r\n      </mi-tooltip>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "defaultItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    value: 'item-1',\r\n    trigger: 'Is it accessible?',\r\n    content: 'Yes. It adheres to the WAI-ARIA design pattern.',\r\n  },\r\n  {\r\n    value: 'item-2',\r\n    trigger: 'Is it styled?',\r\n    content: 'Yes. It comes with default styles that matches the other components aesthetic.',\r\n  },\r\n  {\r\n    value: 'item-3',\r\n    trigger: 'Is it animated?',\r\n    content: \"Yes. It's animated by default, but you can disable it if you prefer.\",\r\n  },\r\n]"
            },
            {
                "name": "defaultMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/context-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ContextMenuItem[]",
                "defaultValue": "[\r\n  { label: 'Back', shortcut: '⌘[' },\r\n  { label: 'Forward', shortcut: '⌘]', disabled: true },\r\n  { label: 'Reload', shortcut: '⌘R' },\r\n  { label: 'More Tools', children: [\r\n    { label: 'Save Page As...', shortcut: '⌘⇧S' },\r\n    { label: 'Create Shortcut...' },\r\n    { label: 'Name Window...' },\r\n  ]},\r\n  { label: 'Developer Tools', shortcut: '⌘⇧I' },\r\n]"
            },
            {
                "name": "defaultMenus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenubarMenu[]",
                "defaultValue": "[\r\n  {\r\n    label: 'File',\r\n    value: 'file',\r\n    items: [\r\n      {\r\n        label: 'New Tab',\r\n        value: 'new-tab',\r\n        shortcut: '⌘T',\r\n        icon: 'M5 12h14m-7-7v14'\r\n      },\r\n      {\r\n        label: 'New Window',\r\n        value: 'new-window',\r\n        shortcut: '⌘N',\r\n        icon: 'M8 2v4m8-4v4M3 10h18M5 4h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z'\r\n      },\r\n      { separator: true },\r\n      {\r\n        label: 'Share',\r\n        value: 'share',\r\n        children: [\r\n          {\r\n            label: 'Email Link',\r\n            value: 'email-link',\r\n            icon: 'M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z'\r\n          },\r\n          {\r\n            label: 'Copy Link',\r\n            value: 'copy-link',\r\n            icon: 'M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71'\r\n          },\r\n          {\r\n            label: 'Social Media',\r\n            value: 'social-media',\r\n            icon: 'M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z'\r\n          }\r\n        ]\r\n      },\r\n      { separator: true },\r\n      {\r\n        label: 'Print',\r\n        value: 'print',\r\n        shortcut: '⌘P',\r\n        icon: 'M6 9V2h12v7M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2M6 14h12v8H6z'\r\n      },\r\n      {\r\n        label: 'Exit',\r\n        value: 'exit',\r\n        shortcut: '⌘Q'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Edit',\r\n    value: 'edit',\r\n    items: [\r\n      {\r\n        label: 'Undo',\r\n        value: 'undo',\r\n        shortcut: '⌘Z',\r\n        icon: 'M3 7v6h6M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13'\r\n      },\r\n      {\r\n        label: 'Redo',\r\n        value: 'redo',\r\n        shortcut: '⌘Y',\r\n        icon: 'M21 7v6h-6M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3-2.3'\r\n      },\r\n      { separator: true },\r\n      {\r\n        label: 'Cut',\r\n        value: 'cut',\r\n        shortcut: '⌘X',\r\n        icon: 'M6 6l12 12M6 18L18 6'\r\n      },\r\n      {\r\n        label: 'Copy',\r\n        value: 'copy',\r\n        shortcut: '⌘C',\r\n        icon: 'M20 9H11a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-9a2 2 0 0 0-2-2z'\r\n      },\r\n      {\r\n        label: 'Paste',\r\n        value: 'paste',\r\n        shortcut: '⌘V',\r\n        icon: 'M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2'\r\n      },\r\n      { separator: true },\r\n      {\r\n        label: 'Find',\r\n        value: 'find',\r\n        shortcut: '⌘F',\r\n        icon: 'm21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z'\r\n      },\r\n      {\r\n        label: 'Replace',\r\n        value: 'replace',\r\n        shortcut: '⌘H'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: 'View',\r\n    value: 'view',\r\n    items: [\r\n      {\r\n        label: 'Zoom In',\r\n        value: 'zoom-in',\r\n        shortcut: '⌘+',\r\n        icon: 'm21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z'\r\n      },\r\n      {\r\n        label: 'Zoom Out',\r\n        value: 'zoom-out',\r\n        shortcut: '⌘-',\r\n        icon: 'm21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z'\r\n      },\r\n      {\r\n        label: 'Reset Zoom',\r\n        value: 'reset-zoom',\r\n        shortcut: '⌘0'\r\n      },\r\n      { separator: true },\r\n      {\r\n        label: 'Toggle Fullscreen',\r\n        value: 'fullscreen',\r\n        shortcut: 'F11',\r\n        icon: 'M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3'\r\n      },\r\n      {\r\n        label: 'Toggle Sidebar',\r\n        value: 'toggle-sidebar',\r\n        shortcut: '⌘B'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Help',\r\n    value: 'help',\r\n    items: [\r\n      {\r\n        label: 'Documentation',\r\n        value: 'docs',\r\n        icon: 'M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z'\r\n      },\r\n      {\r\n        label: 'Keyboard Shortcuts',\r\n        value: 'shortcuts',\r\n        shortcut: '⌘/'\r\n      },\r\n      { separator: true },\r\n      {\r\n        label: 'Report Issue',\r\n        value: 'report-issue',\r\n        icon: 'M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z'\r\n      },\r\n      {\r\n        label: 'About',\r\n        value: 'about',\r\n        icon: 'm21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z'\r\n      }\r\n    ]\r\n  }\r\n]"
            },
            {
                "name": "defaultOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ComboboxOption[]",
                "defaultValue": "[\r\n  { value: 'next.js', label: 'Next.js' },\r\n  { value: 'sveltekit', label: 'SvelteKit' },\r\n  { value: 'nuxt.js', label: 'Nuxt.js' },\r\n  { value: 'remix', label: 'Remix' },\r\n  { value: 'astro', label: 'Astro' },\r\n  { value: 'wordpress', label: 'WordPress', disabled: true },\r\n]"
            },
            {
                "name": "DescriptionOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: 'Info',\r\n    description: 'This alert only has a description with no title.',\r\n  },\r\n}"
            },
            {
                "name": "Destructive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    destructive: true,\r\n    title: 'Delete Account',\r\n    description: 'This action cannot be undone. This will permanently delete your account and remove your data from our servers.',\r\n    confirmText: 'Delete Account',\r\n  },\r\n}"
            },
            {
                "name": "Destructive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'destructive',\r\n    icon: 'AlertTriangle',\r\n    title: 'Error',\r\n    description: 'This is a destructive alert indicating an error.',\r\n  },\r\n}"
            },
            {
                "name": "Destructive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'destructive' },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      Destructive\n    </mi-button>`,\n  }),\n}"
            },
            {
                "name": "Destructive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'destructive',\r\n    placeholder: 'This field has an error',\r\n    value: 'Invalid input',\r\n  },\r\n}"
            },
            {
                "name": "DifferentFormats",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    props: {\r\n      onDateSelect: (date: Date, format: string) => {\r\n        console.log(`Date selected in ${format}:`, date);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <div class=\"w-64\">\r\n          <label class=\"text-sm font-medium mb-2 block\">MM/dd/yyyy Format</label>\r\n          <mi-date-picker\r\n            placeholder=\"Select date\"\r\n            format=\"MM/dd/yyyy\"\r\n            (dateSelect)=\"onDateSelect($event, 'MM/dd/yyyy')\">\r\n          </mi-date-picker>\r\n        </div>\r\n\r\n        <div class=\"w-64\">\r\n          <label class=\"text-sm font-medium mb-2 block\">dd/MM/yyyy Format</label>\r\n          <mi-date-picker\r\n            placeholder=\"Select date\"\r\n            format=\"dd/MM/yyyy\"\r\n            (dateSelect)=\"onDateSelect($event, 'dd/MM/yyyy')\">\r\n          </mi-date-picker>\r\n        </div>\r\n\r\n        <div class=\"w-64\">\r\n          <label class=\"text-sm font-medium mb-2 block\">yyyy-MM-dd Format</label>\r\n          <mi-date-picker\r\n            placeholder=\"Select date\"\r\n            format=\"yyyy-MM-dd\"\r\n            (dateSelect)=\"onDateSelect($event, 'yyyy-MM-dd')\">\r\n          </mi-date-picker>\r\n        </div>\r\n\r\n        <div class=\"w-64\">\r\n          <label class=\"text-sm font-medium mb-2 block\">MMM dd, yyyy Format</label>\r\n          <mi-date-picker\r\n            placeholder=\"Select date\"\r\n            format=\"MMM dd, yyyy\"\r\n            (dateSelect)=\"onDateSelect($event, 'MMM dd, yyyy')\">\r\n          </mi-date-picker>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "DifferentIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <mi-alert icon=\"CheckCircle\" title=\"Success\"\r\n                  description=\"Operation completed successfully.\">\r\n        </mi-alert>\r\n\r\n        <mi-alert icon=\"Info\" title=\"Information\"\r\n                  description=\"Here's some helpful information.\">\r\n        </mi-alert>\r\n\r\n        <mi-alert icon=\"AlertCircle\" title=\"Warning\"\r\n                  description=\"Please pay attention to this warning.\">\r\n        </mi-alert>\r\n\r\n        <mi-alert variant=\"destructive\" icon=\"XCircle\" title=\"Error\"\r\n                  description=\"Something went wrong.\">\r\n        </mi-alert>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "DifferentPlacements",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"p-16 flex justify-center items-center gap-8\">\r\n        <mi-popover content=\"Top placement\" placement=\"top\">\r\n          <mi-button variant=\"outline\">Top</mi-button>\r\n        </mi-popover>\r\n\r\n        <mi-popover content=\"Bottom placement\" placement=\"bottom\">\r\n          <mi-button variant=\"outline\">Bottom</mi-button>\r\n        </mi-popover>\r\n\r\n        <mi-popover content=\"Left placement\" placement=\"left\">\r\n          <mi-button variant=\"outline\">Left</mi-button>\r\n        </mi-popover>\r\n\r\n        <mi-popover content=\"Right placement\" placement=\"right\">\r\n          <mi-button variant=\"outline\">Right</mi-button>\r\n        </mi-popover>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { disabled: true },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      Disabled\n    </mi-button>`,\n  }),\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    disabled: true,\r\n  },\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: defaultOptions,\r\n    placeholder: 'Select framework...',\r\n    disabled: true,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <mi-combobox\r\n          [options]=\"options\"\r\n          [placeholder]=\"placeholder\"\r\n          [disabled]=\"disabled\">\r\n        </mi-combobox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    disabled: true,\r\n    value: new Date(),\r\n    placeholder: 'Date picker is disabled',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <label class=\"text-sm font-medium mb-2 block\">Disabled Date Picker</label>\r\n        <mi-date-picker\r\n          [value]=\"value\"\r\n          [placeholder]=\"placeholder\"\r\n          [disabled]=\"disabled\">\r\n        </mi-date-picker>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    length: 6,\r\n    disabled: true,\r\n    value: '123456',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Verification code (disabled)</label>\r\n        <mi-input-otp\r\n          [length]=\"length\"\r\n          [disabled]=\"disabled\"\r\n          [value]=\"value\">\r\n        </mi-input-otp>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/radio-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'disabled-radio',\r\n    disabled: true,\r\n    options: [\r\n      { value: 'option1', label: 'Option 1' },\r\n      { value: 'option2', label: 'Option 2' },\r\n      { value: 'option3', label: 'Option 3' },\r\n    ],\r\n  },\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: basicOptions,\r\n    placeholder: 'Select a fruit...',\r\n    disabled: true,\r\n  },\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    min: 0,\r\n    max: 100,\r\n    step: 1,\r\n    orientation: 'horizontal',\r\n    size: 'md',\r\n    disabled: true,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      currentValue: 75,\r\n    },\r\n    template: `\r\n      <div class=\"w-80 space-y-4\">\r\n        <mi-slider\r\n          [min]=\"min\"\r\n          [max]=\"max\"\r\n          [step]=\"step\"\r\n          [orientation]=\"orientation\"\r\n          [size]=\"size\"\r\n          [disabled]=\"disabled\">\r\n        </mi-slider>\r\n        <div class=\"text-sm text-muted-foreground\">\r\n          Disabled slider, Value: {{ currentValue }}\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    checked: false,\r\n    disabled: true,\r\n    size: 'default',\r\n  },\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: textFormattingItems,\r\n    disabled: true,\r\n    value: 'bold',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Disabled</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          [disabled]=\"disabled\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'default',\r\n    size: 'default',\r\n    pressed: false,\r\n    disabled: true,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-toggle\r\n        [variant]=\"variant\"\r\n        [size]=\"size\"\r\n        [pressed]=\"pressed\"\r\n        [disabled]=\"disabled\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          class=\"h-4 w-4\">\r\n          <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"/>\r\n        </svg>\r\n      </mi-toggle>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "EightDigit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    length: 8,\r\n    description: 'Enter the 8-digit backup code.',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onComplete: (value: string) => {\r\n        console.log('8-digit backup code completed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Backup Code</label>\r\n        <mi-input-otp\r\n          [length]=\"length\"\r\n          [description]=\"description\"\r\n          (complete)=\"onComplete($event)\">\r\n        </mi-input-otp>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Elevated",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'elevated',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-card [variant]=\"variant\" [class]=\"class\" style=\"width: 350px;\">\r\n        <mi-card-header>\r\n          <mi-card-title>Elevated Card</mi-card-title>\r\n          <mi-card-description>This card has more prominent shadow for emphasis.</mi-card-description>\r\n        </mi-card-header>\r\n        <mi-card-content>\r\n          <p>Elevated cards are great for highlighting important content or creating visual hierarchy.</p>\r\n        </mi-card-content>\r\n      </mi-card>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "EmptyState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    data: [],\r\n    columns: userColumns,\r\n    emptyMessage: 'No users found. Try adjusting your filters.',\r\n  },\r\n}"
            },
            {
                "name": "ExtraLarge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'xl',\r\n    className: '',\r\n  },\r\n}"
            },
            {
                "name": "FewPages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/pagination.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    currentPage: 2,\r\n    totalPages: 5,\r\n    siblingCount: 1,\r\n    showFirstLast: true,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onPageChange: (page: number) => {\r\n        console.log('Page changed to:', page);\r\n        args.currentPage = page;\r\n      }\r\n    },\r\n    template: `\r\n      <mi-pagination\r\n        [currentPage]=\"currentPage\"\r\n        [totalPages]=\"totalPages\"\r\n        [siblingCount]=\"siblingCount\"\r\n        [showFirstLast]=\"showFirstLast\"\r\n        [disabled]=\"disabled\"\r\n        (pageChange)=\"onPageChange($event)\">\r\n      </mi-pagination>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "FileMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      items: [\r\n        { label: 'New File', value: 'new', shortcut: '⌘N' },\r\n        { label: 'Open File', value: 'open', shortcut: '⌘O' },\r\n        { label: 'Open Recent', value: 'recent', shortcut: '⌘⇧O' },\r\n        { separator: true, label: '' },\r\n        { label: 'Save', value: 'save', shortcut: '⌘S' },\r\n        { label: 'Save As...', value: 'saveas', shortcut: '⌘⇧S' },\r\n        { separator: true, label: '' },\r\n        { label: 'Import', value: 'import' },\r\n        { label: 'Export', value: 'export', disabled: true },\r\n        { separator: true, label: '' },\r\n        { label: 'Print', value: 'print', shortcut: '⌘P' },\r\n      ],\r\n      onItemClick(item: DropdownMenuItem) {\r\n        console.log('File action:', item.value);\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"p-8 flex justify-center\">\r\n        <mi-dropdown-menu [items]=\"items\" (itemClick)=\"onItemClick($event)\">\r\n          <mi-button variant=\"ghost\">File</mi-button>\r\n        </mi-dropdown-menu>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Filled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'filled',\r\n    label: 'Full Name',\r\n    placeholder: 'Enter your full name',\r\n  },\r\n}"
            },
            {
                "name": "FilledWithDefaultLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'filled',\r\n    placeholder: 'Filled input with default label',\r\n  },\r\n}"
            },
            {
                "name": "Floating",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'floating',\r\n    label: 'Password',\r\n    type: 'password',\r\n    placeholder: 'Enter your password',\r\n  },\r\n}"
            },
            {
                "name": "Floating",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'left',\r\n    variant: 'floating',\r\n    collapsible: 'offcanvas',\r\n    className: '',\r\n  },\r\n}"
            },
            {
                "name": "FloatingLabelDemo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <h3 class=\"text-lg font-semibold\">Floating Label Examples</h3>\r\n\r\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          <!-- Filled with floating label -->\r\n          <div>\r\n            <h4 class=\"text-sm font-medium mb-3\">Filled Variant</h4>\r\n            <mi-input\r\n              variant=\"filled\"\r\n              label=\"First Name\" />\r\n          </div>\r\n\r\n          <!-- Outline with floating label -->\r\n          <div>\r\n            <h4 class=\"text-sm font-medium mb-3\">Outline Variant</h4>\r\n            <mi-input\r\n              variant=\"outline\"\r\n              label=\"Email Address\"\r\n              type=\"email\" />\r\n          </div>\r\n\r\n          <!-- Floating with floating label -->\r\n          <div>\r\n            <h4 class=\"text-sm font-medium mb-3\">Floating Variant</h4>\r\n            <mi-input\r\n              variant=\"floating\"\r\n              label=\"Phone Number\"\r\n              type=\"tel\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mt-8\">\r\n          <h4 class=\"text-sm font-medium mb-3\">With Pre-filled Values</h4>\r\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <mi-input\r\n              variant=\"filled\"\r\n              label=\"Full Name\"\r\n              value=\"John Doe\" />\r\n\r\n            <mi-input\r\n              variant=\"outline\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value=\"john@example.com\" />\r\n\r\n            <mi-input\r\n              variant=\"floating\"\r\n              label=\"Phone\"\r\n              type=\"tel\"\r\n              value=\"+1 (555) 123-4567\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "FloatingWithDefaultLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'floating',\r\n    placeholder: 'Floating input with default label',\r\n  },\r\n}"
            },
            {
                "name": "ForceDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  globals: { theme: 'dark' },\r\n}"
            },
            {
                "name": "ForceDarkMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  globals: { theme: 'dark' },\r\n}"
            },
            {
                "name": "ForceLight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  globals: { theme: 'light' },\r\n}"
            },
            {
                "name": "ForceLightMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  globals: { theme: 'light' },\r\n}"
            },
            {
                "name": "FormExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-6\" style=\"max-width: 400px;\">\r\n        <h3 class=\"text-lg font-semibold\">Privacy Settings</h3>\r\n        <div class=\"space-y-4\">\r\n          <div class=\"space-y-3\">\r\n            <h4 class=\"text-sm font-medium\">Email Notifications</h4>\r\n            <div class=\"space-y-2 ml-4\">\r\n              <mi-checkbox [checked]=\"true\">Security alerts</mi-checkbox>\r\n              <mi-checkbox>Marketing emails</mi-checkbox>\r\n              <mi-checkbox [checked]=\"true\">Product updates</mi-checkbox>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"space-y-3\">\r\n            <h4 class=\"text-sm font-medium\">Data Usage</h4>\r\n            <div class=\"space-y-2 ml-4\">\r\n              <mi-checkbox [checked]=\"true\">Analytics tracking</mi-checkbox>\r\n              <mi-checkbox>Performance monitoring</mi-checkbox>\r\n              <mi-checkbox [disabled]=\"true\">Required cookies (cannot be disabled)</mi-checkbox>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pt-4 border-t\">\r\n            <mi-checkbox [indeterminate]=\"true\">\r\n              <span class=\"font-medium\">Select all preferences</span>\r\n            </mi-checkbox>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "FormExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"max-w-md mx-auto space-y-6\">\r\n        <h3 class=\"text-xl font-semibold text-center\">User Registration</h3>\r\n\r\n        <form class=\"space-y-4\">\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Full Name\"\r\n            type=\"text\"\r\n            required />\r\n\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            required />\r\n\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Phone Number\"\r\n            type=\"tel\" />\r\n\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            required />\r\n\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            required />\r\n\r\n          <button\r\n            type=\"submit\"\r\n            class=\"w-full bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2 rounded-md font-medium transition-colors\">\r\n            Create Account\r\n          </button>\r\n        </form>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "FormExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <form class=\"flex flex-col gap-4 w-80\">\r\n        <div class=\"flex flex-col gap-2\">\r\n          <mi-label for=\"name\">Full Name</mi-label>\r\n          <input id=\"name\" type=\"text\" class=\"px-3 py-2 border border-gray-300 rounded-md dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100\" placeholder=\"John Doe\" />\r\n        </div>\r\n        <div class=\"flex flex-col gap-2\">\r\n          <mi-label for=\"email-form\">Email Address</mi-label>\r\n          <input id=\"email-form\" type=\"email\" class=\"px-3 py-2 border border-gray-300 rounded-md dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100\" placeholder=\"john@example.com\" />\r\n        </div>\r\n        <div class=\"flex items-center gap-2\">\r\n          <input id=\"terms\" type=\"checkbox\" class=\"w-4 h-4\" />\r\n          <mi-label for=\"terms\" size=\"sm\">I accept the terms and conditions</mi-label>\r\n        </div>\r\n      </form>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "FormExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <form class=\"space-y-4 max-w-md\">\r\n        <div>\r\n          <label for=\"country\" class=\"text-sm font-medium mb-2 block\">Country</label>\r\n          <mi-select\r\n            id=\"country\"\r\n            [options]=\"countryOptions\"\r\n            placeholder=\"Select your country...\"\r\n            (selectionChange)=\"onCountryChange($event)\">\r\n          </mi-select>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"fruit\" class=\"text-sm font-medium mb-2 block\">Favorite Fruit</label>\r\n          <mi-select\r\n            id=\"fruit\"\r\n            [options]=\"fruitOptions\"\r\n            placeholder=\"Select your favorite fruit...\"\r\n            (selectionChange)=\"onFruitChange($event)\">\r\n          </mi-select>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"size\" class=\"text-sm font-medium mb-2 block\">Size Preference</label>\r\n          <mi-select\r\n            id=\"size\"\r\n            [options]=\"sizeOptions\"\r\n            placeholder=\"Select size...\"\r\n            size=\"sm\">\r\n          </mi-select>\r\n        </div>\r\n\r\n        @if (selectedValues.country || selectedValues.fruit) {\r\n          <div class=\"p-4 bg-muted rounded-md\">\r\n            <h4 class=\"font-medium mb-2\">Selected Values:</h4>\r\n            <ul class=\"text-sm space-y-1\">\r\n              @if (selectedValues.country) {\r\n                <li><strong>Country:</strong> {{ selectedValues.country.label }}</li>\r\n              }\r\n              @if (selectedValues.fruit) {\r\n                <li><strong>Fruit:</strong> {{ selectedValues.fruit.label }}</li>\r\n              }\r\n            </ul>\r\n          </div>\r\n        }\r\n      </form>\r\n    `,\r\n    props: {\r\n      countryOptions: countryOptions,\r\n      fruitOptions: basicOptions,\r\n      sizeOptions: [\r\n        { value: 'xs', label: 'Extra Small' },\r\n        { value: 's', label: 'Small' },\r\n        { value: 'm', label: 'Medium' },\r\n        { value: 'l', label: 'Large' },\r\n        { value: 'xl', label: 'Extra Large' },\r\n      ],\r\n      selectedValues: {\r\n        country: null,\r\n        fruit: null,\r\n      },\r\n      onCountryChange: function(option: any) {\r\n        (this as any).selectedValues.country = option;\r\n      },\r\n      onFruitChange: function(option: any) {\r\n        (this as any).selectedValues.fruit = option;\r\n      },\r\n    },\r\n  }),\r\n}"
            },
            {
                "name": "FormExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <form class=\"flex flex-col gap-4 w-96\">\r\n        <div class=\"flex flex-col gap-2\">\r\n          <label class=\"text-sm font-medium\">Message</label>\r\n          <mi-textarea placeholder=\"Write your message here...\" rows=\"4\"></mi-textarea>\r\n          <p class=\"text-xs text-gray-500\">Your message will be sent to the support team.</p>\r\n        </div>\r\n        <div class=\"flex flex-col gap-2\">\r\n          <label class=\"text-sm font-medium\">Additional Notes</label>\r\n          <mi-textarea placeholder=\"Any additional information...\" rows=\"6\"></mi-textarea>\r\n        </div>\r\n      </form>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "FourDigit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    length: 4,\r\n    description: 'Enter the 4-digit code sent to your phone.',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onComplete: (value: string) => {\r\n        console.log('4-digit OTP completed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">SMS Verification</label>\r\n        <mi-input-otp\r\n          [length]=\"length\"\r\n          [description]=\"description\"\r\n          (complete)=\"onComplete($event)\">\r\n        </mi-input-otp>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Ghost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'ghost' },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      Ghost\n    </mi-button>`,\n  }),\n}"
            },
            {
                "name": "Grid",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\" style=\"width: 900px;\">\r\n        <mi-card variant=\"default\">\r\n          <mi-card-header>\r\n            <mi-card-title>Product A</mi-card-title>\r\n            <mi-card-description>High-quality product with excellent features.</mi-card-description>\r\n          </mi-card-header>\r\n          <mi-card-content>\r\n            <p class=\"text-2xl font-bold\">$99</p>\r\n          </mi-card-content>\r\n          <mi-card-footer>\r\n            <mi-button variant=\"default\" class=\"w-full\">Choose Plan</mi-button>\r\n          </mi-card-footer>\r\n        </mi-card>\r\n\r\n        <mi-card variant=\"elevated\">\r\n          <mi-card-header>\r\n            <mi-card-title>Product B</mi-card-title>\r\n            <mi-card-description>Premium product with advanced capabilities.</mi-card-description>\r\n          </mi-card-header>\r\n          <mi-card-content>\r\n            <p class=\"text-2xl font-bold\">$199</p>\r\n          </mi-card-content>\r\n          <mi-card-footer>\r\n            <mi-button variant=\"default\" class=\"w-full\">Choose Plan</mi-button>\r\n          </mi-card-footer>\r\n        </mi-card>\r\n\r\n        <mi-card variant=\"outline\">\r\n          <mi-card-header>\r\n            <mi-card-title>Product C</mi-card-title>\r\n            <mi-card-description>Enterprise solution for large organizations.</mi-card-description>\r\n          </mi-card-header>\r\n          <mi-card-content>\r\n            <p class=\"text-2xl font-bold\">$299</p>\r\n          </mi-card-content>\r\n          <mi-card-footer>\r\n            <mi-button variant=\"default\" class=\"w-full\">Choose Plan</mi-button>\r\n          </mi-card-footer>\r\n        </mi-card>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Horizontal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/radio-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'horizontal-radio',\r\n    orientation: 'horizontal',\r\n    options: [\r\n      { value: 'small', label: 'Small' },\r\n      { value: 'medium', label: 'Medium' },\r\n      { value: 'large', label: 'Large' },\r\n    ],\r\n  },\r\n}"
            },
            {
                "name": "Horizontal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/resizable.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    direction: 'horizontal',\r\n  },\r\n}"
            },
            {
                "name": "Horizontal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/separator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    orientation: 'horizontal',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80\">\r\n        <div class=\"space-y-1\">\r\n          <h4 class=\"text-sm font-medium leading-none\">Radix Primitives</h4>\r\n          <p class=\"text-sm text-gray-500\">An open-source UI component library.</p>\r\n        </div>\r\n        <mi-separator [orientation]=\"orientation\" class=\"my-4\"></mi-separator>\r\n        <div class=\"flex h-5 items-center space-x-4 text-sm\">\r\n          <div>Blog</div>\r\n          <mi-separator orientation=\"vertical\"></mi-separator>\r\n          <div>Docs</div>\r\n          <mi-separator orientation=\"vertical\"></mi-separator>\r\n          <div>Source</div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "HorizontalScrolling",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'md',\r\n    hideScrollbar: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-scroll-area [size]=\"size\" [hideScrollbar]=\"hideScrollbar\" class=\"w-96 border rounded-md\">\r\n        <div class=\"flex w-max space-x-4 p-4\">\r\n          <div class=\"shrink-0 bg-accent rounded-md p-4 w-48\">\r\n            <h4 class=\"mb-2 font-medium\">Card 1</h4>\r\n            <p class=\"text-sm text-muted-foreground\">\r\n              This is a card with some content that makes the container scroll horizontally.\r\n            </p>\r\n          </div>\r\n          <div class=\"shrink-0 bg-accent rounded-md p-4 w-48\">\r\n            <h4 class=\"mb-2 font-medium\">Card 2</h4>\r\n            <p class=\"text-sm text-muted-foreground\">\r\n              This is another card with content. The scroll area allows horizontal scrolling.\r\n            </p>\r\n          </div>\r\n          <div class=\"shrink-0 bg-accent rounded-md p-4 w-48\">\r\n            <h4 class=\"mb-2 font-medium\">Card 3</h4>\r\n            <p class=\"text-sm text-muted-foreground\">\r\n              A third card to demonstrate the horizontal scrolling functionality.\r\n            </p>\r\n          </div>\r\n          <div class=\"shrink-0 bg-accent rounded-md p-4 w-48\">\r\n            <h4 class=\"mb-2 font-medium\">Card 4</h4>\r\n            <p class=\"text-sm text-muted-foreground\">\r\n              And one more card to make sure we have enough content to scroll.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </mi-scroll-area>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { size: 'icon' },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      ⚙️\n    </mi-button>`,\n  }),\n}"
            },
            {
                "name": "IconCollapsible",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'left',\r\n    variant: 'sidebar',\r\n    collapsible: 'icon',\r\n    className: '',\r\n  },\r\n}"
            },
            {
                "name": "IconOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: alignmentItems,\r\n    value: 'left',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Alignment changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Text Alignment</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          (valueChange)=\"onValueChange($event)\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "IconSizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-4\">\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Home\" [size]=\"16\"></mi-icon>\r\n          <span class=\"text-xs\">16px</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Home\" [size]=\"20\"></mi-icon>\r\n          <span class=\"text-xs\">20px</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Home\" [size]=\"24\"></mi-icon>\r\n          <span class=\"text-xs\">24px</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Home\" [size]=\"32\"></mi-icon>\r\n          <span class=\"text-xs\">32px</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Home\" [size]=\"48\"></mi-icon>\r\n          <span class=\"text-xs\">48px</span>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Different icon sizes available.',\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "IconTest",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"p-4 space-y-4\">\r\n        <h2 class=\"text-lg font-bold\">Icon Test</h2>\r\n        <div class=\"space-y-2\">\r\n          <div class=\"flex items-center gap-2\">\r\n            <span>Check:</span>\r\n            <mi-icon name=\"Check\" [size]=\"24\"></mi-icon>\r\n          </div>\r\n          <div class=\"flex items-center gap-2\">\r\n            <span>Heart:</span>\r\n            <mi-icon name=\"Heart\" [size]=\"24\" class=\"text-red-500\"></mi-icon>\r\n          </div>\r\n          <div class=\"flex items-center gap-2\">\r\n            <span>ArrowRight:</span>\r\n            <mi-icon name=\"ArrowRight\" [size]=\"24\"></mi-icon>\r\n          </div>\r\n          <div class=\"flex items-center gap-2\">\r\n            <span>Loader2:</span>\r\n            <mi-icon name=\"Loader2\" [size]=\"24\" class=\"animate-spin\"></mi-icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Test component to verify icons are rendering correctly.',\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "InContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/separator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"max-w-md\">\r\n        <div class=\"space-y-1\">\r\n          <h4 class=\"text-sm font-medium leading-none\">Account Settings</h4>\r\n          <p class=\"text-sm text-gray-500 dark:text-gray-400\">Manage your account preferences.</p>\r\n        </div>\r\n        <mi-separator class=\"my-4\"></mi-separator>\r\n        <div class=\"space-y-1\">\r\n          <h4 class=\"text-sm font-medium leading-none\">Privacy Settings</h4>\r\n          <p class=\"text-sm text-gray-500 dark:text-gray-400\">Control your privacy and data usage.</p>\r\n        </div>\r\n        <mi-separator class=\"my-4\"></mi-separator>\r\n        <div class=\"space-y-1\">\r\n          <h4 class=\"text-sm font-medium leading-none\">Notification Settings</h4>\r\n          <p class=\"text-sm text-gray-500 dark:text-gray-400\">Configure how you receive notifications.</p>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "InContext",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\" style=\"max-width: 400px;\">\r\n        <div class=\"border rounded-lg p-4\">\r\n          <div class=\"flex items-center justify-between mb-2\">\r\n            <h3 class=\"font-semibold\">Project Alpha</h3>\r\n            <mi-badge variant=\"success\">Active</mi-badge>\r\n          </div>\r\n          <p class=\"text-sm text-muted-foreground mb-3\">A modern web application built with Angular and Tailwind CSS.</p>\r\n          <div class=\"flex gap-2\">\r\n            <mi-badge variant=\"secondary\" size=\"sm\">Angular</mi-badge>\r\n            <mi-badge variant=\"secondary\" size=\"sm\">TypeScript</mi-badge>\r\n            <mi-badge variant=\"secondary\" size=\"sm\">Tailwind</mi-badge>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"border rounded-lg p-4\">\r\n          <div class=\"flex items-center justify-between mb-2\">\r\n            <h3 class=\"font-semibold\">Project Beta</h3>\r\n            <mi-badge variant=\"warning\">In Review</mi-badge>\r\n          </div>\r\n          <p class=\"text-sm text-muted-foreground mb-3\">Mobile-first design system with comprehensive component library.</p>\r\n          <div class=\"flex gap-2\">\r\n            <mi-badge variant=\"secondary\" size=\"sm\">React</mi-badge>\r\n            <mi-badge variant=\"secondary\" size=\"sm\">Storybook</mi-badge>\r\n            <mi-badge variant=\"secondary\" size=\"sm\">Jest</mi-badge>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Inset",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'left',\r\n    variant: 'inset',\r\n    collapsible: 'offcanvas',\r\n    className: '',\r\n  },\r\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      dialogOpen: false,\r\n      showDialog() {\r\n        this['dialogOpen'] = true;\r\n      },\r\n      hideDialog() {\r\n        this['dialogOpen'] = false;\r\n      },\r\n      onConfirm() {\r\n        console.log('Confirmed!');\r\n        this['hideDialog']();\r\n      },\r\n      onCancel() {\r\n        console.log('Cancelled!');\r\n        this['hideDialog']();\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"p-4\">\r\n        <mi-button (click)=\"showDialog()\">Show Alert Dialog</mi-button>\r\n\r\n        <mi-alert-dialog\r\n          [open]=\"dialogOpen\"\r\n          title=\"Delete Project\"\r\n          description=\"Are you sure you want to delete this project? This action cannot be undone.\"\r\n          confirmText=\"Delete\"\r\n          cancelText=\"Cancel\"\r\n          [destructive]=\"true\"\r\n          (confirm)=\"onConfirm()\"\r\n          (cancel)=\"onCancel()\"\r\n          (openChange)=\"dialogOpen = $event\">\r\n        </mi-alert-dialog>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    open: false,\r\n    title: 'Interactive Dialog',\r\n    description: 'Click the button to open the dialog.',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      dialogOpen: false,\r\n      openDialog: function() {\r\n        (this as any)['dialogOpen'] = true;\r\n      },\r\n      closeDialog: function() {\r\n        (this as any)['dialogOpen'] = false;\r\n      }\r\n    },\r\n    template: `\r\n      <div>\r\n        <mi-button (click)=\"openDialog()\">Open Dialog</mi-button>\r\n\r\n        <mi-dialog\r\n          [open]=\"dialogOpen\"\r\n          [title]=\"title\"\r\n          [description]=\"description\"\r\n          (openChange)=\"dialogOpen = $event\"\r\n          (close)=\"closeDialog()\">\r\n          <p>This is an interactive dialog that you can open and close.</p>\r\n          <div slot=\"footer\" class=\"flex justify-end space-x-2\">\r\n            <mi-button variant=\"outline\" (click)=\"closeDialog()\">Cancel</mi-button>\r\n            <mi-button (click)=\"closeDialog()\">OK</mi-button>\r\n          </div>\r\n        </mi-dialog>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <h3 class=\"text-lg font-semibold\">Interactive Input Examples</h3>\r\n        <p class=\"text-muted-foreground\">Try typing in these inputs to see the floating labels in action!</p>\r\n\r\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <mi-input\r\n            variant=\"filled\"\r\n            label=\"Your Name\"\r\n            placeholder=\"Start typing...\" />\r\n\r\n          <mi-input\r\n            variant=\"outline\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your email...\" />\r\n\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Phone Number\"\r\n            type=\"tel\"\r\n            placeholder=\"Your phone number...\" />\r\n\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Website URL\"\r\n            type=\"url\"\r\n            placeholder=\"https://...\" />\r\n        </div>\r\n\r\n        <div class=\"mt-8\">\r\n          <h4 class=\"text-md font-medium mb-4\">Different Input Types</h4>\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n            <mi-input\r\n              variant=\"outline\"\r\n              label=\"Number\"\r\n              type=\"number\"\r\n              placeholder=\"0\" />\r\n\r\n            <mi-input\r\n              variant=\"outline\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\" />\r\n\r\n            <mi-input\r\n              variant=\"outline\"\r\n              label=\"Search\"\r\n              type=\"search\"\r\n              placeholder=\"Search...\" />\r\n\r\n            <mi-input\r\n              variant=\"outline\"\r\n              label=\"Date\"\r\n              type=\"date\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4 max-w-md\">\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Choose an action</label>\r\n          <mi-select\r\n            [options]=\"actionOptions\"\r\n            placeholder=\"What would you like to do?\"\r\n            (selectionChange)=\"onActionChange($event)\"\r\n            [value]=\"selectedAction\">\r\n          </mi-select>\r\n        </div>\r\n\r\n        @if (message) {\r\n          <div class=\"p-3 bg-primary/10 border border-primary/20 rounded-md\">\r\n            <p class=\"text-sm\">{{ message }}</p>\r\n          </div>\r\n        }\r\n\r\n        <div class=\"flex space-x-2\">\r\n          <mi-button (click)=\"clearSelection()\" variant=\"outline\" size=\"sm\">\r\n            Clear Selection\r\n          </mi-button>\r\n          <mi-button (click)=\"setRandomSelection()\" size=\"sm\">\r\n            Random Selection\r\n          </mi-button>\r\n        </div>\r\n      </div>\r\n    `,\r\n    props: {\r\n      actionOptions: [\r\n        { value: 'read', label: '📖 Read a book' },\r\n        { value: 'code', label: '💻 Write some code' },\r\n        { value: 'walk', label: '🚶 Take a walk' },\r\n        { value: 'cook', label: '🍳 Cook a meal' },\r\n        { value: 'sleep', label: '😴 Take a nap' },\r\n      ],\r\n      selectedAction: '',\r\n      message: '',\r\n      onActionChange: function(option: any) {\r\n        if (option) {\r\n          (this as any).selectedAction = option.value;\r\n          (this as any).message = `You selected: ${option.label}`;\r\n        } else {\r\n          (this as any).selectedAction = '';\r\n          (this as any).message = '';\r\n        }\r\n      },\r\n      clearSelection: function() {\r\n        (this as any).selectedAction = '';\r\n        (this as any).message = 'Selection cleared!';\r\n      },\r\n      setRandomSelection: function() {\r\n        const options = (this as any).actionOptions;\r\n        const randomOption = options[Math.floor(Math.random() * options.length)];\r\n        (this as any).selectedAction = randomOption.value;\r\n        (this as any).message = `Randomly selected: ${randomOption.label}`;\r\n      },\r\n    },\r\n  }),\r\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      tabs: [\r\n        { value: 'overview', label: 'Overview' },\r\n        { value: 'analytics', label: 'Analytics' },\r\n        { value: 'reports', label: 'Reports' },\r\n        { value: 'notifications', label: 'Notifications' },\r\n      ],\r\n      currentTab: 'overview',\r\n    },\r\n    template: `\r\n      <div class=\"w-full max-w-2xl\">\r\n        <mi-tabs\r\n          [tabs]=\"tabs\"\r\n          [value]=\"currentTab\"\r\n          (valueChange)=\"currentTab = $event\">\r\n\r\n          <div class=\"mt-6\">\r\n            <div *ngIf=\"currentTab === 'overview'\" class=\"space-y-4\">\r\n              <h3 class=\"text-lg font-medium\">Overview</h3>\r\n              <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Get a high-level view of your dashboard metrics and key performance indicators.\r\n              </p>\r\n              <div class=\"grid grid-cols-3 gap-4\">\r\n                <div class=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                  <div class=\"text-2xl font-bold\">1,234</div>\r\n                  <div class=\"text-sm text-gray-500\">Total Users</div>\r\n                </div>\r\n                <div class=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                  <div class=\"text-2xl font-bold\">56</div>\r\n                  <div class=\"text-sm text-gray-500\">Active Sessions</div>\r\n                </div>\r\n                <div class=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                  <div class=\"text-2xl font-bold\">89%</div>\r\n                  <div class=\"text-sm text-gray-500\">Uptime</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"currentTab === 'analytics'\" class=\"space-y-4\">\r\n              <h3 class=\"text-lg font-medium\">Analytics</h3>\r\n              <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Detailed analytics and insights about your application usage.\r\n              </p>\r\n              <div class=\"h-32 bg-gray-100 dark:bg-gray-800 rounded-lg flex items-center justify-center\">\r\n                <span class=\"text-gray-500\">Analytics Chart Placeholder</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"currentTab === 'reports'\" class=\"space-y-4\">\r\n              <h3 class=\"text-lg font-medium\">Reports</h3>\r\n              <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Generate and view detailed reports for your data.\r\n              </p>\r\n              <div class=\"space-y-2\">\r\n                <div class=\"p-3 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                  <div class=\"font-medium\">Monthly Report</div>\r\n                  <div class=\"text-sm text-gray-500\">Generated 2 hours ago</div>\r\n                </div>\r\n                <div class=\"p-3 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                  <div class=\"font-medium\">Weekly Summary</div>\r\n                  <div class=\"text-sm text-gray-500\">Generated 1 day ago</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"currentTab === 'notifications'\" class=\"space-y-4\">\r\n              <h3 class=\"text-lg font-medium\">Notifications</h3>\r\n              <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Manage your notification preferences and settings.\r\n              </p>\r\n              <div class=\"space-y-3\">\r\n                <div class=\"flex items-center justify-between\">\r\n                  <span>Email notifications</span>\r\n                  <input type=\"checkbox\" checked class=\"rounded\">\r\n                </div>\r\n                <div class=\"flex items-center justify-between\">\r\n                  <span>Push notifications</span>\r\n                  <input type=\"checkbox\" class=\"rounded\">\r\n                </div>\r\n                <div class=\"flex items-center justify-between\">\r\n                  <span>SMS notifications</span>\r\n                  <input type=\"checkbox\" class=\"rounded\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mi-tabs>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      showToast: false,\r\n      toastType: 'default',\r\n    },\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <div class=\"flex gap-2\">\r\n          <button\r\n            (click)=\"showToast = true; toastType = 'default'\"\r\n            class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n            Show Default\r\n          </button>\r\n          <button\r\n            (click)=\"showToast = true; toastType = 'success'\"\r\n            class=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\">\r\n            Show Success\r\n          </button>\r\n          <button\r\n            (click)=\"showToast = true; toastType = 'warning'\"\r\n            class=\"px-4 py-2 bg-yellow-600 text-white rounded-md hover:bg-yellow-700\">\r\n            Show Warning\r\n          </button>\r\n          <button\r\n            (click)=\"showToast = true; toastType = 'destructive'\"\r\n            class=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700\">\r\n            Show Error\r\n          </button>\r\n        </div>\r\n\r\n        <div *ngIf=\"showToast\" class=\"w-96\">\r\n          <mi-toast\r\n            [title]=\"toastType === 'default' ? 'Notification' :\r\n                    toastType === 'success' ? 'Success!' :\r\n                    toastType === 'warning' ? 'Warning' : 'Error'\"\r\n            [description]=\"toastType === 'default' ? 'This is a default notification.' :\r\n                         toastType === 'success' ? 'Action completed successfully.' :\r\n                         toastType === 'warning' ? 'Please review your input.' : 'Something went wrong.'\"\r\n            [variant]=\"toastType\"\r\n            [icon]=\"toastType === 'default' ? 'Bell' :\r\n                    toastType === 'success' ? 'CheckCircle' :\r\n                    toastType === 'warning' ? 'AlertTriangle' : 'AlertCircle'\"\r\n            (close)=\"showToast = false\">\r\n          </mi-toast>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-8 p-8\">\r\n        <div class=\"flex items-center gap-4\">\r\n          <mi-tooltip content=\"Click to save your work\">\r\n            <button class=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 flex items-center gap-2\">\r\n              <span>💾</span>\r\n              Save\r\n            </button>\r\n          </mi-tooltip>\r\n\r\n          <mi-tooltip content=\"Delete this item permanently\" variant=\"secondary\">\r\n            <button class=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 flex items-center gap-2\">\r\n              <span>🗑️</span>\r\n              Delete\r\n            </button>\r\n          </mi-tooltip>\r\n\r\n          <mi-tooltip content=\"View more options\">\r\n            <button class=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\">\r\n              ⋯\r\n            </button>\r\n          </mi-tooltip>\r\n        </div>\r\n\r\n        <div class=\"border border-gray-200 dark:border-gray-700 rounded-lg p-4\">\r\n          <h3 class=\"font-medium mb-2\">Form Controls</h3>\r\n          <div class=\"space-y-3\">\r\n            <div class=\"flex items-center gap-2\">\r\n              <mi-tooltip content=\"Enter your full name\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Full Name\"\r\n                  class=\"px-3 py-2 border border-gray-300 rounded-md dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100\"\r\n                />\r\n              </mi-tooltip>\r\n            </div>\r\n\r\n            <div class=\"flex items-center gap-2\">\r\n              <mi-tooltip content=\"Choose your preferred option\" side=\"right\">\r\n                <select class=\"px-3 py-2 border border-gray-300 rounded-md dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100\">\r\n                  <option>Option 1</option>\r\n                  <option>Option 2</option>\r\n                  <option>Option 3</option>\r\n                </select>\r\n              </mi-tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { size: 'lg' },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      Large\n    </mi-button>`,\n  }),\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'lg',\r\n    className: '',\r\n  },\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'lg',\r\n    hideScrollbar: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-scroll-area [size]=\"size\" [hideScrollbar]=\"hideScrollbar\" class=\"w-72 border rounded-md\">\r\n        <div class=\"p-4\">\r\n          <h4 class=\"mb-4 text-sm font-medium leading-none\">Components</h4>\r\n          <div class=\"grid gap-2 text-sm\">\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Accordion\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Alert Dialog\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Aspect Ratio\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-yellow-500\"></div>\r\n              Avatar\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Badge\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Button\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Calendar\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Card\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Checkbox\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Collapsible\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Combobox\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Command\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Context Menu\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Data Table\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Date Picker\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Dialog\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Dropdown Menu\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Form\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Hover Card\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Input\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Label\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Menubar\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Navigation Menu\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Popover\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Progress\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Radio Group\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Scroll Area\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Select\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Separator\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Sheet\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Skeleton\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Slider\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Switch\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Table\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Tabs\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Textarea\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Toast\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Toggle\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Tooltip\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mi-scroll-area>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'default',\r\n    size: 'lg',\r\n    pressed: false,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-toggle\r\n        [variant]=\"variant\"\r\n        [size]=\"size\"\r\n        [pressed]=\"pressed\"\r\n        [disabled]=\"disabled\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          class=\"h-4 w-4\">\r\n          <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"/>\r\n        </svg>\r\n      </mi-toggle>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "LargePageSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    data: sampleUsers,\r\n    columns: userColumns,\r\n    pageSize: 10,\r\n  },\r\n}"
            },
            {
                "name": "LargeSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    isOpen: true,\r\n    side: 'right',\r\n    size: 'lg',\r\n    title: 'Product Details',\r\n    description: 'Detailed information about the selected product.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-sheet\r\n        [isOpen]=\"isOpen\"\r\n        [side]=\"side\"\r\n        [size]=\"size\"\r\n        [title]=\"title\"\r\n        [description]=\"description\">\r\n        <div class=\"space-y-6\">\r\n          <div class=\"aspect-video bg-muted rounded-lg flex items-center justify-center\">\r\n            <span class=\"text-muted-foreground\">Product Image</span>\r\n          </div>\r\n          <div class=\"space-y-4\">\r\n            <h3 class=\"text-lg font-semibold\">Premium Headphones</h3>\r\n            <p class=\"text-muted-foreground\">High-quality wireless headphones with noise cancellation and premium sound quality.</p>\r\n            <div class=\"flex items-center space-x-2\">\r\n              <span class=\"text-2xl font-bold\">$299.99</span>\r\n              <span class=\"text-sm text-muted-foreground line-through\">$399.99</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div slot=\"footer\" class=\"space-x-2\">\r\n          <button class=\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2\">\r\n            Add to Wishlist\r\n          </button>\r\n          <button class=\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2\">\r\n            Add to Cart\r\n          </button>\r\n        </div>\r\n      </mi-sheet>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "LeftIconPosition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: defaultItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    iconPosition: 'left',\r\n    className: 'w-full',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Accordion with icons positioned on the left side of the trigger.',\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "LeftSide",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'left',\r\n    open: false,\r\n    dismissible: true,\r\n    modal: true,\r\n  },\r\n}"
            },
            {
                "name": "LeftSide",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    isOpen: true,\r\n    side: 'left',\r\n    title: 'Navigation',\r\n    description: 'Choose a section to navigate to.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-sheet\r\n        [isOpen]=\"isOpen\"\r\n        [side]=\"side\"\r\n        [size]=\"size\"\r\n        [title]=\"title\"\r\n        [description]=\"description\">\r\n        <nav class=\"space-y-2\">\r\n          <a href=\"#\" class=\"block p-2 rounded hover:bg-accent\">Dashboard</a>\r\n          <a href=\"#\" class=\"block p-2 rounded hover:bg-accent\">Users</a>\r\n          <a href=\"#\" class=\"block p-2 rounded hover:bg-accent\">Settings</a>\r\n          <a href=\"#\" class=\"block p-2 rounded hover:bg-accent\">Reports</a>\r\n        </nav>\r\n      </mi-sheet>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "LimitedToasts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    toasts: [\r\n      ...sampleToasts,\r\n      {\r\n        id: '4',\r\n        title: 'Info',\r\n        description: 'This is an info message.',\r\n        variant: 'info' as const,\r\n        position: 'bottom-right' as const,\r\n      },\r\n      {\r\n        id: '5',\r\n        title: 'Default',\r\n        description: 'This is a default message.',\r\n        variant: 'default' as const,\r\n        position: 'bottom-right' as const,\r\n      },\r\n    ],\r\n    showIcon: true,\r\n    maxToasts: 3,\r\n  },\r\n}"
            },
            {
                "name": "Link",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'link' },\n  render: (args) => ({\n    props: {\n      ...args,\n      handleClick: (event: Event) => {\n        console.log('Link button clicked!', event);\n        alert('Link button clicked!');\n      }\n    },\n    template: `<div class=\"space-y-4 p-4\">\n      <div class=\"space-y-2\">\n        <h3 class=\"text-lg font-semibold\">Link Variant Examples</h3>\n        <div class=\"flex gap-4 flex-wrap items-center\">\n          <mi-button\n            [variant]=\"variant\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [loading]=\"loading\"\n            [loadingText]=\"loadingText\"\n            [type]=\"type\"\n            (buttonClick)=\"handleClick($event)\">\n            Default Link\n          </mi-button>\n\n          <mi-button\n            variant=\"link\"\n            size=\"sm\"\n            [disabled]=\"disabled\"\n            [type]=\"type\"\n            (buttonClick)=\"handleClick($event)\">\n            Small Link\n          </mi-button>\n\n          <mi-button\n            variant=\"link\"\n            size=\"lg\"\n            [disabled]=\"disabled\"\n            [type]=\"type\"\n            (buttonClick)=\"handleClick($event)\">\n            Large Link\n          </mi-button>\n\n          <mi-button\n            variant=\"link\"\n            [disabled]=\"true\"\n            [type]=\"type\">\n            Disabled Link\n          </mi-button>\n        </div>\n      </div>\n\n      <div class=\"space-y-2\">\n        <h3 class=\"text-lg font-semibold\">Link with Icons</h3>\n        <div class=\"flex gap-4 flex-wrap items-center\">\n          <mi-button\n            variant=\"link\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\"\n            (buttonClick)=\"handleClick($event)\">\n            🔗 External Link\n          </mi-button>\n\n          <mi-button\n            variant=\"link\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\"\n            (buttonClick)=\"handleClick($event)\">\n            Learn More →\n          </mi-button>\n\n          <mi-button\n            variant=\"link\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\"\n            (buttonClick)=\"handleClick($event)\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"/>\n              <polyline points=\"15,3 21,3 21,9\"/>\n              <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"/>\n            </svg>\n            Open in new tab\n          </mi-button>\n        </div>\n      </div>\n    </div>`,\n  }),\n}"
            },
            {
                "name": "ListExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\" style=\"max-width: 300px;\">\r\n        <h3 class=\"text-lg font-semibold\">Todo List</h3>\r\n        <div class=\"space-y-2\">\r\n          <mi-checkbox [checked]=\"true\" class=\"line-through opacity-60\">\r\n            Set up project repository\r\n          </mi-checkbox>\r\n          <mi-checkbox [checked]=\"true\" class=\"line-through opacity-60\">\r\n            Create initial components\r\n          </mi-checkbox>\r\n          <mi-checkbox>\r\n            Add form validation\r\n          </mi-checkbox>\r\n          <mi-checkbox>\r\n            Write comprehensive tests\r\n          </mi-checkbox>\r\n          <mi-checkbox>\r\n            Deploy to production\r\n          </mi-checkbox>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    loading: true,\r\n    title: 'Processing Request',\r\n    description: 'Please wait while we process your request.',\r\n    confirmText: 'Processing...',\r\n  },\r\n}"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { loading: true, loadingText: 'Please wait...' },\n  render: (args) => ({\n    props: {\n      ...args,\n      isLoading: true,\n      toggleLoading: function() {\n        this['isLoading'] = !this['isLoading'];\n      },\n      handleClick: (event: Event) => {\n        console.log('Loading button clicked!', event);\n      }\n    },\n    template: `<div class=\"space-y-4\">\n      <mi-button\n        [variant]=\"variant\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [loading]=\"isLoading\"\n        [loadingText]=\"loadingText\"\n        [type]=\"type\"\n        (buttonClick)=\"handleClick($event)\">\n        {{isLoading && loadingText ? loadingText : 'Click Me'}}\n      </mi-button>\n      <br>\n      <mi-button variant=\"outline\" (buttonClick)=\"toggleLoading()\">\n        {{isLoading ? 'Stop Loading' : 'Start Loading'}}\n      </mi-button>\n    </div>`,\n  }),\n}"
            },
            {
                "name": "LoadingState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    fields: contactFormFields,\r\n    submitButtonText: 'Sending...',\r\n    loading: true,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-96\">\r\n        <mi-form\r\n          [fields]=\"fields\"\r\n          [submitButtonText]=\"submitButtonText\"\r\n          [loading]=\"loading\">\r\n        </mi-form>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "LongContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    title: 'Dialog with Long Content',\r\n    description: 'This dialog contains a lot of content to test scrolling behavior.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-dialog [open]=\"open\" [title]=\"title\" [description]=\"description\">\r\n        <div class=\"space-y-4 max-h-96 overflow-y-auto\">\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n          <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\r\n          <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>\r\n          <p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n          <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.</p>\r\n          <p>Totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.</p>\r\n          <p>Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos.</p>\r\n          <p>Qui ratione voluptatem sequi nesciunt neque porro quisquam est, qui dolorem ipsum quia dolor sit amet.</p>\r\n        </div>\r\n        <div slot=\"footer\" class=\"flex justify-end space-x-2\">\r\n          <mi-button variant=\"outline\">Cancel</mi-button>\r\n          <mi-button>Accept</mi-button>\r\n        </div>\r\n      </mi-dialog>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "ManyPages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/pagination.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    currentPage: 10,\r\n    totalPages: 50,\r\n    siblingCount: 1,\r\n    showFirstLast: true,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onPageChange: (page: number) => {\r\n        console.log('Page changed to:', page);\r\n        args.currentPage = page;\r\n      }\r\n    },\r\n    template: `\r\n      <mi-pagination\r\n        [currentPage]=\"currentPage\"\r\n        [totalPages]=\"totalPages\"\r\n        [siblingCount]=\"siblingCount\"\r\n        [showFirstLast]=\"showFirstLast\"\r\n        [disabled]=\"disabled\"\r\n        (pageChange)=\"onPageChange($event)\">\r\n      </mi-pagination>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Medium",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'md',\r\n    className: '',\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AccordionComponent>",
                "defaultValue": "{\r\n  title: 'Components/Accordion',\r\n  component: AccordionComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A collapsible content component that follows the shadcn/ui design system. Supports single and multiple selection modes.',\r\n      },\r\n    },\r\n  },\r\n  argTypes: {\r\n    type: {\r\n      control: 'select',\r\n      options: ['single', 'multiple'],\r\n      description: 'Whether to allow only one or multiple items to be open at once',\r\n    },\r\n    collapsible: {\r\n      control: 'boolean',\r\n      description: 'Whether items can be collapsed when in single mode',\r\n    },\r\n    className: {\r\n      control: 'text',\r\n      description: 'Additional CSS classes',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AlertDialog>",
                "defaultValue": "{\r\n  title: 'Components/Alert Dialog',\r\n  component: AlertDialog,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [AlertDialog],\r\n    }),\r\n  ],\r\n  args: {\r\n    open: false,\r\n    title: 'Are you absolutely sure?',\r\n    description: 'This action cannot be undone. This will permanently delete your account and remove your data from our servers.',\r\n    confirmText: 'Continue',\r\n    cancelText: 'Cancel',\r\n    destructive: false,\r\n    loading: false,\r\n  },\r\n  argTypes: {\r\n    open: {\r\n      control: 'boolean',\r\n      description: 'Whether the dialog is open'\r\n    },\r\n    title: {\r\n      control: 'text',\r\n      description: 'Dialog title'\r\n    },\r\n    description: {\r\n      control: 'text',\r\n      description: 'Dialog description text'\r\n    },\r\n    confirmText: {\r\n      control: 'text',\r\n      description: 'Text for the confirm button'\r\n    },\r\n    cancelText: {\r\n      control: 'text',\r\n      description: 'Text for the cancel button'\r\n    },\r\n    destructive: {\r\n      control: 'boolean',\r\n      description: 'Whether to show destructive styling on confirm button'\r\n    },\r\n    loading: {\r\n      control: 'boolean',\r\n      description: 'Whether to show loading state'\r\n    }\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AlertComponent>",
                "defaultValue": "{\r\n  title: 'Components/Alert',\r\n  component: AlertComponent,\r\n  parameters: {\r\n    layout: 'padded',\r\n  },\r\n  argTypes: {\r\n    variant: {\r\n      control: { type: 'radio' },\r\n      options: ['default', 'destructive'],\r\n    },\r\n    icon: {\r\n      control: { type: 'text' },\r\n    },\r\n    title: {\r\n      control: { type: 'text' },\r\n    },\r\n    description: {\r\n      control: { type: 'text' },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\r\n  title: 'Theme Test/All Components Theme Test',\r\n  parameters: {\r\n    layout: 'padded',\r\n    docs: {\r\n      description: {\r\n        component: 'Comprehensive test of all components with theme variables. Toggle between light and dark themes to see all components adapt.',\r\n      },\r\n    },\r\n  },\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-8 p-6 bg-background text-foreground\">\r\n        <div class=\"space-y-4\">\r\n          <h1 class=\"text-2xl font-bold\">Theme Variable Test</h1>\r\n          <p class=\"text-muted-foreground\">All components should respect the theme variables and change when you toggle between light and dark modes.</p>\r\n        </div>\r\n\r\n        <!-- Card Component -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Cards</h2>\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div class=\"rounded-lg border bg-card text-card-foreground shadow-sm p-6\">\r\n              <h3 class=\"font-semibold\">Default Card</h3>\r\n              <p class=\"text-sm text-muted-foreground mt-2\">This card uses theme variables</p>\r\n            </div>\r\n            <div class=\"rounded-lg border bg-card text-card-foreground shadow-lg p-6\">\r\n              <h3 class=\"font-semibold\">Elevated Card</h3>\r\n              <p class=\"text-sm text-muted-foreground mt-2\">With more shadow</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Badges -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Badges</h2>\r\n          <div class=\"flex gap-2\">\r\n            <span class=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold border-transparent bg-primary text-primary-foreground\">Primary</span>\r\n            <span class=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold border-transparent bg-secondary text-secondary-foreground\">Secondary</span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Alerts -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Alerts</h2>\r\n          <div class=\"relative w-full rounded-lg border px-4 py-3 text-sm bg-background text-foreground\">\r\n            <strong>Info:</strong> This alert uses theme variables for proper theming.\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Separators -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Separators</h2>\r\n          <div class=\"shrink-0 bg-border h-[1px] w-full\"></div>\r\n        </div>\r\n\r\n        <!-- Progress -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Progress</h2>\r\n          <div class=\"relative h-4 w-full overflow-hidden rounded-full bg-secondary\">\r\n            <div class=\"h-full bg-primary transition-all\" style=\"width: 60%\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Skeleton -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Skeleton</h2>\r\n          <div class=\"space-y-2\">\r\n            <div class=\"animate-pulse rounded-md bg-muted h-4 w-[250px]\"></div>\r\n            <div class=\"animate-pulse rounded-md bg-muted h-4 w-[200px]\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Form Elements -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Form Elements</h2>\r\n          <div class=\"space-y-4 max-w-md\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Themed input\"\r\n              class=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm text-foreground ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\r\n            />\r\n            <textarea\r\n              placeholder=\"Themed textarea\"\r\n              class=\"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm text-foreground ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Tabs -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Tabs</h2>\r\n          <div class=\"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\">\r\n            <div class=\"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-background text-foreground shadow-sm\">Tab 1</div>\r\n            <div class=\"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\">Tab 2</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AspectRatio>",
                "defaultValue": "{\r\n  title: 'Components/AspectRatio',\r\n  component: AspectRatio,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    ratio: {\r\n      control: { type: 'select' },\r\n      options: ['square', 'video', '4/3', '3/2', '16/9', '21/9'],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AvatarComponent>",
                "defaultValue": "{\r\n  title: 'Components/Avatar',\r\n  component: AvatarComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'An avatar component for displaying user profile pictures or initials.',\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        AvatarComponent,\r\n        BadgeComponent,\r\n        IconComponent,\r\n      ],\r\n      providers: [IconService],\r\n    }),\r\n    applicationConfig({\r\n      providers: [IconService],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'default', 'lg', 'xl'],\r\n      description: 'The size of the avatar',\r\n    },\r\n    src: {\r\n      control: 'text',\r\n      description: 'Image source URL',\r\n    },\r\n    alt: {\r\n      control: 'text',\r\n      description: 'Alternative text for the image',\r\n    },\r\n    fallback: {\r\n      control: 'text',\r\n      description: 'Fallback text (usually initials)',\r\n    },\r\n    class: {\r\n      control: 'text',\r\n      description: 'Additional CSS classes',\r\n    },\r\n  },\r\n  args: {\r\n    size: 'default',\r\n    src: 'https://github.com/shadcn.png',\r\n    alt: 'User avatar',\r\n    fallback: 'CN',\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BadgeComponent>",
                "defaultValue": "{\r\n  title: 'Components/Badge',\r\n  component: BadgeComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A badge component for displaying status, counts, or labels.',\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        BadgeComponent,\r\n        IconComponent,\r\n      ],\r\n      providers: [IconService],\r\n    }),\r\n    applicationConfig({\r\n      providers: [IconService],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'secondary', 'destructive', 'outline', 'success', 'warning'],\r\n      description: 'The visual variant of the badge',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'default', 'lg'],\r\n      description: 'The size of the badge',\r\n    },\r\n    class: {\r\n      control: 'text',\r\n      description: 'Additional CSS classes',\r\n    },\r\n  },\r\n  args: {\r\n    variant: 'default',\r\n    size: 'default',\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Breadcrumb>",
                "defaultValue": "{\r\n  title: 'Components/Breadcrumb',\r\n  component: Breadcrumb,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [Breadcrumb],\r\n    }),\r\n  ],\r\n  args: {\r\n    items: [\r\n      { label: 'Home', href: '#' },\r\n      { label: 'Components', href: '#' },\r\n      { label: 'Breadcrumb' }\r\n    ]\r\n  },\r\n  argTypes: {\r\n    items: {\r\n      control: 'object',\r\n      description: 'Array of breadcrumb items'\r\n    }\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Button>",
                "defaultValue": "{\n  title: 'Components/Button',\n  component: Button,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [Button],\n    }),\n  ],\n  args: {\n    variant: 'default',\n    size: 'default',\n    disabled: false,\n    loading: false,\n    loadingText: '',\n    type: 'button',\n  },\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['default', 'destructive', 'outline', 'secondary', 'ghost', 'link'],\n      description: 'The visual style variant of the button'\n    },\n    size: {\n      control: 'select',\n      options: ['default', 'sm', 'lg', 'icon'],\n      description: 'The size of the button'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Whether the button is disabled'\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Whether the button is in loading state'\n    },\n    loadingText: {\n      control: 'text',\n      description: 'Text to show when loading'\n    },\n    type: {\n      control: 'select',\n      options: ['button', 'submit', 'reset'],\n      description: 'The HTML button type'\n    }\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CalendarComponent>",
                "defaultValue": "{\r\n  title: 'Components/Calendar',\r\n  component: CalendarComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A date field component that allows users to enter and edit date.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    selected: {\r\n      control: 'date',\r\n      description: 'The selected date',\r\n    },\r\n    minDate: {\r\n      control: 'date',\r\n      description: 'The minimum selectable date',\r\n    },\r\n    maxDate: {\r\n      control: 'date',\r\n      description: 'The maximum selectable date',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the calendar is disabled',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CardComponent>",
                "defaultValue": "{\r\n  title: 'Components/Card',\r\n  component: CardComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A card component for displaying content in a contained, elevated surface.',\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        CardComponent,\r\n        CardHeaderComponent,\r\n        CardTitleComponent,\r\n        CardDescriptionComponent,\r\n        CardContentComponent,\r\n        CardFooterComponent,\r\n        Button,\r\n        IconComponent,\r\n      ],\r\n      providers: [IconService],\r\n    }),\r\n    applicationConfig({\r\n      providers: [IconService],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'elevated', 'outline'],\r\n      description: 'The visual variant of the card',\r\n    },\r\n    class: {\r\n      control: 'text',\r\n      description: 'Additional CSS classes',\r\n    },\r\n  },\r\n  args: {\r\n    variant: 'default',\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/carousel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CarouselComponent>",
                "defaultValue": "{\r\n  title: 'Components/Carousel',\r\n  component: CarouselComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A carousel component for cycling through elements.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    slides: {\r\n      control: 'object',\r\n      description: 'Array of slides to display',\r\n    },\r\n    autoPlay: {\r\n      control: 'boolean',\r\n      description: 'Whether to auto-play the carousel',\r\n    },\r\n    autoPlayInterval: {\r\n      control: 'number',\r\n      description: 'Auto-play interval in milliseconds',\r\n    },\r\n    loop: {\r\n      control: 'boolean',\r\n      description: 'Whether to loop back to the first slide',\r\n    },\r\n    showPrevNext: {\r\n      control: 'boolean',\r\n      description: 'Whether to show previous/next buttons',\r\n    },\r\n    showDots: {\r\n      control: 'boolean',\r\n      description: 'Whether to show dot indicators',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ChartContainer>",
                "defaultValue": "{\r\n  title: 'Components/Chart',\r\n  component: ChartContainer,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'md', 'lg', 'xl']\r\n    },\r\n    className: { control: 'text' },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxComponent>",
                "defaultValue": "{\r\n  title: 'Components/Checkbox',\r\n  component: CheckboxComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A checkbox component for selecting options.',\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CheckboxComponent,\r\n        IconComponent,\r\n      ],\r\n      providers: [IconService],\r\n    }),\r\n    applicationConfig({\r\n      providers: [IconService],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'default', 'lg'],\r\n      description: 'The size of the checkbox',\r\n    },\r\n    checked: {\r\n      control: 'boolean',\r\n      description: 'Whether the checkbox is checked',\r\n    },\r\n    indeterminate: {\r\n      control: 'boolean',\r\n      description: 'Whether the checkbox is in indeterminate state',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the checkbox is disabled',\r\n    },\r\n    class: {\r\n      control: 'text',\r\n      description: 'Additional CSS classes',\r\n    },\r\n  },\r\n  args: {\r\n    size: 'default',\r\n    checked: false,\r\n    indeterminate: false,\r\n    disabled: false,\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Collapsible>",
                "defaultValue": "{\r\n  title: 'Components/Collapsible',\r\n  component: Collapsible,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    open: {\r\n      control: { type: 'boolean' },\r\n    },\r\n    disabled: {\r\n      control: { type: 'boolean' },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ComboboxComponent>",
                "defaultValue": "{\r\n  title: 'Components/Combobox',\r\n  component: ComboboxComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'Combines a text input with a listbox, allowing users to filter a list of options to items matching a query.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    options: {\r\n      control: 'object',\r\n      description: 'Array of options to choose from',\r\n    },\r\n    placeholder: {\r\n      control: 'text',\r\n      description: 'Placeholder text for the input',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the combobox is disabled',\r\n    },\r\n    searchable: {\r\n      control: 'boolean',\r\n      description: 'Whether the options can be searched/filtered',\r\n    },\r\n    value: {\r\n      control: 'text',\r\n      description: 'The selected value',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/command.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CommandComponent>",
                "defaultValue": "{\r\n  title: 'Components/Command',\r\n  component: CommandComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'Fast, composable, unstyled command menu for Angular.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    items: {\r\n      control: 'object',\r\n      description: 'Array of command items',\r\n    },\r\n    groups: {\r\n      control: 'object',\r\n      description: 'Array of command groups',\r\n    },\r\n    placeholder: {\r\n      control: 'text',\r\n      description: 'Placeholder text for the search input',\r\n    },\r\n    emptyMessage: {\r\n      control: 'text',\r\n      description: 'Message to show when no results are found',\r\n    },\r\n    showSearch: {\r\n      control: 'boolean',\r\n      description: 'Whether to show the search input',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/context-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ContextMenu>",
                "defaultValue": "{\r\n  title: 'Components/ContextMenu',\r\n  component: ContextMenu,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DataTableComponent<User>>",
                "defaultValue": "{\r\n  title: 'Components/Data Table',\r\n  component: DataTableComponent,\r\n  parameters: {\r\n    layout: 'padded',\r\n    docs: {\r\n      description: {\r\n        component: 'Powerful table with sorting, pagination, and customizable columns.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    data: {\r\n      control: 'object',\r\n      description: 'Array of data objects to display',\r\n    },\r\n    columns: {\r\n      control: 'object',\r\n      description: 'Column definitions',\r\n    },\r\n    pageSize: {\r\n      control: 'number',\r\n      description: 'Number of items per page',\r\n    },\r\n    showPagination: {\r\n      control: 'boolean',\r\n      description: 'Whether to show pagination controls',\r\n    },\r\n    sortable: {\r\n      control: 'boolean',\r\n      description: 'Whether columns can be sorted',\r\n    },\r\n    emptyMessage: {\r\n      control: 'text',\r\n      description: 'Message to show when no data is available',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DatePickerComponent>",
                "defaultValue": "{\r\n  title: 'Components/Date Picker',\r\n  component: DatePickerComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A date picker component that allows users to select a date from a calendar.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    value: {\r\n      control: 'date',\r\n      description: 'The selected date',\r\n    },\r\n    placeholder: {\r\n      control: 'text',\r\n      description: 'Placeholder text for the input',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the date picker is disabled',\r\n    },\r\n    minDate: {\r\n      control: 'date',\r\n      description: 'The minimum selectable date',\r\n    },\r\n    maxDate: {\r\n      control: 'date',\r\n      description: 'The maximum selectable date',\r\n    },\r\n    format: {\r\n      control: 'select',\r\n      options: ['MM/dd/yyyy', 'dd/MM/yyyy', 'yyyy-MM-dd', 'MMM dd, yyyy'],\r\n      description: 'The date format to display',\r\n    },\r\n    showToday: {\r\n      control: 'boolean',\r\n      description: 'Whether to show the \"Today\" button',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DialogComponent>",
                "defaultValue": "{\r\n  title: 'Components/Dialog',\r\n  component: DialogComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    open: {\r\n      control: { type: 'boolean' },\r\n    },\r\n    title: {\r\n      control: { type: 'text' },\r\n    },\r\n    description: {\r\n      control: { type: 'text' },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Drawer>",
                "defaultValue": "{\r\n  title: 'Components/Drawer',\r\n  component: Drawer,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    side: {\r\n      control: 'select',\r\n      options: ['left', 'right', 'top', 'bottom']\r\n    },\r\n    open: { control: 'boolean' },\r\n    dismissible: { control: 'boolean' },\r\n    modal: { control: 'boolean' },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DropdownMenu>",
                "defaultValue": "{\r\n  title: 'Components/Dropdown Menu',\r\n  component: DropdownMenu,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [DropdownMenu, Button],\r\n    }),\r\n  ],\r\n  args: {\r\n    items: [\r\n      { label: 'Profile', value: 'profile', shortcut: '⇧⌘P' },\r\n      { label: 'Billing', value: 'billing' },\r\n      { label: 'Settings', value: 'settings', shortcut: '⌘,' },\r\n      { separator: true, label: '' },\r\n      { label: 'Logout', value: 'logout' },\r\n    ],\r\n    open: false,\r\n    placement: 'bottom',\r\n  },\r\n  argTypes: {\r\n    items: {\r\n      control: 'object',\r\n      description: 'Array of menu items'\r\n    },\r\n    open: {\r\n      control: 'boolean',\r\n      description: 'Whether the menu is open'\r\n    },\r\n    placement: {\r\n      control: 'select',\r\n      options: ['top', 'bottom', 'left', 'right'],\r\n      description: 'Placement of the menu relative to trigger'\r\n    }\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormComponent>",
                "defaultValue": "{\r\n  title: 'Components/Form',\r\n  component: FormComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A comprehensive form component with validation and multiple field types.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    fields: {\r\n      control: 'object',\r\n      description: 'Array of form field definitions',\r\n    },\r\n    initialValues: {\r\n      control: 'object',\r\n      description: 'Initial values for the form fields',\r\n    },\r\n    submitButtonText: {\r\n      control: 'text',\r\n      description: 'Text for the submit button',\r\n    },\r\n    cancelButtonText: {\r\n      control: 'text',\r\n      description: 'Text for the cancel button',\r\n    },\r\n    showCancelButton: {\r\n      control: 'boolean',\r\n      description: 'Whether to show the cancel button',\r\n    },\r\n    loading: {\r\n      control: 'boolean',\r\n      description: 'Whether the form is in loading state',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/hover-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HoverCard>",
                "defaultValue": "{\r\n  title: 'Components/HoverCard',\r\n  component: HoverCard,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    side: {\r\n      control: { type: 'select' },\r\n      options: ['top', 'right', 'bottom', 'left'],\r\n    },\r\n    openDelay: {\r\n      control: { type: 'number' },\r\n    },\r\n    closeDelay: {\r\n      control: { type: 'number' },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<IconComponent>",
                "defaultValue": "{\r\n  title: 'Components/Icon',\r\n  component: IconComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: `\r\nA comprehensive icon component that provides access to all Lucide icons with TypeScript autocomplete support.\r\n\r\n## Features\r\n- **Full Lucide Icon Library**: Access to 1000+ icons\r\n- **TypeScript Autocomplete**: Get intellisense when typing icon names\r\n- **Customizable**: Size, color, stroke width, and CSS classes\r\n- **Performance**: Built-in caching for SVG generation\r\n- **Type Safe**: Full TypeScript support with \\`LucideIconName\\` type\r\n\r\n## Usage\r\n\\`\\`\\`html\r\n<mi-icon name=\"Check\" [size]=\"24\" color=\"green\" [strokeWidth]=\"2\"></mi-icon>\r\n<mi-icon name=\"Heart\" class=\"text-red-500\"></mi-icon>\r\n<mi-icon name=\"Search\" [size]=\"16\"></mi-icon>\r\n\\`\\`\\`\r\n\r\nTry typing in the \"name\" control below to see autocomplete in action!\r\n        `,\r\n      },\r\n    },\r\n  },\r\n  argTypes: {\r\n    name: {\r\n      control: { type: 'text' },\r\n      description: 'Icon name from Lucide icons (with TypeScript autocomplete)',\r\n      table: {\r\n        type: { summary: 'LucideIconName' },\r\n        defaultValue: { summary: 'Check' },\r\n      },\r\n    },\r\n    size: {\r\n      control: { type: 'number', min: 12, max: 64, step: 1 },\r\n      description: 'Icon size in pixels',\r\n      table: {\r\n        type: { summary: 'number' },\r\n        defaultValue: { summary: '24' },\r\n      },\r\n    },\r\n    color: {\r\n      control: { type: 'color' },\r\n      description: 'Icon stroke color',\r\n      table: {\r\n        type: { summary: 'string' },\r\n        defaultValue: { summary: 'currentColor' },\r\n      },\r\n    },\r\n    strokeWidth: {\r\n      control: { type: 'number', min: 0.5, max: 4, step: 0.5 },\r\n      description: 'Icon stroke width',\r\n      table: {\r\n        type: { summary: 'number' },\r\n        defaultValue: { summary: '2' },\r\n      },\r\n    },\r\n    class: {\r\n      control: { type: 'text' },\r\n      description: 'Additional CSS classes',\r\n      table: {\r\n        type: { summary: 'string' },\r\n        defaultValue: { summary: '' },\r\n      },\r\n    },\r\n  },\r\n  args: {\r\n    name: 'Check',\r\n    size: 24,\r\n    color: 'currentColor',\r\n    strokeWidth: 2,\r\n    class: '',\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputOtpComponent>",
                "defaultValue": "{\r\n  title: 'Components/Input OTP',\r\n  component: InputOtpComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'Accessible one-time password component with customizable inputs.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    length: {\r\n      control: 'number',\r\n      description: 'Number of OTP input fields',\r\n    },\r\n    value: {\r\n      control: 'text',\r\n      description: 'Current value of the OTP',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the input is disabled',\r\n    },\r\n    autoFocus: {\r\n      control: 'boolean',\r\n      description: 'Whether to auto-focus the first input',\r\n    },\r\n    allowAlphanumeric: {\r\n      control: 'boolean',\r\n      description: 'Whether to allow letters and numbers',\r\n    },\r\n    hasError: {\r\n      control: 'boolean',\r\n      description: 'Whether the input has an error state',\r\n    },\r\n    errorMessage: {\r\n      control: 'text',\r\n      description: 'Error message to display',\r\n    },\r\n    description: {\r\n      control: 'text',\r\n      description: 'Helper text to display',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\r\n  title: 'Components/Input',\r\n  component: InputComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [InputComponent, LabelComponent],\r\n    }),\r\n  ],\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'filled', 'outline', 'floating', 'destructive'],\r\n      description: 'The visual style variant of the input',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['default', 'sm', 'lg'],\r\n      description: 'The size of the input',\r\n    },\r\n    type: {\r\n      control: 'select',\r\n      options: ['text', 'email', 'password', 'number', 'tel', 'url'],\r\n      description: 'HTML input type',\r\n    },\r\n    placeholder: {\r\n      control: 'text',\r\n      description: 'Placeholder text',\r\n    },\r\n    label: {\r\n      control: 'text',\r\n      description: 'Label text (used for floating label variants)',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the input is disabled',\r\n    },\r\n    readonly: {\r\n      control: 'boolean',\r\n      description: 'Whether the input is readonly',\r\n    },\r\n    value: {\r\n      control: 'text',\r\n      description: 'The input value',\r\n    },\r\n  },\r\n  args: {\r\n    variant: 'default',\r\n    size: 'default',\r\n    type: 'text',\r\n    disabled: false,\r\n    readonly: false,\r\n    value: '',\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LabelComponent>",
                "defaultValue": "{\r\n  title: 'Components/Label',\r\n  component: LabelComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'default', 'lg'],\r\n    },\r\n    for: {\r\n      control: 'text',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MenubarComponent>",
                "defaultValue": "{\r\n  title: 'Components/Menubar',\r\n  component: MenubarComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A visually persistent menu common in desktop applications that provides quick access to a consistent set of commands.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    menus: {\r\n      control: 'object',\r\n      description: 'Array of menu configurations',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NavigationMenu>",
                "defaultValue": "{\r\n  title: 'Components/NavigationMenu',\r\n  component: NavigationMenu,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    orientation: {\r\n      control: 'select',\r\n      options: ['horizontal', 'vertical']\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/pagination.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Pagination>",
                "defaultValue": "{\r\n  title: 'Components/Pagination',\r\n  component: Pagination,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    currentPage: {\r\n      control: { type: 'number', min: 1 },\r\n    },\r\n    totalPages: {\r\n      control: { type: 'number', min: 1 },\r\n    },\r\n    siblingCount: {\r\n      control: { type: 'number', min: 0, max: 3 },\r\n    },\r\n    showFirstLast: {\r\n      control: { type: 'boolean' },\r\n    },\r\n    disabled: {\r\n      control: { type: 'boolean' },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Popover>",
                "defaultValue": "{\r\n  title: 'Components/Popover',\r\n  component: Popover,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [Popover, Button, InputComponent, LabelComponent],\r\n    }),\r\n  ],\r\n  args: {\r\n    content: 'This is a popover content.',\r\n    open: false,\r\n    placement: 'bottom',\r\n    offset: 8,\r\n  },\r\n  argTypes: {\r\n    content: {\r\n      control: 'text',\r\n      description: 'Simple text content for the popover'\r\n    },\r\n    open: {\r\n      control: 'boolean',\r\n      description: 'Whether the popover is open'\r\n    },\r\n    placement: {\r\n      control: 'select',\r\n      options: ['top', 'bottom', 'left', 'right'],\r\n      description: 'Placement of the popover relative to trigger'\r\n    },\r\n    offset: {\r\n      control: 'number',\r\n      description: 'Offset from the trigger element'\r\n    }\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/progress.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProgressComponent>",
                "defaultValue": "{\r\n  title: 'Components/Progress',\r\n  component: ProgressComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    value: {\r\n      control: { type: 'range', min: 0, max: 100, step: 1 },\r\n    },\r\n    max: {\r\n      control: 'number',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'default', 'lg'],\r\n    },\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'success', 'warning', 'destructive'],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/radio-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadioGroup>",
                "defaultValue": "{\r\n  title: 'Components/RadioGroup',\r\n  component: RadioGroup,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    orientation: {\r\n      control: { type: 'radio' },\r\n      options: ['vertical', 'horizontal'],\r\n    },\r\n    disabled: {\r\n      control: { type: 'boolean' },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/resizable.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ResizablePanelGroup>",
                "defaultValue": "{\r\n  title: 'Components/Resizable',\r\n  component: ResizablePanelGroup,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    direction: {\r\n      control: 'select',\r\n      options: ['horizontal', 'vertical']\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ScrollArea>",
                "defaultValue": "{\r\n  title: 'Components/ScrollArea',\r\n  component: ScrollArea,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'md', 'lg', 'xl', 'auto'],\r\n    },\r\n    hideScrollbar: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectComponent>",
                "defaultValue": "{\r\n  title: 'Components/Select',\r\n  component: SelectComponent,\r\n  parameters: {\r\n    layout: 'padded',\r\n  },\r\n  argTypes: {\r\n    variant: {\r\n      control: { type: 'radio' },\r\n      options: ['default'],\r\n    },\r\n    size: {\r\n      control: { type: 'radio' },\r\n      options: ['default', 'sm', 'lg'],\r\n    },\r\n    disabled: {\r\n      control: { type: 'boolean' },\r\n    },\r\n    placeholder: {\r\n      control: { type: 'text' },\r\n    },\r\n    value: {\r\n      control: { type: 'text' },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/separator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SeparatorComponent>",
                "defaultValue": "{\r\n  title: 'Components/Separator',\r\n  component: SeparatorComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    orientation: {\r\n      control: 'select',\r\n      options: ['horizontal', 'vertical'],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SheetComponent>",
                "defaultValue": "{\r\n  title: 'Components/Sheet',\r\n  component: SheetComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'Extends the Dialog component to display content that complements the main content of the screen.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    isOpen: {\r\n      control: 'boolean',\r\n      description: 'Whether the sheet is open',\r\n    },\r\n    side: {\r\n      control: 'select',\r\n      options: ['top', 'right', 'bottom', 'left'],\r\n      description: 'The side from which the sheet slides in',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'md', 'lg', 'xl', 'full'],\r\n      description: 'The size of the sheet',\r\n    },\r\n    title: {\r\n      control: 'text',\r\n      description: 'The title of the sheet',\r\n    },\r\n    description: {\r\n      control: 'text',\r\n      description: 'The description of the sheet',\r\n    },\r\n    closeOnBackdropClick: {\r\n      control: 'boolean',\r\n      description: 'Whether to close when clicking the backdrop',\r\n    },\r\n    showCloseButton: {\r\n      control: 'boolean',\r\n      description: 'Whether to show the close button',\r\n    },\r\n    closeOnEscape: {\r\n      control: 'boolean',\r\n      description: 'Whether to close when pressing Escape',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Sidebar>",
                "defaultValue": "{\r\n  title: 'Components/Sidebar',\r\n  component: Sidebar,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    side: {\r\n      control: 'select',\r\n      options: ['left', 'right']\r\n    },\r\n    variant: {\r\n      control: 'select',\r\n      options: ['sidebar', 'inset', 'floating']\r\n    },\r\n    collapsible: {\r\n      control: 'select',\r\n      options: ['offcanvas', 'icon', 'none']\r\n    },\r\n    className: { control: 'text' },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/simple-theme-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\r\n  title: 'Theme/Simple Test',\r\n  tags: ['autodocs'],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SkeletonComponent>",
                "defaultValue": "{\r\n  title: 'Components/Skeleton',\r\n  component: SkeletonComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'text', 'avatar', 'button'],\r\n    },\r\n    width: {\r\n      control: 'text',\r\n    },\r\n    height: {\r\n      control: 'text',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Slider>",
                "defaultValue": "{\r\n  title: 'Components/Slider',\r\n  component: Slider,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    orientation: {\r\n      control: { type: 'radio' },\r\n      options: ['horizontal', 'vertical'],\r\n    },\r\n    size: {\r\n      control: { type: 'radio' },\r\n      options: ['sm', 'md', 'lg'],\r\n    },\r\n    disabled: {\r\n      control: { type: 'boolean' },\r\n    },\r\n    min: {\r\n      control: { type: 'number' },\r\n    },\r\n    max: {\r\n      control: { type: 'number' },\r\n    },\r\n    step: {\r\n      control: { type: 'number' },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SonnerToaster>",
                "defaultValue": "{\r\n  title: 'Components/Sonner',\r\n  component: SonnerToaster,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    toasts: { control: 'object' },\r\n    showIcon: { control: 'boolean' },\r\n    maxToasts: { control: 'number' },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SwitchComponent>",
                "defaultValue": "{\r\n  title: 'Components/Switch',\r\n  component: SwitchComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'default', 'lg'],\r\n    },\r\n    checked: {\r\n      control: 'boolean',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Table>",
                "defaultValue": "{\r\n  title: 'Components/Table',\r\n  component: Table,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [Table, BadgeComponent],\r\n    }),\r\n  ],\r\n  args: {\r\n    columns: [\r\n      { key: 'name', header: 'Name' },\r\n      { key: 'email', header: 'Email' },\r\n      { key: 'status', header: 'Status' },\r\n    ],\r\n    data: [\r\n      { name: 'John Doe', email: 'john@example.com', status: 'Active' },\r\n      { name: 'Jane Smith', email: 'jane@example.com', status: 'Inactive' },\r\n      { name: 'Bob Johnson', email: 'bob@example.com', status: 'Active' },\r\n    ]\r\n  },\r\n  argTypes: {\r\n    columns: {\r\n      control: 'object',\r\n      description: 'Array of table column definitions'\r\n    },\r\n    data: {\r\n      control: 'object',\r\n      description: 'Array of data objects to display'\r\n    }\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabsComponent>",
                "defaultValue": "{\r\n  title: 'Components/Tabs',\r\n  component: TabsComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'underline'],\r\n    },\r\n    value: {\r\n      control: 'text',\r\n    },\r\n    defaultValue: {\r\n      control: 'text',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextareaComponent>",
                "defaultValue": "{\r\n  title: 'Components/Textarea',\r\n  component: TextareaComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'destructive'],\r\n    },\r\n    placeholder: {\r\n      control: 'text',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n    readonly: {\r\n      control: 'boolean',\r\n    },\r\n    rows: {\r\n      control: 'number',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/theme-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\r\n  title: 'Theme/Theme Test',\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [Button, CardComponent, BadgeComponent],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\r\n  title: 'Theme Test/Theme Toggle Check',\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"p-8 rounded-lg border bg-card text-card-foreground\">\r\n        <h1 class=\"text-2xl font-bold mb-4\">Theme Toggle Test</h1>\r\n        <div class=\"space-y-4\">\r\n          <div class=\"p-4 bg-background border rounded\">\r\n            <p class=\"text-foreground\">Background: <span class=\"text-muted-foreground\">This should change color</span></p>\r\n          </div>\r\n          <div class=\"p-4 bg-primary text-primary-foreground rounded\">\r\n            <p>Primary Background</p>\r\n          </div>\r\n          <div class=\"p-4 bg-secondary text-secondary-foreground rounded\">\r\n            <p>Secondary Background</p>\r\n          </div>\r\n          <div class=\"p-4 bg-muted text-muted-foreground rounded\">\r\n            <p>Muted Background</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-4 text-sm text-muted-foreground\">\r\n          <p>Current theme class: <span id=\"theme-class\"></span></p>\r\n          <p>Current data-mode: <span id=\"data-mode\"></span></p>\r\n        </div>\r\n      </div>\r\n      <script>\r\n        setTimeout(() => {\r\n          document.getElementById('theme-class').textContent = document.documentElement.className || 'none';\r\n          document.getElementById('data-mode').textContent = document.documentElement.getAttribute('data-mode') || 'none';\r\n        }, 100);\r\n      </script>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToastComponent>",
                "defaultValue": "{\r\n  title: 'Components/Toast',\r\n  component: ToastComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'destructive', 'success', 'warning'],\r\n    },\r\n    title: {\r\n      control: 'text',\r\n    },\r\n    description: {\r\n      control: 'text',\r\n    },\r\n    icon: {\r\n      control: 'text',\r\n    },\r\n    action: {\r\n      control: 'text',\r\n    },\r\n    closable: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToggleGroupComponent>",
                "defaultValue": "{\r\n  title: 'Components/Toggle Group',\r\n  component: ToggleGroupComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A set of two-state buttons that can be toggled on or off.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    items: {\r\n      control: 'object',\r\n      description: 'Array of toggle items',\r\n    },\r\n    value: {\r\n      control: 'object',\r\n      description: 'Selected value(s)',\r\n    },\r\n    multiple: {\r\n      control: 'boolean',\r\n      description: 'Whether multiple items can be selected',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the toggle group is disabled',\r\n    },\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'outline'],\r\n      description: 'Visual variant of the toggle group',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'md', 'lg'],\r\n      description: 'Size of the toggle buttons',\r\n    },\r\n    orientation: {\r\n      control: 'select',\r\n      options: ['horizontal', 'vertical'],\r\n      description: 'Orientation of the toggle group',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Toggle>",
                "defaultValue": "{\r\n  title: 'Components/Toggle',\r\n  component: Toggle,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    variant: {\r\n      control: { type: 'radio' },\r\n      options: ['default', 'outline'],\r\n    },\r\n    size: {\r\n      control: { type: 'radio' },\r\n      options: ['default', 'sm', 'lg'],\r\n    },\r\n    pressed: {\r\n      control: { type: 'boolean' },\r\n    },\r\n    disabled: {\r\n      control: { type: 'boolean' },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TooltipComponent>",
                "defaultValue": "{\r\n  title: 'Components/Tooltip',\r\n  component: TooltipComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    content: {\r\n      control: 'text',\r\n    },\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'secondary'],\r\n    },\r\n    side: {\r\n      control: 'select',\r\n      options: ['top', 'right', 'bottom', 'left'],\r\n    },\r\n    delay: {\r\n      control: 'number',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "MiddlePage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/pagination.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    currentPage: 5,\r\n    totalPages: 10,\r\n    siblingCount: 1,\r\n    showFirstLast: true,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onPageChange: (page: number) => {\r\n        console.log('Page changed to:', page);\r\n        args.currentPage = page;\r\n      }\r\n    },\r\n    template: `\r\n      <mi-pagination\r\n        [currentPage]=\"currentPage\"\r\n        [totalPages]=\"totalPages\"\r\n        [siblingCount]=\"siblingCount\"\r\n        [showFirstLast]=\"showFirstLast\"\r\n        [disabled]=\"disabled\"\r\n        (pageChange)=\"onPageChange($event)\">\r\n      </mi-pagination>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "MixedConfiguration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      {\r\n        value: 'mixed-1',\r\n        trigger: 'Default Styling',\r\n        content: 'This item uses default styling.'\r\n      },\r\n      {\r\n        value: 'mixed-2', \r\n        trigger: 'Custom Header',\r\n        content: 'This item has custom header styling.',\r\n        headerClass: 'bg-blue-50 text-blue-700'\r\n      },\r\n      {\r\n        value: 'mixed-3',\r\n        trigger: 'Custom Everything',\r\n        content: 'This item has custom styling for everything.',\r\n        headerClass: 'bg-green-50 text-green-700',\r\n        contentClass: 'bg-green-25 p-4',\r\n        expandIcon: 'Minus',\r\n        collapseIcon: 'Plus'\r\n      }\r\n    ],\r\n    type: 'single',\r\n    collapsible: true,\r\n    iconPosition: 'right',\r\n    className: 'w-full',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Accordion with mixed styling configurations per item.',\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "mixedItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ToggleGroupItem[]",
                "defaultValue": "[\r\n  {\r\n    value: 'save',\r\n    label: 'Save',\r\n    icon: 'M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z'\r\n  },\r\n  {\r\n    value: 'edit',\r\n    label: 'Edit',\r\n    icon: 'M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7'\r\n  },\r\n  {\r\n    value: 'delete',\r\n    label: 'Delete',\r\n    icon: 'm3 6 2 18h14l2-18',\r\n    disabled: true\r\n  }\r\n]"
            },
            {
                "name": "Multiple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: defaultItems,\r\n    type: 'multiple',\r\n    className: 'w-full',\r\n  },\r\n}"
            },
            {
                "name": "Multiple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: textFormattingItems,\r\n    value: ['bold', 'italic'],\r\n    multiple: true,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Multiple values changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Multiple Selection</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          [multiple]=\"multiple\"\r\n          (valueChange)=\"onValueChange($event)\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "NoLoop",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/carousel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    slides: [1, 2, 3, 4],\r\n    loop: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 max-w-xs\">\r\n        <mi-carousel [slides]=\"slides\" [loop]=\"loop\">\r\n        </mi-carousel>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "NonCollapsible",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'left',\r\n    variant: 'sidebar',\r\n    collapsible: 'none',\r\n    className: '',\r\n  },\r\n}"
            },
            {
                "name": "NonDismissible",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'right',\r\n    open: false,\r\n    dismissible: false,\r\n    modal: true,\r\n  },\r\n}"
            },
            {
                "name": "NonModal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'right',\r\n    open: false,\r\n    dismissible: true,\r\n    modal: false,\r\n  },\r\n}"
            },
            {
                "name": "NotSearchable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: defaultOptions,\r\n    placeholder: 'Select framework...',\r\n    searchable: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <mi-combobox\r\n          [options]=\"options\"\r\n          [placeholder]=\"placeholder\"\r\n          [searchable]=\"searchable\">\r\n        </mi-combobox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "NotSortable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    data: sampleUsers.slice(0, 5),\r\n    columns: userColumns,\r\n    sortable: false,\r\n    showPagination: false,\r\n  },\r\n}"
            },
            {
                "name": "Open",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      isOpen: args.open,\r\n      onToggle: () => {\r\n        args.open = !args.open;\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"w-[350px] space-y-2\">\r\n        <h4 class=\"text-sm font-medium\">\r\n          @peduarte starred 3 repositories\r\n        </h4>\r\n        <mi-collapsible [open]=\"isOpen\" (openChange)=\"onToggle()\">\r\n          <mi-collapsible-trigger [open]=\"isOpen\" [disabled]=\"disabled\" (trigger)=\"onToggle()\">\r\n            Can I use this in my project?\r\n          </mi-collapsible-trigger>\r\n          <mi-collapsible-content [open]=\"isOpen\">\r\n            <div class=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n              @radix-ui/react-collapsible\r\n            </div>\r\n            <div class=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n              @radix-ui/react-accordion\r\n            </div>\r\n            <div class=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n              @radix-ui/react-dropdown-menu\r\n            </div>\r\n          </mi-collapsible-content>\r\n        </mi-collapsible>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "optionsWithDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SelectOption[]",
                "defaultValue": "[\r\n  { value: 'option1', label: 'Available Option 1' },\r\n  { value: 'option2', label: 'Available Option 2' },\r\n  { value: 'option3', label: 'Disabled Option', disabled: true },\r\n  { value: 'option4', label: 'Available Option 3' },\r\n]"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'outline' },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      Outline\n    </mi-button>`,\n  }),\n}"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'outline',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-card [variant]=\"variant\" [class]=\"class\" style=\"width: 350px;\">\r\n        <mi-card-header>\r\n          <mi-card-title>Outline Card</mi-card-title>\r\n          <mi-card-description>This card has a prominent border instead of shadow.</mi-card-description>\r\n        </mi-card-header>\r\n        <mi-card-content>\r\n          <p>Outline cards work well for subtle emphasis without using shadows.</p>\r\n        </mi-card-content>\r\n      </mi-card>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'outline',\r\n    label: 'Email Address',\r\n    type: 'email',\r\n    placeholder: 'Enter your email',\r\n  },\r\n}"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: textFormattingItems,\r\n    variant: 'outline',\r\n    value: 'bold',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Outline value changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Outline Variant</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          [variant]=\"variant\"\r\n          (valueChange)=\"onValueChange($event)\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'outline',\r\n    size: 'default',\r\n    pressed: false,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-toggle\r\n        [variant]=\"variant\"\r\n        [size]=\"size\"\r\n        [pressed]=\"pressed\"\r\n        [disabled]=\"disabled\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          class=\"h-4 w-4\">\r\n          <path d=\"M7 4V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v2\"/>\r\n          <path d=\"M5.5 4h13l-.5 7.5a2 2 0 0 1-2 1.5h-8a2 2 0 0 1-2-1.5L5.5 4z\"/>\r\n          <path d=\"M11 11v-1a2 2 0 1 1 4 0v1\"/>\r\n        </svg>\r\n      </mi-toggle>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "OutlineVariantDemo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <div>\r\n          <h3 class=\"text-lg font-semibold mb-4\">Outline Variant Tests</h3>\r\n\r\n          <div class=\"grid grid-cols-1 gap-4\">\r\n            <!-- Outline with custom label -->\r\n            <div>\r\n              <mi-input\r\n                variant=\"outline\"\r\n                label=\"Custom Label\"\r\n                placeholder=\"Outline with custom label\" />\r\n            </div>\r\n\r\n            <!-- Outline with default label -->\r\n            <div>\r\n              <mi-input\r\n                variant=\"outline\"\r\n                placeholder=\"Outline with default label (no label prop)\" />\r\n            </div>\r\n\r\n            <!-- Outline disabled -->\r\n            <div>\r\n              <mi-input\r\n                variant=\"outline\"\r\n                label=\"Disabled State\"\r\n                placeholder=\"Disabled outline input\"\r\n                [disabled]=\"true\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "OutlineWithDefaultLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'outline',\r\n    placeholder: 'Outline input with default label',\r\n  },\r\n}"
            },
            {
                "name": "PopularIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex flex-wrap gap-4 items-center\">\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Check\" [size]=\"24\" class=\"text-green-600\"></mi-icon>\r\n          <span class=\"text-xs\">Check</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"X\" [size]=\"24\" class=\"text-red-600\"></mi-icon>\r\n          <span class=\"text-xs\">X</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Heart\" [size]=\"24\" class=\"text-pink-600\"></mi-icon>\r\n          <span class=\"text-xs\">Heart</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Star\" [size]=\"24\" class=\"text-yellow-600\"></mi-icon>\r\n          <span class=\"text-xs\">Star</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Search\" [size]=\"24\" class=\"text-blue-600\"></mi-icon>\r\n          <span class=\"text-xs\">Search</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Settings\" [size]=\"24\" class=\"text-gray-600\"></mi-icon>\r\n          <span class=\"text-xs\">Settings</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"User\" [size]=\"24\" class=\"text-indigo-600\"></mi-icon>\r\n          <span class=\"text-xs\">User</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Mail\" [size]=\"24\" class=\"text-purple-600\"></mi-icon>\r\n          <span class=\"text-xs\">Mail</span>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'A showcase of popular icons with different colors.',\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Portrait",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    ratio: '4/3',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-aspect-ratio [ratio]=\"ratio\" class=\"bg-muted rounded-md overflow-hidden\">\r\n        <img\r\n          src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\r\n          alt=\"Photo by Drew Beamer\"\r\n          class=\"h-full w-full object-cover\"\r\n        />\r\n      </mi-aspect-ratio>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Positions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"grid grid-cols-3 gap-8 p-16\">\r\n        <div></div>\r\n        <div class=\"flex justify-center\">\r\n          <mi-tooltip content=\"Tooltip on top\" side=\"top\">\r\n            <button class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n              Top\r\n            </button>\r\n          </mi-tooltip>\r\n        </div>\r\n        <div></div>\r\n\r\n        <div class=\"flex justify-center\">\r\n          <mi-tooltip content=\"Tooltip on left\" side=\"left\">\r\n            <button class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n              Left\r\n            </button>\r\n          </mi-tooltip>\r\n        </div>\r\n        <div></div>\r\n        <div class=\"flex justify-center\">\r\n          <mi-tooltip content=\"Tooltip on right\" side=\"right\">\r\n            <button class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n              Right\r\n            </button>\r\n          </mi-tooltip>\r\n        </div>\r\n\r\n        <div></div>\r\n        <div class=\"flex justify-center\">\r\n          <mi-tooltip content=\"Tooltip on bottom\" side=\"bottom\">\r\n            <button class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n              Bottom\r\n            </button>\r\n          </mi-tooltip>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n       color: /(background|color)$/i,\n       date: /Date$/i,\n      },\n    },\n    backgrounds: { disable: true },\n  },\n  decorators: [\n    applicationConfig({\n      providers: [provideAnimations()]\n    }),\n    withThemeByClassName({\n      themes: {\n        light: '',\n        dark: 'dark',\n      },\n      defaultTheme: 'light',\n    })\n  ],\n}"
            },
            {
                "name": "productItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    value: 'product-info',\r\n    trigger: 'Product Information',\r\n    content: `\r\n      <p>Our flagship product combines cutting-edge technology with sleek design. Built with premium materials, it offers unparalleled performance and reliability.</p>\r\n      <br>\r\n      <p>Key features include advanced processing capabilities, and an intuitive user interface designed for both beginners and experts.</p>\r\n    `,\r\n  },\r\n  {\r\n    value: 'shipping',\r\n    trigger: 'Shipping Details',\r\n    content: `\r\n      <p>We offer worldwide shipping through trusted courier partners. Standard delivery takes 3-5 business days, while express shipping ensures your order arrives within 1-2 business days.</p>\r\n      <br>\r\n      <p>Free shipping is available for orders over $50. All packages are carefully tracked and insured for your peace of mind.</p>\r\n    `,\r\n  },\r\n  {\r\n    value: 'return-policy',\r\n    trigger: 'Return Policy',\r\n    content: `\r\n      <p>We stand behind our products with a 30-day money-back guarantee. If you're not completely satisfied, you can return any item in its original condition for a full refund.</p>\r\n      <br>\r\n      <p>Returns are easy - just contact our customer service team and they'll provide a prepaid shipping label.</p>\r\n    `,\r\n  },\r\n]"
            },
            {
                "name": "ProductTable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    columns: [\r\n      { key: 'sku', header: 'SKU', width: '100px' },\r\n      { key: 'name', header: 'Product Name' },\r\n      { key: 'category', header: 'Category' },\r\n      { key: 'price', header: 'Price', width: '100px' },\r\n      { key: 'stock', header: 'Stock', width: '80px' },\r\n    ],\r\n    data: [\r\n      {\r\n        sku: 'PRD-001',\r\n        name: 'Wireless Headphones',\r\n        category: 'Electronics',\r\n        price: '$99.99',\r\n        stock: 45\r\n      },\r\n      {\r\n        sku: 'PRD-002',\r\n        name: 'Coffee Mug',\r\n        category: 'Kitchen',\r\n        price: '$12.99',\r\n        stock: 120\r\n      },\r\n      {\r\n        sku: 'PRD-003',\r\n        name: 'Laptop Stand',\r\n        category: 'Office',\r\n        price: '$29.99',\r\n        stock: 8\r\n      },\r\n    ]\r\n  }\r\n}"
            },
            {
                "name": "ProfileForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    fields: profileFormFields,\r\n    submitButtonText: 'Update Profile',\r\n    showCancelButton: true,\r\n    initialValues: {\r\n      username: 'johndoe',\r\n      email: 'john@example.com',\r\n      country: 'us',\r\n      newsletter: true,\r\n      plan: 'pro',\r\n    },\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onFormSubmit: (data: any) => {\r\n        console.log('Profile updated:', data);\r\n        alert('Profile updated! Check console for data.');\r\n      },\r\n      onFormCancel: () => {\r\n        console.log('Update cancelled');\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-96\">\r\n        <mi-form\r\n          [fields]=\"fields\"\r\n          [initialValues]=\"initialValues\"\r\n          [submitButtonText]=\"submitButtonText\"\r\n          [cancelButtonText]=\"cancelButtonText\"\r\n          [showCancelButton]=\"showCancelButton\"\r\n          [loading]=\"loading\"\r\n          (formSubmit)=\"onFormSubmit($event)\"\r\n          (formCancel)=\"onFormCancel()\">\r\n        </mi-form>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "profileFormFields",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FormField[]",
                "defaultValue": "[\r\n  {\r\n    name: 'username',\r\n    label: 'Username',\r\n    type: 'text',\r\n    placeholder: 'Enter username',\r\n    required: true,\r\n    validators: [Validators.minLength(3)],\r\n  },\r\n  {\r\n    name: 'email',\r\n    label: 'Email',\r\n    type: 'email',\r\n    placeholder: 'Enter email address',\r\n    required: true,\r\n  },\r\n  {\r\n    name: 'password',\r\n    label: 'Password',\r\n    type: 'password',\r\n    placeholder: 'Enter password',\r\n    required: true,\r\n    validators: [Validators.minLength(8)],\r\n  },\r\n  {\r\n    name: 'age',\r\n    label: 'Age',\r\n    type: 'number',\r\n    placeholder: 'Enter your age',\r\n  },\r\n  {\r\n    name: 'country',\r\n    label: 'Country',\r\n    type: 'select',\r\n    required: true,\r\n    options: [\r\n      { value: 'us', label: 'United States' },\r\n      { value: 'ca', label: 'Canada' },\r\n      { value: 'uk', label: 'United Kingdom' },\r\n      { value: 'de', label: 'Germany' },\r\n      { value: 'fr', label: 'France' },\r\n    ],\r\n  },\r\n  {\r\n    name: 'newsletter',\r\n    label: 'Subscribe to newsletter',\r\n    type: 'checkbox',\r\n    description: 'Get the latest updates and news.',\r\n  },\r\n  {\r\n    name: 'plan',\r\n    label: 'Subscription Plan',\r\n    type: 'radio',\r\n    required: true,\r\n    options: [\r\n      { value: 'basic', label: 'Basic ($9/month)' },\r\n      { value: 'pro', label: 'Pro ($19/month)' },\r\n      { value: 'enterprise', label: 'Enterprise ($49/month)' },\r\n    ],\r\n  },\r\n]"
            },
            {
                "name": "Range",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    min: 0,\r\n    max: 20,\r\n    step: 1,\r\n    orientation: 'horizontal',\r\n    size: 'md',\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      currentValue: 10,\r\n    },\r\n    template: `\r\n      <div class=\"w-80 space-y-4\">\r\n        <mi-slider\r\n          [min]=\"min\"\r\n          [max]=\"max\"\r\n          [step]=\"step\"\r\n          [orientation]=\"orientation\"\r\n          [size]=\"size\"\r\n          [disabled]=\"disabled\">\r\n        </mi-slider>\r\n        <div class=\"text-sm text-muted-foreground\">\r\n          Range: {{ min }} - {{ max }}, Value: {{ currentValue }}\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Right",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'right',\r\n    variant: 'sidebar',\r\n    collapsible: 'offcanvas',\r\n    className: '',\r\n  },\r\n}"
            },
            {
                "name": "sampleToasts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: '1',\r\n    title: 'Success',\r\n    description: 'Your changes have been saved.',\r\n    variant: 'success' as const,\r\n    position: 'bottom-right' as const,\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Warning',\r\n    description: 'Please check your input.',\r\n    variant: 'warning' as const,\r\n    position: 'bottom-right' as const,\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Error',\r\n    description: 'Something went wrong.',\r\n    variant: 'destructive' as const,\r\n    position: 'bottom-right' as const,\r\n  },\r\n]"
            },
            {
                "name": "sampleUsers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "User[]",
                "defaultValue": "[\r\n  { id: 1, name: 'John Doe', email: 'john@example.com', age: 32, isActive: true, joinDate: '2023-01-15' },\r\n  { id: 2, name: 'Jane Smith', email: 'jane@example.com', age: 28, isActive: true, joinDate: '2023-02-20' },\r\n  { id: 3, name: 'Bob Johnson', email: 'bob@example.com', age: 45, isActive: false, joinDate: '2023-03-10' },\r\n  { id: 4, name: 'Alice Brown', email: 'alice@example.com', age: 35, isActive: true, joinDate: '2023-04-05' },\r\n  { id: 5, name: 'Charlie Wilson', email: 'charlie@example.com', age: 29, isActive: false, joinDate: '2023-05-12' },\r\n  { id: 6, name: 'Diana Davis', email: 'diana@example.com', age: 31, isActive: true, joinDate: '2023-06-18' },\r\n  { id: 7, name: 'Edward Miller', email: 'edward@example.com', age: 38, isActive: true, joinDate: '2023-07-22' },\r\n  { id: 8, name: 'Fiona Taylor', email: 'fiona@example.com', age: 26, isActive: false, joinDate: '2023-08-14' },\r\n  { id: 9, name: 'George Anderson', email: 'george@example.com', age: 42, isActive: true, joinDate: '2023-09-03' },\r\n  { id: 10, name: 'Helen Thomas', email: 'helen@example.com', age: 33, isActive: true, joinDate: '2023-10-01' },\r\n  { id: 11, name: 'Ian Jackson', email: 'ian@example.com', age: 27, isActive: false, joinDate: '2023-11-15' },\r\n  { id: 12, name: 'Julia White', email: 'julia@example.com', age: 30, isActive: true, joinDate: '2023-12-08' },\r\n]"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'secondary' },\n  render: (args) => ({\n    props: {\n      ...args,\n      handleClick: (event: Event) => {\n        console.log('Secondary button clicked!', event);\n        alert('Secondary button clicked!');\n      }\n    },\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\"\n      (buttonClick)=\"handleClick($event)\">\n      Secondary\n    </mi-button>`,\n  }),\n}"
            },
            {
                "name": "ShadcnExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: productItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    defaultValue: 'product-info',\r\n    className: 'w-full',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Example that matches the official shadcn/ui accordion demo with product information.',\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    menus: simpleMenus,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onItemSelect: (event: any) => {\r\n        console.log('Simple menu item selected:', event);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-full max-w-sm\">\r\n        <mi-menubar\r\n          [menus]=\"menus\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-menubar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "SimpleContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-card [variant]=\"variant\" [class]=\"class\" style=\"width: 300px;\">\r\n        <mi-card-content>\r\n          <div class=\"text-center\">\r\n            <mi-icon name=\"check-circle\" size=\"48\" class=\"mx-auto mb-4 text-green-500\"></mi-icon>\r\n            <h3 class=\"text-lg font-semibold mb-2\">Success!</h3>\r\n            <p class=\"text-sm text-muted-foreground\">Your action was completed successfully.</p>\r\n          </div>\r\n        </mi-card-content>\r\n      </mi-card>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "simpleFields",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FormField[]",
                "defaultValue": "[\r\n  {\r\n    name: 'name',\r\n    label: 'Name',\r\n    type: 'text',\r\n    placeholder: 'Enter your name',\r\n    required: true,\r\n  },\r\n  {\r\n    name: 'email',\r\n    label: 'Email',\r\n    type: 'email',\r\n    placeholder: 'Enter your email',\r\n    required: true,\r\n  },\r\n]"
            },
            {
                "name": "SimpleForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    fields: simpleFields,\r\n    submitButtonText: 'Submit',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onFormSubmit: (data: any) => {\r\n        console.log('Simple form submitted:', data);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-80\">\r\n        <mi-form\r\n          [fields]=\"fields\"\r\n          [submitButtonText]=\"submitButtonText\"\r\n          (formSubmit)=\"onFormSubmit($event)\">\r\n        </mi-form>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "simpleItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/command.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CommandItem[]",
                "defaultValue": "[\r\n  { value: 'calendar', label: 'Calendar', icon: 'M8 2v4m8-4v4M3 10h18M5 4h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z' },\r\n  { value: 'search-emoji', label: 'Search Emoji', icon: 'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z' },\r\n  { value: 'calculator', label: 'Calculator', icon: 'M3 7v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2z' },\r\n]"
            },
            {
                "name": "simpleMenus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenubarMenu[]",
                "defaultValue": "[\r\n  {\r\n    label: 'File',\r\n    value: 'file',\r\n    items: [\r\n      { label: 'New', value: 'new', shortcut: '⌘N' },\r\n      { label: 'Open', value: 'open', shortcut: '⌘O' },\r\n      { label: 'Save', value: 'save', shortcut: '⌘S' },\r\n      { separator: true },\r\n      { label: 'Exit', value: 'exit' }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Edit',\r\n    value: 'edit',\r\n    items: [\r\n      { label: 'Cut', value: 'cut', shortcut: '⌘X' },\r\n      { label: 'Copy', value: 'copy', shortcut: '⌘C' },\r\n      { label: 'Paste', value: 'paste', shortcut: '⌘V' }\r\n    ]\r\n  }\r\n]"
            },
            {
                "name": "SimpleMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    description: 'File saved successfully.',\r\n    variant: 'success',\r\n    icon: 'Check',\r\n    closable: false,\r\n  },\r\n}"
            },
            {
                "name": "SimpleNavigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      { label: 'Home', href: '/' },\r\n      { label: 'Library', href: '/library' },\r\n      { label: 'Data', href: '/library/data' },\r\n      { label: 'Current Page' }\r\n    ]\r\n  }\r\n}"
            },
            {
                "name": "SingleItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      { label: 'Dashboard' }\r\n    ]\r\n  }\r\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-4\">\r\n        <mi-avatar size=\"sm\" src=\"https://github.com/shadcn.png\" alt=\"Small avatar\"></mi-avatar>\r\n        <mi-avatar size=\"default\" src=\"https://github.com/shadcn.png\" alt=\"Default avatar\"></mi-avatar>\r\n        <mi-avatar size=\"lg\" src=\"https://github.com/shadcn.png\" alt=\"Large avatar\"></mi-avatar>\r\n        <mi-avatar size=\"xl\" src=\"https://github.com/shadcn.png\" alt=\"Extra large avatar\"></mi-avatar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex flex-wrap items-center gap-2\">\r\n        <mi-badge size=\"sm\">Small</mi-badge>\r\n        <mi-badge size=\"default\">Default</mi-badge>\r\n        <mi-badge size=\"lg\">Large</mi-badge>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <mi-checkbox size=\"sm\">Small checkbox</mi-checkbox>\r\n        <mi-checkbox size=\"default\">Default checkbox</mi-checkbox>\r\n        <mi-checkbox size=\"lg\">Large checkbox</mi-checkbox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <div>\r\n          <mi-label>Small Input</mi-label>\r\n          <mi-input size=\"sm\" placeholder=\"Small input\" />\r\n        </div>\r\n\r\n        <div>\r\n          <mi-label>Default Input</mi-label>\r\n          <mi-input size=\"default\" placeholder=\"Default input\" />\r\n        </div>\r\n\r\n        <div>\r\n          <mi-label>Large Input</mi-label>\r\n          <mi-input size=\"lg\" placeholder=\"Large input\" />\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex flex-col gap-4\">\r\n        <mi-label size=\"sm\">Small Label</mi-label>\r\n        <mi-label size=\"default\">Default Label</mi-label>\r\n        <mi-label size=\"lg\">Large Label</mi-label>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/progress.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 space-y-4\">\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Small</p>\r\n          <mi-progress [value]=\"75\" size=\"sm\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Default</p>\r\n          <mi-progress [value]=\"75\" size=\"default\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Large</p>\r\n          <mi-progress [value]=\"75\" size=\"lg\"></mi-progress>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Small</label>\r\n          <mi-select [options]=\"smallOptions\" placeholder=\"Select option...\" size=\"sm\"></mi-select>\r\n        </div>\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Default</label>\r\n          <mi-select [options]=\"defaultOptions\" placeholder=\"Select option...\" size=\"default\"></mi-select>\r\n        </div>\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Large</label>\r\n          <mi-select [options]=\"largeOptions\" placeholder=\"Select option...\" size=\"lg\"></mi-select>\r\n        </div>\r\n      </div>\r\n    `,\r\n    props: {\r\n      smallOptions: basicOptions,\r\n      defaultOptions: basicOptions,\r\n      largeOptions: basicOptions,\r\n    },\r\n  }),\r\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex flex-col gap-4\">\r\n        <div class=\"flex items-center gap-2\">\r\n          <mi-switch size=\"sm\" [checked]=\"true\">Small</mi-switch>\r\n        </div>\r\n        <div class=\"flex items-center gap-2\">\r\n          <mi-switch size=\"default\" [checked]=\"true\">Default</mi-switch>\r\n        </div>\r\n        <div class=\"flex items-center gap-2\">\r\n          <mi-switch size=\"lg\" [checked]=\"true\">Large</mi-switch>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      items: textFormattingItems,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Size demo value changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Small</label>\r\n          <mi-toggle-group\r\n            [items]=\"items\"\r\n            size=\"sm\"\r\n            value=\"bold\"\r\n            (valueChange)=\"onValueChange($event)\">\r\n          </mi-toggle-group>\r\n        </div>\r\n\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Medium (Default)</label>\r\n          <mi-toggle-group\r\n            [items]=\"items\"\r\n            size=\"md\"\r\n            value=\"italic\"\r\n            (valueChange)=\"onValueChange($event)\">\r\n          </mi-toggle-group>\r\n        </div>\r\n\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Large</label>\r\n          <mi-toggle-group\r\n            [items]=\"items\"\r\n            size=\"lg\"\r\n            value=\"underline\"\r\n            (valueChange)=\"onValueChange($event)\">\r\n          </mi-toggle-group>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { size: 'sm' },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      Small\n    </mi-button>`,\n  }),\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'sm',\r\n    className: '',\r\n  },\r\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'sm',\r\n    hideScrollbar: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-scroll-area [size]=\"size\" [hideScrollbar]=\"hideScrollbar\" class=\"w-48 border rounded-md\">\r\n        <div class=\"p-4 space-y-2\">\r\n          <p class=\"text-sm\">\r\n            Radix Primitives is a low-level UI primitive library with a focus on accessibility, customization and developer experience.\r\n          </p>\r\n          <p class=\"text-sm\">\r\n            You can use these primitives to build your own design system, or you can use them as a starting point and customize them to your needs.\r\n          </p>\r\n          <p class=\"text-sm\">\r\n            All primitives are built with accessibility in mind and follow the WAI-ARIA guidelines.\r\n          </p>\r\n        </div>\r\n      </mi-scroll-area>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'default',\r\n    size: 'sm',\r\n    pressed: false,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-toggle\r\n        [variant]=\"variant\"\r\n        [size]=\"size\"\r\n        [pressed]=\"pressed\"\r\n        [disabled]=\"disabled\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          class=\"h-4 w-4\">\r\n          <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"/>\r\n        </svg>\r\n      </mi-toggle>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "SmallSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    min: 0,\r\n    max: 100,\r\n    step: 5,\r\n    orientation: 'horizontal',\r\n    size: 'sm',\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      currentValue: 25,\r\n    },\r\n    template: `\r\n      <div class=\"w-80 space-y-4\">\r\n        <mi-slider\r\n          [min]=\"min\"\r\n          [max]=\"max\"\r\n          [step]=\"step\"\r\n          [orientation]=\"orientation\"\r\n          [size]=\"size\"\r\n          [disabled]=\"disabled\">\r\n        </mi-slider>\r\n        <div class=\"text-sm text-muted-foreground\">\r\n          Small size, Step: {{ step }}, Value: {{ currentValue }}\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "SpacingAndAlignment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'default' },\n  render: (args) => ({\n    props: args,\n    template: `<div class=\"space-y-6 p-4\">\n      <div class=\"space-y-3\">\n        <h3 class=\"text-lg font-semibold\">Perfect Icon + Text Spacing</h3>\n        <div class=\"flex gap-4 flex-wrap\">\n          <mi-button\n            [variant]=\"variant\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            📧 Send Email\n          </mi-button>\n\n          <mi-button\n            variant=\"secondary\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            📎 Attach File\n          </mi-button>\n\n          <mi-button\n            variant=\"outline\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            🔄 Refresh Data\n          </mi-button>\n        </div>\n      </div>\n\n      <div class=\"space-y-3\">\n        <h3 class=\"text-lg font-semibold\">SVG Icons with Perfect Alignment</h3>\n        <div class=\"flex gap-4 flex-wrap\">\n          <mi-button\n            [variant]=\"variant\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"/>\n              <polyline points=\"16,6 12,2 8,6\"/>\n              <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"15\"/>\n            </svg>\n            Save Document\n          </mi-button>\n\n          <mi-button\n            variant=\"secondary\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            Copy Link\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"/>\n              <path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"/>\n            </svg>\n          </mi-button>\n        </div>\n      </div>\n\n      <div class=\"space-y-3\">\n        <h3 class=\"text-lg font-semibold\">Different Sizes with Consistent Spacing</h3>\n        <div class=\"flex gap-4 items-center flex-wrap\">\n          <mi-button\n            [variant]=\"variant\"\n            size=\"sm\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            🔍 Search\n          </mi-button>\n\n          <mi-button\n            [variant]=\"variant\"\n            size=\"default\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            📊 Analytics\n          </mi-button>\n\n          <mi-button\n            [variant]=\"variant\"\n            size=\"lg\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            🚀 Launch\n          </mi-button>\n        </div>\n      </div>\n    </div>`,\n  }),\n}"
            },
            {
                "name": "Square",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    ratio: 'square',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-aspect-ratio [ratio]=\"ratio\" class=\"bg-muted rounded-md overflow-hidden\">\r\n        <img\r\n          src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\r\n          alt=\"Photo by Drew Beamer\"\r\n          class=\"h-full w-full object-cover\"\r\n        />\r\n      </mi-aspect-ratio>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "States",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <mi-checkbox [checked]=\"false\">Unchecked</mi-checkbox>\r\n        <mi-checkbox [checked]=\"true\">Checked</mi-checkbox>\r\n        <mi-checkbox [indeterminate]=\"true\">Indeterminate</mi-checkbox>\r\n        <mi-checkbox [disabled]=\"true\">Disabled unchecked</mi-checkbox>\r\n        <mi-checkbox [checked]=\"true\" [disabled]=\"true\">Disabled checked</mi-checkbox>\r\n        <mi-checkbox [indeterminate]=\"true\" [disabled]=\"true\">Disabled indeterminate</mi-checkbox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "States",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <h3 class=\"text-lg font-semibold\">Input States</h3>\r\n\r\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <!-- Normal State -->\r\n          <div class=\"space-y-2\">\r\n            <mi-label>Normal State</mi-label>\r\n            <mi-input placeholder=\"Normal input\" />\r\n          </div>\r\n\r\n          <!-- Focused State (simulated) -->\r\n          <div class=\"space-y-2\">\r\n            <mi-label>With Value</mi-label>\r\n            <mi-input value=\"This input has a value\" />\r\n          </div>\r\n\r\n          <!-- Disabled State -->\r\n          <div class=\"space-y-2\">\r\n            <mi-label>Disabled State</mi-label>\r\n            <mi-input\r\n              placeholder=\"Disabled input\"\r\n              disabled=\"true\" />\r\n          </div>\r\n\r\n          <!-- Readonly State -->\r\n          <div class=\"space-y-2\">\r\n            <mi-label>Readonly State</mi-label>\r\n            <mi-input\r\n              value=\"This is readonly text\"\r\n              readonly=\"true\" />\r\n          </div>\r\n\r\n          <!-- Error State -->\r\n          <div class=\"space-y-2\">\r\n            <mi-label>Error State</mi-label>\r\n            <mi-input\r\n              variant=\"destructive\"\r\n              value=\"Invalid input\"\r\n              placeholder=\"Error state input\" />\r\n          </div>\r\n\r\n          <!-- Floating Label - Empty -->\r\n          <div class=\"space-y-2\">\r\n            <mi-input\r\n              variant=\"floating\"\r\n              label=\"Empty Floating Label\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "States",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex flex-col gap-4 w-80\">\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Normal</p>\r\n          <mi-textarea placeholder=\"Normal textarea\" rows=\"3\"></mi-textarea>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Disabled</p>\r\n          <mi-textarea [disabled]=\"true\" placeholder=\"Disabled textarea\" rows=\"3\"></mi-textarea>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Readonly</p>\r\n          <mi-textarea [readonly]=\"true\" value=\"This is readonly content\" rows=\"3\"></mi-textarea>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "StatusIndicators",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <div class=\"space-y-2\">\r\n          <h4 class=\"text-sm font-medium\">Order Status</h4>\r\n          <div class=\"flex gap-2\">\r\n            <mi-badge variant=\"warning\">Pending</mi-badge>\r\n            <mi-badge variant=\"default\">Processing</mi-badge>\r\n            <mi-badge variant=\"success\">Shipped</mi-badge>\r\n            <mi-badge variant=\"secondary\">Delivered</mi-badge>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"space-y-2\">\r\n          <h4 class=\"text-sm font-medium\">User Roles</h4>\r\n          <div class=\"flex gap-2\">\r\n            <mi-badge variant=\"destructive\">Admin</mi-badge>\r\n            <mi-badge variant=\"default\">Moderator</mi-badge>\r\n            <mi-badge variant=\"secondary\">User</mi-badge>\r\n            <mi-badge variant=\"outline\">Guest</mi-badge>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"space-y-2\">\r\n          <h4 class=\"text-sm font-medium\">Priority Levels</h4>\r\n          <div class=\"flex gap-2\">\r\n            <mi-badge variant=\"destructive\">Critical</mi-badge>\r\n            <mi-badge variant=\"warning\">High</mi-badge>\r\n            <mi-badge variant=\"default\">Medium</mi-badge>\r\n            <mi-badge variant=\"secondary\">Low</mi-badge>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Table",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-full\">\r\n        <div class=\"space-y-3\">\r\n          <div class=\"flex space-x-4\">\r\n            <mi-skeleton variant=\"text\" width=\"100px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"150px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"80px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"120px\"></mi-skeleton>\r\n          </div>\r\n          <div class=\"flex space-x-4\">\r\n            <mi-skeleton variant=\"text\" width=\"100px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"150px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"80px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"120px\"></mi-skeleton>\r\n          </div>\r\n          <div class=\"flex space-x-4\">\r\n            <mi-skeleton variant=\"text\" width=\"100px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"150px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"80px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"120px\"></mi-skeleton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'default',\r\n    size: 'default',\r\n    pressed: false,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-toggle\r\n        [variant]=\"variant\"\r\n        [size]=\"size\"\r\n        [pressed]=\"pressed\"\r\n        [disabled]=\"disabled\">\r\n        Toggle\r\n      </mi-toggle>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "textFormattingItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ToggleGroupItem[]",
                "defaultValue": "[\r\n  {\r\n    value: 'bold',\r\n    label: 'Bold',\r\n    icon: 'M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z'\r\n  },\r\n  {\r\n    value: 'italic',\r\n    label: 'Italic',\r\n    icon: 'm19 4-9 16M9 4l9 16'\r\n  },\r\n  {\r\n    value: 'underline',\r\n    label: 'Underline',\r\n    icon: 'M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3'\r\n  }\r\n]"
            },
            {
                "name": "ThemeVariables",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/theme-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"p-6 space-y-6\" style=\"background-color: var(--background); color: var(--foreground); min-height: 100vh;\">\r\n        <h2 class=\"text-2xl font-bold text-foreground\">CSS Variables Test</h2>\r\n\r\n        <!-- Diagnostic Info -->\r\n        <div class=\"mb-6 p-4 border rounded\" style=\"border-color: var(--border);\">\r\n          <h3 class=\"font-semibold mb-2\">Diagnostic Info:</h3>\r\n          <div class=\"text-sm space-y-1\">\r\n            <div>HTML data-mode: <span id=\"data-mode-value\">[checking...]</span></div>\r\n            <div>HTML class list: <span id=\"class-list-value\">[checking...]</span></div>\r\n            <div>Background color: <span id=\"bg-color\" style=\"padding: 2px 8px; border: 1px solid; background-color: var(--background);\">var(--background)</span></div>\r\n            <div>Primary color: <span id=\"primary-color\" style=\"padding: 2px 8px; background-color: var(--primary); color: var(--primary-foreground);\">var(--primary)</span></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--background); border: 1px solid var(--border);\">\r\n            <div class=\"text-sm font-medium\" style=\"color: var(--foreground);\">Background</div>\r\n            <div class=\"text-xs\" style=\"color: var(--muted-foreground);\">var(--background)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--primary); color: var(--primary-foreground);\">\r\n            <div class=\"text-sm font-medium\">Primary</div>\r\n            <div class=\"text-xs opacity-80\">var(--primary)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--secondary); color: var(--secondary-foreground);\">\r\n            <div class=\"text-sm font-medium\">Secondary</div>\r\n            <div class=\"text-xs opacity-80\">var(--secondary)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--muted); color: var(--muted-foreground);\">\r\n            <div class=\"text-sm font-medium\">Muted</div>\r\n            <div class=\"text-xs opacity-80\">var(--muted)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--accent); color: var(--accent-foreground);\">\r\n            <div class=\"text-sm font-medium\">Accent</div>\r\n            <div class=\"text-xs opacity-80\">var(--accent)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--destructive); color: var(--destructive-foreground);\">\r\n            <div class=\"text-sm font-medium\">Destructive</div>\r\n            <div class=\"text-xs opacity-80\">var(--destructive)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--card); color: var(--card-foreground); border: 1px solid var(--border);\">\r\n            <div class=\"text-sm font-medium\">Card</div>\r\n            <div class=\"text-xs opacity-80\">var(--card)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg border\" style=\"border-color: var(--ring); background-color: var(--background); color: var(--foreground);\">\r\n            <div class=\"text-sm font-medium\">Ring/Border</div>\r\n            <div class=\"text-xs\" style=\"color: var(--muted-foreground);\">var(--ring)</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex gap-2 mt-6\">\r\n          <button\r\n            class=\"px-4 py-2 rounded\"\r\n            style=\"background-color: var(--primary); color: var(--primary-foreground);\"\r\n            onclick=\"\r\n              document.documentElement.setAttribute('data-mode', 'light');\r\n              document.documentElement.classList.remove('dark');\r\n              updateDiagnostics();\r\n              console.log('🎨 Manual: Switched to Light');\r\n            \">\r\n            ☀️ Light\r\n          </button>\r\n          <button\r\n            class=\"px-4 py-2 rounded\"\r\n            style=\"background-color: var(--primary); color: var(--primary-foreground);\"\r\n            onclick=\"\r\n              document.documentElement.setAttribute('data-mode', 'dark');\r\n              document.documentElement.classList.add('dark');\r\n              updateDiagnostics();\r\n              console.log('🎨 Manual: Switched to Dark');\r\n            \">\r\n            🌙 Dark\r\n          </button>\r\n        </div>\r\n\r\n        <script>\r\n          function updateDiagnostics() {\r\n            setTimeout(() => {\r\n              document.getElementById('data-mode-value').textContent = document.documentElement.getAttribute('data-mode') || 'none';\r\n              document.getElementById('class-list-value').textContent = document.documentElement.className || 'none';\r\n            }, 100);\r\n          }\r\n          updateDiagnostics();\r\n        </script>\r\n\r\n        <div class=\"mt-8 p-4\" style=\"background-color: var(--muted); color: var(--muted-foreground); border-radius: 8px;\">\r\n          <p class=\"text-sm\">\r\n            Each color box should show different values when switching between light and dark themes.\r\n            Use the buttons above to test manual theme switching.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "TitleOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: 'CheckCircle',\r\n    title: 'Success',\r\n  },\r\n}"
            },
            {
                "name": "TopSide",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'top',\r\n    open: false,\r\n    dismissible: true,\r\n    modal: true,\r\n  },\r\n}"
            },
            {
                "name": "TopSide",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/hover-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    side: 'top',\r\n    openDelay: 500,\r\n    closeDelay: 300,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"mt-20\">\r\n        <mi-hover-card [side]=\"side\" [openDelay]=\"openDelay\" [closeDelay]=\"closeDelay\">\r\n          <button\r\n            slot=\"trigger\"\r\n            class=\"inline-flex h-10 items-center justify-center whitespace-nowrap rounded-md bg-primary px-4 py-2 text-sm font-medium text-primary-foreground ring-offset-background transition-colors hover:bg-primary/90 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\"\r\n          >\r\n            Hover for details\r\n          </button>\r\n\r\n          <div class=\"flex justify-between space-x-4\">\r\n            <div class=\"space-y-1\">\r\n              <h4 class=\"text-sm font-semibold\">Angular Component Library</h4>\r\n              <p class=\"text-sm\">\r\n                Beautiful, accessible components built with Angular and Tailwind CSS.\r\n              </p>\r\n              <div class=\"flex items-center pt-2\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  stroke-width=\"2\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"\r\n                  class=\"mr-2 h-4 w-4 opacity-70\">\r\n                  <path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"/>\r\n                  <polyline points=\"9,22 9,12 15,12 15,22\"/>\r\n                </svg>\r\n                <span class=\"text-xs text-muted-foreground\">\r\n                  Open source project\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mi-hover-card>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "TopSide",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    isOpen: true,\r\n    side: 'top',\r\n    size: 'md',\r\n    title: 'Notifications',\r\n    description: 'Recent notifications and updates.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-sheet\r\n        [isOpen]=\"isOpen\"\r\n        [side]=\"side\"\r\n        [size]=\"size\"\r\n        [title]=\"title\"\r\n        [description]=\"description\">\r\n        <div class=\"space-y-4\">\r\n          <div class=\"p-3 border rounded\">\r\n            <h4 class=\"font-medium\">New message received</h4>\r\n            <p class=\"text-sm text-muted-foreground\">From John Doe</p>\r\n          </div>\r\n          <div class=\"p-3 border rounded\">\r\n            <h4 class=\"font-medium\">System update available</h4>\r\n            <p class=\"text-sm text-muted-foreground\">Version 2.1.0 is ready</p>\r\n          </div>\r\n        </div>\r\n      </mi-sheet>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Underline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    tabs: basicTabs,\r\n    defaultValue: 'tab1',\r\n    variant: 'underline',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-96\">\r\n        <mi-tabs [tabs]=\"tabs\" [defaultValue]=\"defaultValue\" [variant]=\"variant\">\r\n          <div class=\"mt-4 p-4\">\r\n            <h3 class=\"text-lg font-medium mb-2\">Account Information</h3>\r\n            <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              Make changes to your account here. Click save when you're done.\r\n            </p>\r\n          </div>\r\n        </mi-tabs>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "UserAccountMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      items: [\r\n        { label: 'My Profile', value: 'profile', icon: '👤' },\r\n        { label: 'Account Settings', value: 'settings', icon: '⚙️' },\r\n        { label: 'Billing', value: 'billing', icon: '💳' },\r\n        { separator: true, label: '' },\r\n        { label: 'Team Settings', value: 'team', icon: '👥' },\r\n        { label: 'Invite Users', value: 'invite', icon: '➕', shortcut: '⌘+I' },\r\n        { separator: true, label: '' },\r\n        { label: 'Help & Support', value: 'help', icon: '❓' },\r\n        { label: 'Sign Out', value: 'signout', icon: '🚪' },\r\n      ],\r\n      onItemClick(item: DropdownMenuItem) {\r\n        console.log('Account action:', item.value);\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"p-8 flex justify-center\">\r\n        <mi-dropdown-menu [items]=\"items\" (itemClick)=\"onItemClick($event)\">\r\n          <mi-button>\r\n            John Doe\r\n            <span class=\"ml-2\">▼</span>\r\n          </mi-button>\r\n        </mi-dropdown-menu>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "userColumns",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DataTableColumn[]",
                "defaultValue": "[\r\n  {\r\n    key: 'id',\r\n    header: 'ID',\r\n    sortable: true,\r\n    width: '80px',\r\n    type: 'number'\r\n  },\r\n  {\r\n    key: 'name',\r\n    header: 'Name',\r\n    sortable: true,\r\n    type: 'text'\r\n  },\r\n  {\r\n    key: 'email',\r\n    header: 'Email',\r\n    sortable: true,\r\n    type: 'text'\r\n  },\r\n  {\r\n    key: 'age',\r\n    header: 'Age',\r\n    sortable: true,\r\n    width: '100px',\r\n    type: 'number'\r\n  },\r\n  {\r\n    key: 'isActive',\r\n    header: 'Status',\r\n    sortable: true,\r\n    width: '120px',\r\n    type: 'boolean'\r\n  },\r\n  {\r\n    key: 'joinDate',\r\n    header: 'Join Date',\r\n    sortable: true,\r\n    width: '150px',\r\n    type: 'date'\r\n  }\r\n]"
            },
            {
                "name": "UserProfile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-6\" style=\"max-width: 300px;\">\r\n        <div class=\"text-center\">\r\n          <mi-avatar src=\"https://github.com/shadcn.png\" alt=\"Profile picture\" size=\"xl\" class=\"mx-auto mb-4\"></mi-avatar>\r\n          <h3 class=\"text-lg font-semibold\">John Doe</h3>\r\n          <p class=\"text-sm text-muted-foreground\">Software Engineer</p>\r\n          <mi-badge variant=\"success\" class=\"mt-2\">Available</mi-badge>\r\n        </div>\r\n\r\n        <div class=\"border rounded-lg p-4\">\r\n          <h4 class=\"text-sm font-medium mb-3\">Quick Actions</h4>\r\n          <div class=\"space-y-2\">\r\n            <div class=\"flex items-center gap-3\">\r\n              <mi-avatar fallback=\"DM\" size=\"sm\"></mi-avatar>\r\n              <span class=\"text-sm\">Send direct message</span>\r\n            </div>\r\n            <div class=\"flex items-center gap-3\">\r\n              <mi-avatar fallback=\"VC\" size=\"sm\"></mi-avatar>\r\n              <span class=\"text-sm\">Start video call</span>\r\n            </div>\r\n            <div class=\"flex items-center gap-3\">\r\n              <mi-avatar fallback=\"SP\" size=\"sm\"></mi-avatar>\r\n              <span class=\"text-sm\">Share profile</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "UserTable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    columns: [\r\n      { key: 'id', header: 'ID', width: '80px' },\r\n      { key: 'name', header: 'Name' },\r\n      { key: 'email', header: 'Email' },\r\n      { key: 'role', header: 'Role' },\r\n      { key: 'status', header: 'Status', width: '120px' },\r\n      { key: 'joinDate', header: 'Join Date' },\r\n    ],\r\n    data: [\r\n      {\r\n        id: 1,\r\n        name: 'John Doe',\r\n        email: 'john@example.com',\r\n        role: 'Admin',\r\n        status: 'Active',\r\n        joinDate: '2024-01-15'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Jane Smith',\r\n        email: 'jane@example.com',\r\n        role: 'User',\r\n        status: 'Inactive',\r\n        joinDate: '2024-02-20'\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Bob Johnson',\r\n        email: 'bob@example.com',\r\n        role: 'Moderator',\r\n        status: 'Active',\r\n        joinDate: '2024-03-10'\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'Alice Brown',\r\n        email: 'alice@example.com',\r\n        role: 'User',\r\n        status: 'Pending',\r\n        joinDate: '2024-03-25'\r\n      },\r\n    ]\r\n  }\r\n}"
            },
            {
                "name": "Variants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <mi-alert variant=\"default\" icon=\"Info\" title=\"Default Alert\"\r\n                  description=\"This is a default alert for general information.\">\r\n        </mi-alert>\r\n\r\n        <mi-alert variant=\"destructive\" icon=\"AlertTriangle\" title=\"Destructive Alert\"\r\n                  description=\"This is a destructive alert for errors or warnings.\">\r\n        </mi-alert>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Variants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex flex-wrap gap-2\">\r\n        <mi-badge variant=\"default\">Default</mi-badge>\r\n        <mi-badge variant=\"secondary\">Secondary</mi-badge>\r\n        <mi-badge variant=\"destructive\">Destructive</mi-badge>\r\n        <mi-badge variant=\"outline\">Outline</mi-badge>\r\n        <mi-badge variant=\"success\">Success</mi-badge>\r\n        <mi-badge variant=\"warning\">Warning</mi-badge>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Variants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/progress.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 space-y-4\">\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Default</p>\r\n          <mi-progress [value]=\"60\" variant=\"default\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Success</p>\r\n          <mi-progress [value]=\"85\" variant=\"success\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Warning</p>\r\n          <mi-progress [value]=\"45\" variant=\"warning\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Destructive</p>\r\n          <mi-progress [value]=\"25\" variant=\"destructive\"></mi-progress>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Variants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Default</p>\r\n          <mi-skeleton variant=\"default\" width=\"200px\" height=\"20px\"></mi-skeleton>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Text</p>\r\n          <mi-skeleton variant=\"text\" width=\"150px\"></mi-skeleton>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Avatar</p>\r\n          <mi-skeleton variant=\"avatar\" width=\"40px\" height=\"40px\"></mi-skeleton>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Button</p>\r\n          <mi-skeleton variant=\"button\" width=\"100px\"></mi-skeleton>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Variants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex flex-col gap-4 w-80\">\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Default</p>\r\n          <mi-textarea placeholder=\"Default textarea\" rows=\"3\"></mi-textarea>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Error State</p>\r\n          <mi-textarea variant=\"destructive\" placeholder=\"Error textarea\" rows=\"3\"></mi-textarea>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Variants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-4 w-96\">\r\n        <mi-toast\r\n          title=\"Default Toast\"\r\n          description=\"This is a default toast notification.\"\r\n          variant=\"default\"\r\n          icon=\"Bell\">\r\n        </mi-toast>\r\n\r\n        <mi-toast\r\n          title=\"Success!\"\r\n          description=\"Your action was completed successfully.\"\r\n          variant=\"success\"\r\n          icon=\"CheckCircle\">\r\n        </mi-toast>\r\n\r\n        <mi-toast\r\n          title=\"Warning\"\r\n          description=\"Please review your settings before continuing.\"\r\n          variant=\"warning\"\r\n          icon=\"AlertTriangle\">\r\n        </mi-toast>\r\n\r\n        <mi-toast\r\n          title=\"Error\"\r\n          description=\"Something went wrong. Please try again.\"\r\n          variant=\"destructive\"\r\n          icon=\"AlertCircle\">\r\n        </mi-toast>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Variants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex gap-4\">\r\n        <mi-tooltip content=\"Default tooltip\" variant=\"default\">\r\n          <button class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n            Default\r\n          </button>\r\n        </mi-tooltip>\r\n\r\n        <mi-tooltip content=\"Secondary tooltip\" variant=\"secondary\">\r\n          <button class=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\">\r\n            Secondary\r\n          </button>\r\n        </mi-tooltip>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Vertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    orientation: 'vertical',\r\n  },\r\n}"
            },
            {
                "name": "Vertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/resizable.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    direction: 'vertical',\r\n  },\r\n}"
            },
            {
                "name": "Vertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/separator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    orientation: 'vertical',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex h-5 items-center space-x-4 text-sm\">\r\n        <div>Blog</div>\r\n        <mi-separator [orientation]=\"orientation\"></mi-separator>\r\n        <div>Docs</div>\r\n        <mi-separator [orientation]=\"orientation\"></mi-separator>\r\n        <div>Source</div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "Vertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: textFormattingItems,\r\n    orientation: 'vertical',\r\n    value: 'bold',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Vertical value changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Vertical Orientation</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          [orientation]=\"orientation\"\r\n          (valueChange)=\"onValueChange($event)\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    title: 'New Update Available',\r\n    description: 'Version 2.0 is now available for download.',\r\n    variant: 'default',\r\n    icon: 'Download',\r\n    action: 'Update',\r\n    closable: true,\r\n  },\r\n}"
            },
            {
                "name": "WithActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/context-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    menuItems: [\r\n      {\r\n        label: 'Cut',\r\n        shortcut: '⌘X',\r\n        action: () => console.log('Cut action')\r\n      },\r\n      {\r\n        label: 'Copy',\r\n        shortcut: '⌘C',\r\n        action: () => console.log('Copy action')\r\n      },\r\n      {\r\n        label: 'Paste',\r\n        shortcut: '⌘V',\r\n        action: () => console.log('Paste action')\r\n      },\r\n      {\r\n        label: 'Delete',\r\n        destructive: true,\r\n        action: () => console.log('Delete action')\r\n      },\r\n    ],\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onItemSelected: (item: ContextMenuItem) => {\r\n        console.log('Selected:', item.label);\r\n      }\r\n    },\r\n    template: `\r\n      <mi-context-menu [menuItems]=\"menuItems\" (itemSelected)=\"onItemSelected($event)\">\r\n        <div class=\"flex h-[150px] w-[300px] items-center justify-center rounded-md border border-dashed text-sm\">\r\n          Right click for edit menu\r\n        </div>\r\n      </mi-context-menu>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithBadge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-6\">\r\n        <div class=\"relative\">\r\n          <mi-avatar src=\"https://github.com/shadcn.png\" alt=\"User avatar\"></mi-avatar>\r\n          <mi-badge variant=\"destructive\" size=\"sm\" class=\"absolute -top-1 -right-1 h-5 w-5 rounded-full p-0 flex items-center justify-center text-xs\">\r\n            3\r\n          </mi-badge>\r\n        </div>\r\n\r\n        <div class=\"relative\">\r\n          <mi-avatar fallback=\"JD\" size=\"lg\"></mi-avatar>\r\n          <mi-badge variant=\"default\" size=\"sm\" class=\"absolute -top-1 -right-1 h-6 w-6 rounded-full p-0 flex items-center justify-center text-xs\">\r\n            9+\r\n          </mi-badge>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithCustomCell",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      columns: [\r\n        { key: 'name', header: 'Name' },\r\n        { key: 'email', header: 'Email' },\r\n        { key: 'status', header: 'Status' },\r\n        { key: 'actions', header: 'Actions', width: '120px' },\r\n      ],\r\n      data: [\r\n        { name: 'John Doe', email: 'john@example.com', status: 'active' },\r\n        { name: 'Jane Smith', email: 'jane@example.com', status: 'inactive' },\r\n        { name: 'Bob Johnson', email: 'bob@example.com', status: 'pending' },\r\n      ]\r\n    },\r\n    template: `\r\n      <mi-table [columns]=\"columns\" [data]=\"data\">\r\n        <ng-template #cellTemplate let-item let-column=\"column\" let-value=\"value\">\r\n          <ng-container [ngSwitch]=\"column.key\">\r\n            <mi-badge\r\n              *ngSwitchCase=\"'status'\"\r\n              [variant]=\"value === 'active' ? 'default' : value === 'inactive' ? 'destructive' : 'secondary'\">\r\n              {{ value | titlecase }}\r\n            </mi-badge>\r\n            <div *ngSwitchCase=\"'actions'\" class=\"flex gap-2\">\r\n              <button class=\"text-xs px-2 py-1 bg-blue-100 text-blue-800 rounded hover:bg-blue-200\">Edit</button>\r\n              <button class=\"text-xs px-2 py-1 bg-red-100 text-red-800 rounded hover:bg-red-200\">Delete</button>\r\n            </div>\r\n            <span *ngSwitchDefault>{{ value }}</span>\r\n          </ng-container>\r\n        </ng-template>\r\n      </mi-table>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithCustomContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"p-8 flex justify-center\">\r\n        <mi-popover>\r\n          <mi-button>Settings</mi-button>\r\n          <div slot=\"content\" class=\"space-y-4\">\r\n            <div class=\"space-y-2\">\r\n              <h4 class=\"font-medium leading-none\">Dimensions</h4>\r\n              <p class=\"text-sm text-muted-foreground\">\r\n                Set the dimensions for the layer.\r\n              </p>\r\n            </div>\r\n            <div class=\"grid gap-2\">\r\n              <div class=\"grid grid-cols-3 items-center gap-4\">\r\n                <mi-label htmlFor=\"width\">Width</mi-label>\r\n                <mi-input id=\"width\" value=\"100%\" class=\"col-span-2 h-8\" />\r\n              </div>\r\n              <div class=\"grid grid-cols-3 items-center gap-4\">\r\n                <mi-label htmlFor=\"maxWidth\">Max. width</mi-label>\r\n                <mi-input id=\"maxWidth\" value=\"300px\" class=\"col-span-2 h-8\" />\r\n              </div>\r\n              <div class=\"grid grid-cols-3 items-center gap-4\">\r\n                <mi-label htmlFor=\"height\">Height</mi-label>\r\n                <mi-input id=\"height\" value=\"25px\" class=\"col-span-2 h-8\" />\r\n              </div>\r\n              <div class=\"grid grid-cols-3 items-center gap-4\">\r\n                <mi-label htmlFor=\"maxHeight\">Max. height</mi-label>\r\n                <mi-input id=\"maxHeight\" value=\"none\" class=\"col-span-2 h-8\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mi-popover>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithDateRange",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    minDate: new Date(2024, 0, 1),\r\n    maxDate: new Date(2024, 11, 31),\r\n  },\r\n}"
            },
            {
                "name": "WithDateRange",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Select appointment date',\r\n    minDate: new Date(),\r\n    maxDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days from now\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onDateSelect: (date: Date) => {\r\n        console.log('Appointment date selected:', date);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <label class=\"text-sm font-medium mb-2 block\">Appointment Date</label>\r\n        <p class=\"text-sm text-muted-foreground mb-2\">Select a date within the next 30 days</p>\r\n        <mi-date-picker\r\n          [placeholder]=\"placeholder\"\r\n          [minDate]=\"minDate\"\r\n          [maxDate]=\"maxDate\"\r\n          (dateSelect)=\"onDateSelect($event)\">\r\n        </mi-date-picker>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithDefaultValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: defaultItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    defaultValue: 'item-1',\r\n    className: 'w-full',\r\n  },\r\n}"
            },
            {
                "name": "WithDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      tabs: [\r\n        { value: 'general', label: 'General' },\r\n        { value: 'security', label: 'Security' },\r\n        { value: 'integrations', label: 'Integrations', disabled: true },\r\n        { value: 'advanced', label: 'Advanced' },\r\n      ],\r\n      defaultValue: 'general',\r\n    },\r\n    template: `\r\n      <div class=\"w-96\">\r\n        <mi-tabs [tabs]=\"tabs\" [defaultValue]=\"defaultValue\">\r\n          <div class=\"mt-4 p-4 border border-gray-200 dark:border-gray-700 rounded-md\">\r\n            <h3 class=\"text-lg font-medium mb-2\">Settings</h3>\r\n            <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              Configure your application settings. Some sections may be disabled.\r\n            </p>\r\n          </div>\r\n        </mi-tabs>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithDisabledItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      { label: 'Home', href: '#' },\r\n      { label: 'Disabled Item', disabled: true },\r\n      { label: 'Components', href: '#' },\r\n      { label: 'Current Page' }\r\n    ]\r\n  }\r\n}"
            },
            {
                "name": "WithDisabledItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      items: [\r\n        { label: 'Edit', value: 'edit' },\r\n        { label: 'Copy', value: 'copy', shortcut: '⌘C' },\r\n        { label: 'Paste', value: 'paste', shortcut: '⌘V', disabled: true },\r\n        { separator: true, label: '' },\r\n        { label: 'Delete', value: 'delete', disabled: true },\r\n        { label: 'Rename', value: 'rename' },\r\n      ],\r\n      onItemClick(item: DropdownMenuItem) {\r\n        console.log('Context action:', item.value);\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"p-8 flex justify-center\">\r\n        <mi-dropdown-menu [items]=\"items\" (itemClick)=\"onItemClick($event)\">\r\n          <mi-button variant=\"outline\">Right Click Menu</mi-button>\r\n        </mi-dropdown-menu>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithDisabledItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: mixedItems,\r\n    multiple: true,\r\n    value: ['save'],\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Mixed items value changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">With Disabled Item</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          [multiple]=\"multiple\"\r\n          (valueChange)=\"onValueChange($event)\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithDisabledOption",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/radio-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'disabled-option-radio',\r\n    options: [\r\n      { value: 'option1', label: 'Available Option' },\r\n      { value: 'option2', label: 'Disabled Option', disabled: true },\r\n      { value: 'option3', label: 'Another Available Option' },\r\n    ],\r\n  },\r\n}"
            },
            {
                "name": "WithDisabledOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: optionsWithDisabled,\r\n    placeholder: 'Select an option...',\r\n  },\r\n}"
            },
            {
                "name": "WithError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    length: 6,\r\n    hasError: true,\r\n    errorMessage: 'Invalid verification code. Please try again.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Enter verification code</label>\r\n        <mi-input-otp\r\n          [length]=\"length\"\r\n          [hasError]=\"hasError\"\r\n          [errorMessage]=\"errorMessage\">\r\n        </mi-input-otp>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithFallback",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-4\">\r\n        <mi-avatar fallback=\"AB\" size=\"sm\"></mi-avatar>\r\n        <mi-avatar fallback=\"CD\" size=\"default\"></mi-avatar>\r\n        <mi-avatar fallback=\"EF\" size=\"lg\"></mi-avatar>\r\n        <mi-avatar fallback=\"GH\" size=\"xl\"></mi-avatar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    title: 'Edit Profile',\r\n    description: 'Make changes to your profile here. Click save when you\\'re done.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-dialog [open]=\"open\" [title]=\"title\" [description]=\"description\">\r\n        <div class=\"grid gap-4\">\r\n          <div class=\"grid grid-cols-4 items-center gap-4\">\r\n            <label for=\"name\" class=\"text-right text-sm font-medium\">Name</label>\r\n            <mi-input id=\"name\" value=\"John Doe\" class=\"col-span-3\" />\r\n          </div>\r\n          <div class=\"grid grid-cols-4 items-center gap-4\">\r\n            <label for=\"email\" class=\"text-right text-sm font-medium\">Email</label>\r\n            <mi-input id=\"email\" value=\"john@example.com\" class=\"col-span-3\" />\r\n          </div>\r\n        </div>\r\n        <div slot=\"footer\" class=\"flex justify-end space-x-2\">\r\n          <mi-button variant=\"outline\">Cancel</mi-button>\r\n          <mi-button>Save changes</mi-button>\r\n        </div>\r\n      </mi-dialog>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithGroups",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/command.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    groups: commandGroups,\r\n    placeholder: 'Type a command or search...',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 h-64 border rounded-lg\">\r\n        <mi-command\r\n          [groups]=\"groups\"\r\n          [placeholder]=\"placeholder\"\r\n          [emptyMessage]=\"emptyMessage\"\r\n          [showSearch]=\"showSearch\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-command>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithHandle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/resizable.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    direction: 'horizontal',\r\n  },\r\n}"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-4\">\r\n        <mi-avatar size=\"sm\"></mi-avatar>\r\n        <mi-avatar size=\"default\"></mi-avatar>\r\n        <mi-avatar size=\"lg\"></mi-avatar>\r\n        <mi-avatar size=\"xl\"></mi-avatar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'default' },\n  render: (args) => ({\n    props: args,\n    template: `<div class=\"flex gap-4 flex-wrap\">\n      <mi-button\n        [variant]=\"variant\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [loading]=\"loading\"\n        [loadingText]=\"loadingText\"\n        [type]=\"type\">\n        📧 Send Email\n      </mi-button>\n      <mi-button\n        variant=\"secondary\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [loading]=\"loading\"\n        [type]=\"type\">\n        ⬇️ Download\n      </mi-button>\n      <mi-button\n        variant=\"outline\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [loading]=\"loading\"\n        [type]=\"type\">\n        🔄 Refresh\n      </mi-button>\n      <mi-button\n        variant=\"destructive\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [loading]=\"loading\"\n        [type]=\"type\">\n        🗑️ Delete\n      </mi-button>\n    </div>`,\n  }),\n}"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-card [variant]=\"variant\" [class]=\"class\" style=\"width: 350px;\">\r\n        <mi-card-header>\r\n          <div class=\"flex items-center space-x-2\">\r\n            <mi-icon name=\"star\" size=\"20\"></mi-icon>\r\n            <mi-card-title>Featured Item</mi-card-title>\r\n          </div>\r\n          <mi-card-description>This card includes an icon in the header for visual interest.</mi-card-description>\r\n        </mi-card-header>\r\n        <mi-card-content>\r\n          <p>Icons can help categorize content and make cards more visually appealing.</p>\r\n        </mi-card-content>\r\n        <mi-card-footer>\r\n          <mi-button variant=\"default\">\r\n            <mi-icon name=\"arrow-right\" size=\"16\" class=\"mr-2\"></mi-icon>\r\n            Learn More\r\n          </mi-button>\r\n        </mi-card-footer>\r\n      </mi-card>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex flex-wrap gap-2\">\r\n        <mi-badge variant=\"default\" class=\"flex items-center gap-1\">\r\n          <mi-icon name=\"Check\" size=\"12\"></mi-icon>\r\n          Verified\r\n        </mi-badge>\r\n        <mi-badge variant=\"secondary\" class=\"flex items-center gap-1\">\r\n          <mi-icon name=\"Star\" size=\"12\"></mi-icon>\r\n          Featured\r\n        </mi-badge>\r\n        <mi-badge variant=\"destructive\" class=\"flex items-center gap-1\">\r\n          <mi-icon name=\"X\" size=\"12\"></mi-icon>\r\n          Error\r\n        </mi-badge>\r\n        <mi-badge variant=\"success\" class=\"flex items-center gap-1\">\r\n          <mi-icon name=\"CheckCircle\" size=\"12\"></mi-icon>\r\n          Success\r\n        </mi-badge>\r\n        <mi-badge variant=\"warning\" class=\"flex items-center gap-1\">\r\n          <mi-icon name=\"AlertTriangle\" size=\"12\"></mi-icon>\r\n          Warning\r\n        </mi-badge>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithLabels",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <mi-checkbox>\r\n          I agree to the terms and conditions\r\n        </mi-checkbox>\r\n        <mi-checkbox>\r\n          Subscribe to newsletter for updates and promotions\r\n        </mi-checkbox>\r\n        <mi-checkbox [checked]=\"true\">\r\n          Remember my preferences\r\n        </mi-checkbox>\r\n        <mi-checkbox [indeterminate]=\"true\">\r\n          Enable notifications (some selected)\r\n        </mi-checkbox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithLabels",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/progress.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 space-y-6\">\r\n        <div>\r\n          <div class=\"flex justify-between text-sm mb-2\">\r\n            <span>File Upload</span>\r\n            <span>60%</span>\r\n          </div>\r\n          <mi-progress [value]=\"60\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <div class=\"flex justify-between text-sm mb-2\">\r\n            <span>Storage Used</span>\r\n            <span>85%</span>\r\n          </div>\r\n          <mi-progress [value]=\"85\" variant=\"warning\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <div class=\"flex justify-between text-sm mb-2\">\r\n            <span>Download</span>\r\n            <span>100%</span>\r\n          </div>\r\n          <mi-progress [value]=\"100\" variant=\"success\"></mi-progress>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithLabels",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex flex-col gap-4\">\r\n        <div class=\"flex items-center gap-2\">\r\n          <mi-switch [checked]=\"false\">Airplane Mode</mi-switch>\r\n        </div>\r\n        <div class=\"flex items-center gap-2\">\r\n          <mi-switch [checked]=\"true\">Wi-Fi</mi-switch>\r\n        </div>\r\n        <div class=\"flex items-center gap-2\">\r\n          <mi-switch [checked]=\"false\" [disabled]=\"true\">Bluetooth</mi-switch>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithoutControls",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/carousel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    slides: [1, 2, 3],\r\n    showPrevNext: false,\r\n    showDots: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 max-w-xs\">\r\n        <mi-carousel [slides]=\"slides\" [showPrevNext]=\"showPrevNext\" [showDots]=\"showDots\">\r\n        </mi-carousel>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithoutDescription",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    title: 'Simple Dialog',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-dialog [open]=\"open\" [title]=\"title\">\r\n        <p>This dialog only has a title and content.</p>\r\n        <div slot=\"footer\" class=\"flex justify-end space-x-2\">\r\n          <mi-button variant=\"outline\">Cancel</mi-button>\r\n          <mi-button>Save</mi-button>\r\n        </div>\r\n      </mi-dialog>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithoutIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    title: 'Simple Alert',\r\n    description: 'This alert has no icon.',\r\n  },\r\n}"
            },
            {
                "name": "WithoutIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    toasts: sampleToasts,\r\n    showIcon: false,\r\n    maxToasts: 5,\r\n  },\r\n}"
            },
            {
                "name": "WithoutPagination",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    data: sampleUsers.slice(0, 5),\r\n    columns: userColumns,\r\n    showPagination: false,\r\n  },\r\n}"
            },
            {
                "name": "WithoutScrollbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'md',\r\n    hideScrollbar: true,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-scroll-area [size]=\"size\" [hideScrollbar]=\"hideScrollbar\" class=\"w-48 border rounded-md\">\r\n        <div class=\"p-4\">\r\n          <h4 class=\"mb-4 text-sm font-medium leading-none\">Hidden Scrollbar</h4>\r\n          <div class=\"text-sm space-y-2\">\r\n            <p>This scroll area has a hidden scrollbar.</p>\r\n            <p>You can still scroll with your mouse wheel or by dragging on touch devices.</p>\r\n            <p>This is useful when you want a clean look without visible scrollbars.</p>\r\n            <p>The content is still scrollable, just without the visual scrollbar indicator.</p>\r\n            <p>Scroll down to see more content...</p>\r\n            <p>More content here.</p>\r\n            <p>Even more content.</p>\r\n            <p>Keep scrolling...</p>\r\n            <p>Almost at the end.</p>\r\n            <p>This is the last line.</p>\r\n          </div>\r\n        </div>\r\n      </mi-scroll-area>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithoutSearch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/command.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    groups: commandGroups,\r\n    placeholder: 'Select an option...',\r\n    showSearch: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 h-64 border rounded-lg\">\r\n        <mi-command\r\n          [groups]=\"groups\"\r\n          [placeholder]=\"placeholder\"\r\n          [showSearch]=\"showSearch\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-command>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithoutTodayButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Pick a date',\r\n    showToday: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onDateSelect: (date: Date) => {\r\n        console.log('Date selected:', date);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <label class=\"text-sm font-medium mb-2 block\">No Today Button</label>\r\n        <mi-date-picker\r\n          [placeholder]=\"placeholder\"\r\n          [showToday]=\"showToday\"\r\n          (dateSelect)=\"onDateSelect($event)\">\r\n        </mi-date-picker>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithPreselectedDate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: new Date(),\r\n    placeholder: 'Pick a date',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onDateSelect: (date: Date) => {\r\n        console.log('Date selected:', date);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <label class=\"text-sm font-medium mb-2 block\">Birthday</label>\r\n        <mi-date-picker\r\n          [value]=\"value\"\r\n          [placeholder]=\"placeholder\"\r\n          (dateSelect)=\"onDateSelect($event)\">\r\n        </mi-date-picker>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithPreselectedValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: defaultOptions,\r\n    placeholder: 'Select framework...',\r\n    value: 'next.js',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <mi-combobox\r\n          [options]=\"options\"\r\n          [placeholder]=\"placeholder\"\r\n          [value]=\"value\">\r\n        </mi-combobox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithSelectedDate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    selected: new Date(),\r\n  },\r\n}"
            },
            {
                "name": "WithStatus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-6\">\r\n        <div class=\"relative\">\r\n          <mi-avatar src=\"https://github.com/shadcn.png\" alt=\"User avatar\"></mi-avatar>\r\n          <div class=\"absolute -bottom-0 -right-0 h-3 w-3 rounded-full border-2 border-background bg-green-500\"></div>\r\n        </div>\r\n\r\n        <div class=\"relative\">\r\n          <mi-avatar src=\"https://github.com/shadcn.png\" alt=\"User avatar\" size=\"lg\"></mi-avatar>\r\n          <div class=\"absolute -bottom-0 -right-0 h-4 w-4 rounded-full border-2 border-background bg-yellow-500\"></div>\r\n        </div>\r\n\r\n        <div class=\"relative\">\r\n          <mi-avatar fallback=\"AB\" size=\"xl\"></mi-avatar>\r\n          <div class=\"absolute -bottom-1 -right-1 h-5 w-5 rounded-full border-2 border-background bg-red-500\"></div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "WithStrokeWidth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'Star',\r\n    size: 28,\r\n    strokeWidth: 3,\r\n    color: '#f59e0b',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Adjust stroke width for different visual weights.',\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "WithSubmenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    orientation: 'horizontal',\r\n  },\r\n}"
            },
            {
                "name": "WithSVGIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'default' },\n  render: (args) => ({\n    props: args,\n    template: `<div class=\"flex gap-4 flex-wrap items-center p-4\">\n      <mi-button\n        [variant]=\"variant\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [loading]=\"loading\"\n        [type]=\"type\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/>\n          <polyline points=\"7,10 12,15 17,10\"/>\n          <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"/>\n        </svg>\n        Download\n      </mi-button>\n\n      <mi-button\n        variant=\"secondary\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [type]=\"type\">\n        Upload\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/>\n          <polyline points=\"17,8 12,3 7,8\"/>\n          <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"/>\n        </svg>\n      </mi-button>\n\n      <mi-button\n        variant=\"outline\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [type]=\"type\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <polyline points=\"23,6 13.5,15.5 8.5,10.5 1,18\"/>\n          <polyline points=\"17,6 23,6 23,12\"/>\n        </svg>\n        Analytics\n      </mi-button>\n\n      <mi-button\n        variant=\"ghost\"\n        size=\"icon\"\n        [disabled]=\"disabled\"\n        [type]=\"type\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <circle cx=\"12\" cy=\"12\" r=\"1\"/>\n          <circle cx=\"19\" cy=\"12\" r=\"1\"/>\n          <circle cx=\"5\" cy=\"12\" r=\"1\"/>\n        </svg>\n      </mi-button>\n    </div>`,\n  }),\n}"
            },
            {
                "name": "WithToasts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    toasts: sampleToasts,\r\n    showIcon: true,\r\n    maxToasts: 5,\r\n  },\r\n}"
            },
            {
                "name": "WithValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/mi-ui/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: basicOptions,\r\n    placeholder: 'Select a fruit...',\r\n    value: 'banana',\r\n  },\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AccordionComponent>",
                "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AlertDialog>",
                "file": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AlertComponent>",
                "file": "projects/mi-ui/src/stories/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AspectRatio>",
                "file": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AvatarComponent>",
                "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BadgeComponent>",
                "file": "projects/mi-ui/src/stories/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Breadcrumb>",
                "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Button>",
                "file": "projects/mi-ui/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CalendarComponent>",
                "file": "projects/mi-ui/src/stories/calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CardComponent>",
                "file": "projects/mi-ui/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CarouselComponent>",
                "file": "projects/mi-ui/src/stories/carousel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ChartContainer>",
                "file": "projects/mi-ui/src/stories/chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxComponent>",
                "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Collapsible>",
                "file": "projects/mi-ui/src/stories/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ComboboxComponent>",
                "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CommandComponent>",
                "file": "projects/mi-ui/src/stories/command.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ContextMenu>",
                "file": "projects/mi-ui/src/stories/context-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DataTableComponent<User>>",
                "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DatePickerComponent>",
                "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DialogComponent>",
                "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Drawer>",
                "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DropdownMenu>",
                "file": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormComponent>",
                "file": "projects/mi-ui/src/stories/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HoverCard>",
                "file": "projects/mi-ui/src/stories/hover-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<IconComponent>",
                "file": "projects/mi-ui/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputOtpComponent>",
                "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "projects/mi-ui/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LabelComponent>",
                "file": "projects/mi-ui/src/stories/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MenubarComponent>",
                "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NavigationMenu>",
                "file": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Pagination>",
                "file": "projects/mi-ui/src/stories/pagination.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Popover>",
                "file": "projects/mi-ui/src/stories/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProgressComponent>",
                "file": "projects/mi-ui/src/stories/progress.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadioGroup>",
                "file": "projects/mi-ui/src/stories/radio-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ResizablePanelGroup>",
                "file": "projects/mi-ui/src/stories/resizable.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ScrollArea>",
                "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectComponent>",
                "file": "projects/mi-ui/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SeparatorComponent>",
                "file": "projects/mi-ui/src/stories/separator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SheetComponent>",
                "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Sidebar>",
                "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/mi-ui/src/stories/simple-theme-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SkeletonComponent>",
                "file": "projects/mi-ui/src/stories/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Slider>",
                "file": "projects/mi-ui/src/stories/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SonnerToaster>",
                "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SwitchComponent>",
                "file": "projects/mi-ui/src/stories/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Table>",
                "file": "projects/mi-ui/src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabsComponent>",
                "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextareaComponent>",
                "file": "projects/mi-ui/src/stories/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/mi-ui/src/stories/theme-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToastComponent>",
                "file": "projects/mi-ui/src/stories/toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToggleGroupComponent>",
                "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Toggle>",
                "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TooltipComponent>",
                "file": "projects/mi-ui/src/stories/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/mi-ui/src/stories/toggle-group.stories.ts": [
                {
                    "name": "alignmentItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToggleGroupItem[]",
                    "defaultValue": "[\r\n  {\r\n    value: 'left',\r\n    label: '',\r\n    icon: 'M15 12H3m0-6h18m-6 12H3'\r\n  },\r\n  {\r\n    value: 'center',\r\n    label: '',\r\n    icon: 'M17 12H7m10-6H7m10 12H7'\r\n  },\r\n  {\r\n    value: 'right',\r\n    label: '',\r\n    icon: 'M21 12H9m12-6H9m12 12H9'\r\n  },\r\n  {\r\n    value: 'justify',\r\n    label: '',\r\n    icon: 'M3 6h18M3 12h18m-18 6h18'\r\n  }\r\n]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: textFormattingItems,\r\n    value: 'bold',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Value changed:', value);\r\n      },\r\n      onSelectionChange: (event: any) => {\r\n        console.log('Selection changed:', event);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Text Formatting</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          [multiple]=\"multiple\"\r\n          [disabled]=\"disabled\"\r\n          [variant]=\"variant\"\r\n          [size]=\"size\"\r\n          [orientation]=\"orientation\"\r\n          (valueChange)=\"onValueChange($event)\"\r\n          (selectionChange)=\"onSelectionChange($event)\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: textFormattingItems,\r\n    disabled: true,\r\n    value: 'bold',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Disabled</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          [disabled]=\"disabled\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "IconOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: alignmentItems,\r\n    value: 'left',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Alignment changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Text Alignment</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          (valueChange)=\"onValueChange($event)\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToggleGroupComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Toggle Group',\r\n  component: ToggleGroupComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A set of two-state buttons that can be toggled on or off.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    items: {\r\n      control: 'object',\r\n      description: 'Array of toggle items',\r\n    },\r\n    value: {\r\n      control: 'object',\r\n      description: 'Selected value(s)',\r\n    },\r\n    multiple: {\r\n      control: 'boolean',\r\n      description: 'Whether multiple items can be selected',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the toggle group is disabled',\r\n    },\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'outline'],\r\n      description: 'Visual variant of the toggle group',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'md', 'lg'],\r\n      description: 'Size of the toggle buttons',\r\n    },\r\n    orientation: {\r\n      control: 'select',\r\n      options: ['horizontal', 'vertical'],\r\n      description: 'Orientation of the toggle group',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "mixedItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToggleGroupItem[]",
                    "defaultValue": "[\r\n  {\r\n    value: 'save',\r\n    label: 'Save',\r\n    icon: 'M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z'\r\n  },\r\n  {\r\n    value: 'edit',\r\n    label: 'Edit',\r\n    icon: 'M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7'\r\n  },\r\n  {\r\n    value: 'delete',\r\n    label: 'Delete',\r\n    icon: 'm3 6 2 18h14l2-18',\r\n    disabled: true\r\n  }\r\n]"
                },
                {
                    "name": "Multiple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: textFormattingItems,\r\n    value: ['bold', 'italic'],\r\n    multiple: true,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Multiple values changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Multiple Selection</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          [multiple]=\"multiple\"\r\n          (valueChange)=\"onValueChange($event)\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: textFormattingItems,\r\n    variant: 'outline',\r\n    value: 'bold',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Outline value changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Outline Variant</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          [variant]=\"variant\"\r\n          (valueChange)=\"onValueChange($event)\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      items: textFormattingItems,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Size demo value changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Small</label>\r\n          <mi-toggle-group\r\n            [items]=\"items\"\r\n            size=\"sm\"\r\n            value=\"bold\"\r\n            (valueChange)=\"onValueChange($event)\">\r\n          </mi-toggle-group>\r\n        </div>\r\n\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Medium (Default)</label>\r\n          <mi-toggle-group\r\n            [items]=\"items\"\r\n            size=\"md\"\r\n            value=\"italic\"\r\n            (valueChange)=\"onValueChange($event)\">\r\n          </mi-toggle-group>\r\n        </div>\r\n\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Large</label>\r\n          <mi-toggle-group\r\n            [items]=\"items\"\r\n            size=\"lg\"\r\n            value=\"underline\"\r\n            (valueChange)=\"onValueChange($event)\">\r\n          </mi-toggle-group>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "textFormattingItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToggleGroupItem[]",
                    "defaultValue": "[\r\n  {\r\n    value: 'bold',\r\n    label: 'Bold',\r\n    icon: 'M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z'\r\n  },\r\n  {\r\n    value: 'italic',\r\n    label: 'Italic',\r\n    icon: 'm19 4-9 16M9 4l9 16'\r\n  },\r\n  {\r\n    value: 'underline',\r\n    label: 'Underline',\r\n    icon: 'M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3'\r\n  }\r\n]"
                },
                {
                    "name": "Vertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: textFormattingItems,\r\n    orientation: 'vertical',\r\n    value: 'bold',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Vertical value changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Vertical Orientation</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          [orientation]=\"orientation\"\r\n          (valueChange)=\"onValueChange($event)\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithDisabledItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: mixedItems,\r\n    multiple: true,\r\n    value: ['save'],\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onValueChange: (value: string | string[]) => {\r\n        console.log('Mixed items value changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">With Disabled Item</label>\r\n        <mi-toggle-group\r\n          [items]=\"items\"\r\n          [value]=\"value\"\r\n          [multiple]=\"multiple\"\r\n          (valueChange)=\"onValueChange($event)\">\r\n        </mi-toggle-group>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/all-components-theme-test.stories.ts": [
                {
                    "name": "AllComponentsTest",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "ForceDarkMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  globals: { theme: 'dark' },\r\n}"
                },
                {
                    "name": "ForceLightMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  globals: { theme: 'light' },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\r\n  title: 'Theme Test/All Components Theme Test',\r\n  parameters: {\r\n    layout: 'padded',\r\n    docs: {\r\n      description: {\r\n        component: 'Comprehensive test of all components with theme variables. Toggle between light and dark themes to see all components adapt.',\r\n      },\r\n    },\r\n  },\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-8 p-6 bg-background text-foreground\">\r\n        <div class=\"space-y-4\">\r\n          <h1 class=\"text-2xl font-bold\">Theme Variable Test</h1>\r\n          <p class=\"text-muted-foreground\">All components should respect the theme variables and change when you toggle between light and dark modes.</p>\r\n        </div>\r\n\r\n        <!-- Card Component -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Cards</h2>\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div class=\"rounded-lg border bg-card text-card-foreground shadow-sm p-6\">\r\n              <h3 class=\"font-semibold\">Default Card</h3>\r\n              <p class=\"text-sm text-muted-foreground mt-2\">This card uses theme variables</p>\r\n            </div>\r\n            <div class=\"rounded-lg border bg-card text-card-foreground shadow-lg p-6\">\r\n              <h3 class=\"font-semibold\">Elevated Card</h3>\r\n              <p class=\"text-sm text-muted-foreground mt-2\">With more shadow</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Badges -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Badges</h2>\r\n          <div class=\"flex gap-2\">\r\n            <span class=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold border-transparent bg-primary text-primary-foreground\">Primary</span>\r\n            <span class=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold border-transparent bg-secondary text-secondary-foreground\">Secondary</span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Alerts -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Alerts</h2>\r\n          <div class=\"relative w-full rounded-lg border px-4 py-3 text-sm bg-background text-foreground\">\r\n            <strong>Info:</strong> This alert uses theme variables for proper theming.\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Separators -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Separators</h2>\r\n          <div class=\"shrink-0 bg-border h-[1px] w-full\"></div>\r\n        </div>\r\n\r\n        <!-- Progress -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Progress</h2>\r\n          <div class=\"relative h-4 w-full overflow-hidden rounded-full bg-secondary\">\r\n            <div class=\"h-full bg-primary transition-all\" style=\"width: 60%\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Skeleton -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Skeleton</h2>\r\n          <div class=\"space-y-2\">\r\n            <div class=\"animate-pulse rounded-md bg-muted h-4 w-[250px]\"></div>\r\n            <div class=\"animate-pulse rounded-md bg-muted h-4 w-[200px]\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Form Elements -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Form Elements</h2>\r\n          <div class=\"space-y-4 max-w-md\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Themed input\"\r\n              class=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm text-foreground ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\r\n            />\r\n            <textarea\r\n              placeholder=\"Themed textarea\"\r\n              class=\"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm text-foreground ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Tabs -->\r\n        <div class=\"space-y-4\">\r\n          <h2 class=\"text-lg font-semibold\">Tabs</h2>\r\n          <div class=\"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\">\r\n            <div class=\"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-background text-foreground shadow-sm\">Tab 1</div>\r\n            <div class=\"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\">Tab 2</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/button.stories.ts": [
                {
                    "name": "AllSizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex items-center gap-4 p-4\">\n        <mi-button size=\"sm\">Small</mi-button>\n        <mi-button size=\"default\">Default</mi-button>\n        <mi-button size=\"lg\">Large</mi-button>\n        <mi-button size=\"icon\">⚙️</mi-button>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "AllVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      handleClick: (variant: string) => {\n        console.log(`${variant} button clicked!`);\n        alert(`${variant} button clicked!`);\n      }\n    },\n    template: `\n      <div class=\"flex flex-wrap gap-4 p-4\">\n        <mi-button variant=\"default\" (buttonClick)=\"handleClick('Default')\">Default</mi-button>\n        <mi-button variant=\"secondary\" (buttonClick)=\"handleClick('Secondary')\">Secondary</mi-button>\n        <mi-button variant=\"destructive\" (buttonClick)=\"handleClick('Destructive')\">Destructive</mi-button>\n        <mi-button variant=\"outline\" (buttonClick)=\"handleClick('Outline')\">Outline</mi-button>\n        <mi-button variant=\"ghost\" (buttonClick)=\"handleClick('Ghost')\">Ghost</mi-button>\n        <mi-button variant=\"link\" (buttonClick)=\"handleClick('Link')\">Link</mi-button>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'default',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      handleClick: (event: Event) => {\n        console.log('Story button clicked!', event);\n        alert('Button clicked!');\n      }\n    },\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\"\n      (buttonClick)=\"handleClick($event)\">\n      Button\n    </mi-button>`,\n  }),\n}"
                },
                {
                    "name": "Destructive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'destructive' },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      Destructive\n    </mi-button>`,\n  }),\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { disabled: true },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      Disabled\n    </mi-button>`,\n  }),\n}"
                },
                {
                    "name": "Ghost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'ghost' },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      Ghost\n    </mi-button>`,\n  }),\n}"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { size: 'icon' },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      ⚙️\n    </mi-button>`,\n  }),\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { size: 'lg' },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      Large\n    </mi-button>`,\n  }),\n}"
                },
                {
                    "name": "Link",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'link' },\n  render: (args) => ({\n    props: {\n      ...args,\n      handleClick: (event: Event) => {\n        console.log('Link button clicked!', event);\n        alert('Link button clicked!');\n      }\n    },\n    template: `<div class=\"space-y-4 p-4\">\n      <div class=\"space-y-2\">\n        <h3 class=\"text-lg font-semibold\">Link Variant Examples</h3>\n        <div class=\"flex gap-4 flex-wrap items-center\">\n          <mi-button\n            [variant]=\"variant\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [loading]=\"loading\"\n            [loadingText]=\"loadingText\"\n            [type]=\"type\"\n            (buttonClick)=\"handleClick($event)\">\n            Default Link\n          </mi-button>\n\n          <mi-button\n            variant=\"link\"\n            size=\"sm\"\n            [disabled]=\"disabled\"\n            [type]=\"type\"\n            (buttonClick)=\"handleClick($event)\">\n            Small Link\n          </mi-button>\n\n          <mi-button\n            variant=\"link\"\n            size=\"lg\"\n            [disabled]=\"disabled\"\n            [type]=\"type\"\n            (buttonClick)=\"handleClick($event)\">\n            Large Link\n          </mi-button>\n\n          <mi-button\n            variant=\"link\"\n            [disabled]=\"true\"\n            [type]=\"type\">\n            Disabled Link\n          </mi-button>\n        </div>\n      </div>\n\n      <div class=\"space-y-2\">\n        <h3 class=\"text-lg font-semibold\">Link with Icons</h3>\n        <div class=\"flex gap-4 flex-wrap items-center\">\n          <mi-button\n            variant=\"link\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\"\n            (buttonClick)=\"handleClick($event)\">\n            🔗 External Link\n          </mi-button>\n\n          <mi-button\n            variant=\"link\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\"\n            (buttonClick)=\"handleClick($event)\">\n            Learn More →\n          </mi-button>\n\n          <mi-button\n            variant=\"link\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\"\n            (buttonClick)=\"handleClick($event)\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"/>\n              <polyline points=\"15,3 21,3 21,9\"/>\n              <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"/>\n            </svg>\n            Open in new tab\n          </mi-button>\n        </div>\n      </div>\n    </div>`,\n  }),\n}"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { loading: true, loadingText: 'Please wait...' },\n  render: (args) => ({\n    props: {\n      ...args,\n      isLoading: true,\n      toggleLoading: function() {\n        this['isLoading'] = !this['isLoading'];\n      },\n      handleClick: (event: Event) => {\n        console.log('Loading button clicked!', event);\n      }\n    },\n    template: `<div class=\"space-y-4\">\n      <mi-button\n        [variant]=\"variant\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [loading]=\"isLoading\"\n        [loadingText]=\"loadingText\"\n        [type]=\"type\"\n        (buttonClick)=\"handleClick($event)\">\n        {{isLoading && loadingText ? loadingText : 'Click Me'}}\n      </mi-button>\n      <br>\n      <mi-button variant=\"outline\" (buttonClick)=\"toggleLoading()\">\n        {{isLoading ? 'Stop Loading' : 'Start Loading'}}\n      </mi-button>\n    </div>`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Button>",
                    "defaultValue": "{\n  title: 'Components/Button',\n  component: Button,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [Button],\n    }),\n  ],\n  args: {\n    variant: 'default',\n    size: 'default',\n    disabled: false,\n    loading: false,\n    loadingText: '',\n    type: 'button',\n  },\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['default', 'destructive', 'outline', 'secondary', 'ghost', 'link'],\n      description: 'The visual style variant of the button'\n    },\n    size: {\n      control: 'select',\n      options: ['default', 'sm', 'lg', 'icon'],\n      description: 'The size of the button'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Whether the button is disabled'\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Whether the button is in loading state'\n    },\n    loadingText: {\n      control: 'text',\n      description: 'Text to show when loading'\n    },\n    type: {\n      control: 'select',\n      options: ['button', 'submit', 'reset'],\n      description: 'The HTML button type'\n    }\n  },\n}"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'outline' },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      Outline\n    </mi-button>`,\n  }),\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'secondary' },\n  render: (args) => ({\n    props: {\n      ...args,\n      handleClick: (event: Event) => {\n        console.log('Secondary button clicked!', event);\n        alert('Secondary button clicked!');\n      }\n    },\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\"\n      (buttonClick)=\"handleClick($event)\">\n      Secondary\n    </mi-button>`,\n  }),\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { size: 'sm' },\n  render: (args) => ({\n    props: args,\n    template: `<mi-button\n      [variant]=\"variant\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [loadingText]=\"loadingText\"\n      [type]=\"type\">\n      Small\n    </mi-button>`,\n  }),\n}"
                },
                {
                    "name": "SpacingAndAlignment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'default' },\n  render: (args) => ({\n    props: args,\n    template: `<div class=\"space-y-6 p-4\">\n      <div class=\"space-y-3\">\n        <h3 class=\"text-lg font-semibold\">Perfect Icon + Text Spacing</h3>\n        <div class=\"flex gap-4 flex-wrap\">\n          <mi-button\n            [variant]=\"variant\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            📧 Send Email\n          </mi-button>\n\n          <mi-button\n            variant=\"secondary\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            📎 Attach File\n          </mi-button>\n\n          <mi-button\n            variant=\"outline\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            🔄 Refresh Data\n          </mi-button>\n        </div>\n      </div>\n\n      <div class=\"space-y-3\">\n        <h3 class=\"text-lg font-semibold\">SVG Icons with Perfect Alignment</h3>\n        <div class=\"flex gap-4 flex-wrap\">\n          <mi-button\n            [variant]=\"variant\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"/>\n              <polyline points=\"16,6 12,2 8,6\"/>\n              <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"15\"/>\n            </svg>\n            Save Document\n          </mi-button>\n\n          <mi-button\n            variant=\"secondary\"\n            [size]=\"size\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            Copy Link\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"/>\n              <path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"/>\n            </svg>\n          </mi-button>\n        </div>\n      </div>\n\n      <div class=\"space-y-3\">\n        <h3 class=\"text-lg font-semibold\">Different Sizes with Consistent Spacing</h3>\n        <div class=\"flex gap-4 items-center flex-wrap\">\n          <mi-button\n            [variant]=\"variant\"\n            size=\"sm\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            🔍 Search\n          </mi-button>\n\n          <mi-button\n            [variant]=\"variant\"\n            size=\"default\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            📊 Analytics\n          </mi-button>\n\n          <mi-button\n            [variant]=\"variant\"\n            size=\"lg\"\n            [disabled]=\"disabled\"\n            [type]=\"type\">\n            🚀 Launch\n          </mi-button>\n        </div>\n      </div>\n    </div>`,\n  }),\n}"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'default' },\n  render: (args) => ({\n    props: args,\n    template: `<div class=\"flex gap-4 flex-wrap\">\n      <mi-button\n        [variant]=\"variant\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [loading]=\"loading\"\n        [loadingText]=\"loadingText\"\n        [type]=\"type\">\n        📧 Send Email\n      </mi-button>\n      <mi-button\n        variant=\"secondary\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [loading]=\"loading\"\n        [type]=\"type\">\n        ⬇️ Download\n      </mi-button>\n      <mi-button\n        variant=\"outline\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [loading]=\"loading\"\n        [type]=\"type\">\n        🔄 Refresh\n      </mi-button>\n      <mi-button\n        variant=\"destructive\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [loading]=\"loading\"\n        [type]=\"type\">\n        🗑️ Delete\n      </mi-button>\n    </div>`,\n  }),\n}"
                },
                {
                    "name": "WithSVGIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'default' },\n  render: (args) => ({\n    props: args,\n    template: `<div class=\"flex gap-4 flex-wrap items-center p-4\">\n      <mi-button\n        [variant]=\"variant\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [loading]=\"loading\"\n        [type]=\"type\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/>\n          <polyline points=\"7,10 12,15 17,10\"/>\n          <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"/>\n        </svg>\n        Download\n      </mi-button>\n\n      <mi-button\n        variant=\"secondary\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [type]=\"type\">\n        Upload\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/>\n          <polyline points=\"17,8 12,3 7,8\"/>\n          <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"/>\n        </svg>\n      </mi-button>\n\n      <mi-button\n        variant=\"outline\"\n        [size]=\"size\"\n        [disabled]=\"disabled\"\n        [type]=\"type\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <polyline points=\"23,6 13.5,15.5 8.5,10.5 1,18\"/>\n          <polyline points=\"17,6 23,6 23,12\"/>\n        </svg>\n        Analytics\n      </mi-button>\n\n      <mi-button\n        variant=\"ghost\"\n        size=\"icon\"\n        [disabled]=\"disabled\"\n        [type]=\"type\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <circle cx=\"12\" cy=\"12\" r=\"1\"/>\n          <circle cx=\"19\" cy=\"12\" r=\"1\"/>\n          <circle cx=\"5\" cy=\"12\" r=\"1\"/>\n        </svg>\n      </mi-button>\n    </div>`,\n  }),\n}"
                }
            ],
            "projects/mi-ui/src/stories/input.stories.ts": [
                {
                    "name": "AllVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <div>\r\n          <h3 class=\"text-lg font-semibold mb-4\">Input Variants</h3>\r\n\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <!-- Default Variant -->\r\n            <div class=\"space-y-2\">\r\n              <mi-label>Default</mi-label>\r\n              <mi-input\r\n                variant=\"default\"\r\n                placeholder=\"Default input style\"\r\n                value=\"Sample text\" />\r\n            </div>\r\n\r\n            <!-- Filled Variant -->\r\n            <div class=\"space-y-2\">\r\n              <mi-input\r\n                variant=\"filled\"\r\n                label=\"Filled Input\"\r\n                value=\"Sample text\" />\r\n            </div>\r\n\r\n            <!-- Outline Variant -->\r\n            <div class=\"space-y-2\">\r\n              <mi-input\r\n                variant=\"outline\"\r\n                label=\"Outline Input\"\r\n                type=\"email\"\r\n                value=\"user@example.com\" />\r\n            </div>\r\n\r\n            <!-- Floating Variant -->\r\n            <div class=\"space-y-2\">\r\n              <mi-input\r\n                variant=\"floating\"\r\n                label=\"Floating Label\"\r\n                type=\"password\"\r\n                value=\"••••••••\" />\r\n            </div>\r\n\r\n            <!-- Destructive Variant -->\r\n            <div class=\"space-y-2\">\r\n              <mi-label>Destructive (Error State)</mi-label>\r\n              <mi-input\r\n                variant=\"destructive\"\r\n                placeholder=\"This field has an error\"\r\n                value=\"Invalid input\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Enter your text...',\r\n  },\r\n}"
                },
                {
                    "name": "Destructive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'destructive',\r\n    placeholder: 'This field has an error',\r\n    value: 'Invalid input',\r\n  },\r\n}"
                },
                {
                    "name": "Filled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'filled',\r\n    label: 'Full Name',\r\n    placeholder: 'Enter your full name',\r\n  },\r\n}"
                },
                {
                    "name": "FilledWithDefaultLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'filled',\r\n    placeholder: 'Filled input with default label',\r\n  },\r\n}"
                },
                {
                    "name": "Floating",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'floating',\r\n    label: 'Password',\r\n    type: 'password',\r\n    placeholder: 'Enter your password',\r\n  },\r\n}"
                },
                {
                    "name": "FloatingLabelDemo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <h3 class=\"text-lg font-semibold\">Floating Label Examples</h3>\r\n\r\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          <!-- Filled with floating label -->\r\n          <div>\r\n            <h4 class=\"text-sm font-medium mb-3\">Filled Variant</h4>\r\n            <mi-input\r\n              variant=\"filled\"\r\n              label=\"First Name\" />\r\n          </div>\r\n\r\n          <!-- Outline with floating label -->\r\n          <div>\r\n            <h4 class=\"text-sm font-medium mb-3\">Outline Variant</h4>\r\n            <mi-input\r\n              variant=\"outline\"\r\n              label=\"Email Address\"\r\n              type=\"email\" />\r\n          </div>\r\n\r\n          <!-- Floating with floating label -->\r\n          <div>\r\n            <h4 class=\"text-sm font-medium mb-3\">Floating Variant</h4>\r\n            <mi-input\r\n              variant=\"floating\"\r\n              label=\"Phone Number\"\r\n              type=\"tel\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mt-8\">\r\n          <h4 class=\"text-sm font-medium mb-3\">With Pre-filled Values</h4>\r\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <mi-input\r\n              variant=\"filled\"\r\n              label=\"Full Name\"\r\n              value=\"John Doe\" />\r\n\r\n            <mi-input\r\n              variant=\"outline\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value=\"john@example.com\" />\r\n\r\n            <mi-input\r\n              variant=\"floating\"\r\n              label=\"Phone\"\r\n              type=\"tel\"\r\n              value=\"+1 (555) 123-4567\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "FloatingWithDefaultLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'floating',\r\n    placeholder: 'Floating input with default label',\r\n  },\r\n}"
                },
                {
                    "name": "FormExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"max-w-md mx-auto space-y-6\">\r\n        <h3 class=\"text-xl font-semibold text-center\">User Registration</h3>\r\n\r\n        <form class=\"space-y-4\">\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Full Name\"\r\n            type=\"text\"\r\n            required />\r\n\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            required />\r\n\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Phone Number\"\r\n            type=\"tel\" />\r\n\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            required />\r\n\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            required />\r\n\r\n          <button\r\n            type=\"submit\"\r\n            class=\"w-full bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2 rounded-md font-medium transition-colors\">\r\n            Create Account\r\n          </button>\r\n        </form>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <h3 class=\"text-lg font-semibold\">Interactive Input Examples</h3>\r\n        <p class=\"text-muted-foreground\">Try typing in these inputs to see the floating labels in action!</p>\r\n\r\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <mi-input\r\n            variant=\"filled\"\r\n            label=\"Your Name\"\r\n            placeholder=\"Start typing...\" />\r\n\r\n          <mi-input\r\n            variant=\"outline\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your email...\" />\r\n\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Phone Number\"\r\n            type=\"tel\"\r\n            placeholder=\"Your phone number...\" />\r\n\r\n          <mi-input\r\n            variant=\"floating\"\r\n            label=\"Website URL\"\r\n            type=\"url\"\r\n            placeholder=\"https://...\" />\r\n        </div>\r\n\r\n        <div class=\"mt-8\">\r\n          <h4 class=\"text-md font-medium mb-4\">Different Input Types</h4>\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n            <mi-input\r\n              variant=\"outline\"\r\n              label=\"Number\"\r\n              type=\"number\"\r\n              placeholder=\"0\" />\r\n\r\n            <mi-input\r\n              variant=\"outline\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\" />\r\n\r\n            <mi-input\r\n              variant=\"outline\"\r\n              label=\"Search\"\r\n              type=\"search\"\r\n              placeholder=\"Search...\" />\r\n\r\n            <mi-input\r\n              variant=\"outline\"\r\n              label=\"Date\"\r\n              type=\"date\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Input',\r\n  component: InputComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [InputComponent, LabelComponent],\r\n    }),\r\n  ],\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'filled', 'outline', 'floating', 'destructive'],\r\n      description: 'The visual style variant of the input',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['default', 'sm', 'lg'],\r\n      description: 'The size of the input',\r\n    },\r\n    type: {\r\n      control: 'select',\r\n      options: ['text', 'email', 'password', 'number', 'tel', 'url'],\r\n      description: 'HTML input type',\r\n    },\r\n    placeholder: {\r\n      control: 'text',\r\n      description: 'Placeholder text',\r\n    },\r\n    label: {\r\n      control: 'text',\r\n      description: 'Label text (used for floating label variants)',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the input is disabled',\r\n    },\r\n    readonly: {\r\n      control: 'boolean',\r\n      description: 'Whether the input is readonly',\r\n    },\r\n    value: {\r\n      control: 'text',\r\n      description: 'The input value',\r\n    },\r\n  },\r\n  args: {\r\n    variant: 'default',\r\n    size: 'default',\r\n    type: 'text',\r\n    disabled: false,\r\n    readonly: false,\r\n    value: '',\r\n  },\r\n}"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'outline',\r\n    label: 'Email Address',\r\n    type: 'email',\r\n    placeholder: 'Enter your email',\r\n  },\r\n}"
                },
                {
                    "name": "OutlineVariantDemo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <div>\r\n          <h3 class=\"text-lg font-semibold mb-4\">Outline Variant Tests</h3>\r\n\r\n          <div class=\"grid grid-cols-1 gap-4\">\r\n            <!-- Outline with custom label -->\r\n            <div>\r\n              <mi-input\r\n                variant=\"outline\"\r\n                label=\"Custom Label\"\r\n                placeholder=\"Outline with custom label\" />\r\n            </div>\r\n\r\n            <!-- Outline with default label -->\r\n            <div>\r\n              <mi-input\r\n                variant=\"outline\"\r\n                placeholder=\"Outline with default label (no label prop)\" />\r\n            </div>\r\n\r\n            <!-- Outline disabled -->\r\n            <div>\r\n              <mi-input\r\n                variant=\"outline\"\r\n                label=\"Disabled State\"\r\n                placeholder=\"Disabled outline input\"\r\n                [disabled]=\"true\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "OutlineWithDefaultLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'outline',\r\n    placeholder: 'Outline input with default label',\r\n  },\r\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <div>\r\n          <mi-label>Small Input</mi-label>\r\n          <mi-input size=\"sm\" placeholder=\"Small input\" />\r\n        </div>\r\n\r\n        <div>\r\n          <mi-label>Default Input</mi-label>\r\n          <mi-input size=\"default\" placeholder=\"Default input\" />\r\n        </div>\r\n\r\n        <div>\r\n          <mi-label>Large Input</mi-label>\r\n          <mi-input size=\"lg\" placeholder=\"Large input\" />\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "States",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <h3 class=\"text-lg font-semibold\">Input States</h3>\r\n\r\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <!-- Normal State -->\r\n          <div class=\"space-y-2\">\r\n            <mi-label>Normal State</mi-label>\r\n            <mi-input placeholder=\"Normal input\" />\r\n          </div>\r\n\r\n          <!-- Focused State (simulated) -->\r\n          <div class=\"space-y-2\">\r\n            <mi-label>With Value</mi-label>\r\n            <mi-input value=\"This input has a value\" />\r\n          </div>\r\n\r\n          <!-- Disabled State -->\r\n          <div class=\"space-y-2\">\r\n            <mi-label>Disabled State</mi-label>\r\n            <mi-input\r\n              placeholder=\"Disabled input\"\r\n              disabled=\"true\" />\r\n          </div>\r\n\r\n          <!-- Readonly State -->\r\n          <div class=\"space-y-2\">\r\n            <mi-label>Readonly State</mi-label>\r\n            <mi-input\r\n              value=\"This is readonly text\"\r\n              readonly=\"true\" />\r\n          </div>\r\n\r\n          <!-- Error State -->\r\n          <div class=\"space-y-2\">\r\n            <mi-label>Error State</mi-label>\r\n            <mi-input\r\n              variant=\"destructive\"\r\n              value=\"Invalid input\"\r\n              placeholder=\"Error state input\" />\r\n          </div>\r\n\r\n          <!-- Floating Label - Empty -->\r\n          <div class=\"space-y-2\">\r\n            <mi-input\r\n              variant=\"floating\"\r\n              label=\"Empty Floating Label\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/theme-test.stories.ts": [
                {
                    "name": "AllVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/theme-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"p-6 space-y-6\">\r\n        <div class=\"flex justify-between items-center mb-6\">\r\n          <h2 class=\"text-2xl font-bold text-foreground\">Theme Test - All Component Variants</h2>\r\n          <div class=\"flex gap-2\">\r\n            <button\r\n              class=\"px-3 py-1 text-sm bg-primary text-primary-foreground rounded\"\r\n              onclick=\"document.documentElement.setAttribute('data-mode', 'light'); document.documentElement.classList.remove('dark'); console.log('🎨 Manual: Switched to Light');\">\r\n              ☀️ Light\r\n            </button>\r\n            <button\r\n              class=\"px-3 py-1 text-sm bg-primary text-primary-foreground rounded\"\r\n              onclick=\"document.documentElement.setAttribute('data-mode', 'dark'); document.documentElement.classList.add('dark'); console.log('🎨 Manual: Switched to Dark');\">\r\n              🌙 Dark\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"space-y-4\">\r\n          <h3 class=\"text-lg font-semibold text-foreground\">Button Variants:</h3>\r\n          <div class=\"flex flex-wrap gap-2\">\r\n            <mi-button variant=\"default\">Default</mi-button>\r\n            <mi-button variant=\"primary\">Primary</mi-button>\r\n            <mi-button variant=\"secondary\">Secondary</mi-button>\r\n            <mi-button variant=\"outline\">Outline</mi-button>\r\n            <mi-button variant=\"ghost\">Ghost</mi-button>\r\n            <mi-button variant=\"destructive\">Destructive</mi-button>\r\n            <mi-button variant=\"link\">Link</mi-button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"space-y-4\">\r\n          <h3 class=\"text-lg font-semibold text-foreground\">Card Variants:</h3>\r\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <mi-card variant=\"default\">\r\n              <div class=\"p-4\">\r\n                <h4 class=\"font-semibold\">Default Card</h4>\r\n                <p class=\"text-sm text-muted-foreground\">This is a default card variant.</p>\r\n              </div>\r\n            </mi-card>\r\n\r\n            <mi-card variant=\"elevated\">\r\n              <div class=\"p-4\">\r\n                <h4 class=\"font-semibold\">Elevated Card</h4>\r\n                <p class=\"text-sm text-muted-foreground\">This is an elevated card variant.</p>\r\n              </div>\r\n            </mi-card>\r\n\r\n            <mi-card variant=\"outline\">\r\n              <div class=\"p-4\">\r\n                <h4 class=\"font-semibold\">Outline Card</h4>\r\n                <p class=\"text-sm text-muted-foreground\">This is an outline card variant.</p>\r\n              </div>\r\n            </mi-card>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"space-y-4\">\r\n          <h3 class=\"text-lg font-semibold text-foreground\">Badge Variants:</h3>\r\n          <div class=\"flex flex-wrap gap-2\">\r\n            <mi-badge variant=\"default\">Default</mi-badge>\r\n            <mi-badge variant=\"secondary\">Secondary</mi-badge>\r\n            <mi-badge variant=\"destructive\">Destructive</mi-badge>\r\n            <mi-badge variant=\"outline\">Outline</mi-badge>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mt-8 p-4 bg-muted rounded-lg\">\r\n          <p class=\"text-sm text-muted-foreground\">\r\n            🎨 <strong>Theme Testing:</strong> Use the Light/Dark buttons above to test theme switching.\r\n            Check the browser console for debug logs. Also try the theme toggle in the Storybook toolbar (☀️/🌙).\r\n          </p>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/theme-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\r\n  title: 'Theme/Theme Test',\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [Button, CardComponent, BadgeComponent],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "ThemeVariables",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/theme-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"p-6 space-y-6\" style=\"background-color: var(--background); color: var(--foreground); min-height: 100vh;\">\r\n        <h2 class=\"text-2xl font-bold text-foreground\">CSS Variables Test</h2>\r\n\r\n        <!-- Diagnostic Info -->\r\n        <div class=\"mb-6 p-4 border rounded\" style=\"border-color: var(--border);\">\r\n          <h3 class=\"font-semibold mb-2\">Diagnostic Info:</h3>\r\n          <div class=\"text-sm space-y-1\">\r\n            <div>HTML data-mode: <span id=\"data-mode-value\">[checking...]</span></div>\r\n            <div>HTML class list: <span id=\"class-list-value\">[checking...]</span></div>\r\n            <div>Background color: <span id=\"bg-color\" style=\"padding: 2px 8px; border: 1px solid; background-color: var(--background);\">var(--background)</span></div>\r\n            <div>Primary color: <span id=\"primary-color\" style=\"padding: 2px 8px; background-color: var(--primary); color: var(--primary-foreground);\">var(--primary)</span></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--background); border: 1px solid var(--border);\">\r\n            <div class=\"text-sm font-medium\" style=\"color: var(--foreground);\">Background</div>\r\n            <div class=\"text-xs\" style=\"color: var(--muted-foreground);\">var(--background)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--primary); color: var(--primary-foreground);\">\r\n            <div class=\"text-sm font-medium\">Primary</div>\r\n            <div class=\"text-xs opacity-80\">var(--primary)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--secondary); color: var(--secondary-foreground);\">\r\n            <div class=\"text-sm font-medium\">Secondary</div>\r\n            <div class=\"text-xs opacity-80\">var(--secondary)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--muted); color: var(--muted-foreground);\">\r\n            <div class=\"text-sm font-medium\">Muted</div>\r\n            <div class=\"text-xs opacity-80\">var(--muted)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--accent); color: var(--accent-foreground);\">\r\n            <div class=\"text-sm font-medium\">Accent</div>\r\n            <div class=\"text-xs opacity-80\">var(--accent)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--destructive); color: var(--destructive-foreground);\">\r\n            <div class=\"text-sm font-medium\">Destructive</div>\r\n            <div class=\"text-xs opacity-80\">var(--destructive)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg\" style=\"background-color: var(--card); color: var(--card-foreground); border: 1px solid var(--border);\">\r\n            <div class=\"text-sm font-medium\">Card</div>\r\n            <div class=\"text-xs opacity-80\">var(--card)</div>\r\n          </div>\r\n\r\n          <div class=\"p-4 rounded-lg border\" style=\"border-color: var(--ring); background-color: var(--background); color: var(--foreground);\">\r\n            <div class=\"text-sm font-medium\">Ring/Border</div>\r\n            <div class=\"text-xs\" style=\"color: var(--muted-foreground);\">var(--ring)</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex gap-2 mt-6\">\r\n          <button\r\n            class=\"px-4 py-2 rounded\"\r\n            style=\"background-color: var(--primary); color: var(--primary-foreground);\"\r\n            onclick=\"\r\n              document.documentElement.setAttribute('data-mode', 'light');\r\n              document.documentElement.classList.remove('dark');\r\n              updateDiagnostics();\r\n              console.log('🎨 Manual: Switched to Light');\r\n            \">\r\n            ☀️ Light\r\n          </button>\r\n          <button\r\n            class=\"px-4 py-2 rounded\"\r\n            style=\"background-color: var(--primary); color: var(--primary-foreground);\"\r\n            onclick=\"\r\n              document.documentElement.setAttribute('data-mode', 'dark');\r\n              document.documentElement.classList.add('dark');\r\n              updateDiagnostics();\r\n              console.log('🎨 Manual: Switched to Dark');\r\n            \">\r\n            🌙 Dark\r\n          </button>\r\n        </div>\r\n\r\n        <script>\r\n          function updateDiagnostics() {\r\n            setTimeout(() => {\r\n              document.getElementById('data-mode-value').textContent = document.documentElement.getAttribute('data-mode') || 'none';\r\n              document.getElementById('class-list-value').textContent = document.documentElement.className || 'none';\r\n            }, 100);\r\n          }\r\n          updateDiagnostics();\r\n        </script>\r\n\r\n        <div class=\"mt-8 p-4\" style=\"background-color: var(--muted); color: var(--muted-foreground); border-radius: 8px;\">\r\n          <p class=\"text-sm\">\r\n            Each color box should show different values when switching between light and dark themes.\r\n            Use the buttons above to test manual theme switching.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/input-otp.stories.ts": [
                {
                    "name": "Alphanumeric",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    length: 6,\r\n    allowAlphanumeric: true,\r\n    description: 'Enter the alphanumeric code from your authenticator app.',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onComplete: (value: string) => {\r\n        console.log('Alphanumeric OTP completed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Authenticator Code</label>\r\n        <mi-input-otp\r\n          [length]=\"length\"\r\n          [allowAlphanumeric]=\"allowAlphanumeric\"\r\n          [description]=\"description\"\r\n          (complete)=\"onComplete($event)\">\r\n        </mi-input-otp>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    length: 6,\r\n    autoFocus: true,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onComplete: (value: string) => {\r\n        console.log('OTP completed:', value);\r\n        alert(`OTP completed: ${value}`);\r\n      },\r\n      onChange: (value: string) => {\r\n        console.log('OTP changed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Enter verification code</label>\r\n        <mi-input-otp\r\n          [length]=\"length\"\r\n          [value]=\"value\"\r\n          [disabled]=\"disabled\"\r\n          [autoFocus]=\"autoFocus\"\r\n          [allowAlphanumeric]=\"allowAlphanumeric\"\r\n          [hasError]=\"hasError\"\r\n          [errorMessage]=\"errorMessage\"\r\n          [description]=\"description\"\r\n          (complete)=\"onComplete($event)\"\r\n          (change)=\"onChange($event)\">\r\n        </mi-input-otp>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    length: 6,\r\n    disabled: true,\r\n    value: '123456',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Verification code (disabled)</label>\r\n        <mi-input-otp\r\n          [length]=\"length\"\r\n          [disabled]=\"disabled\"\r\n          [value]=\"value\">\r\n        </mi-input-otp>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "EightDigit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    length: 8,\r\n    description: 'Enter the 8-digit backup code.',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onComplete: (value: string) => {\r\n        console.log('8-digit backup code completed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Backup Code</label>\r\n        <mi-input-otp\r\n          [length]=\"length\"\r\n          [description]=\"description\"\r\n          (complete)=\"onComplete($event)\">\r\n        </mi-input-otp>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "FourDigit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    length: 4,\r\n    description: 'Enter the 4-digit code sent to your phone.',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onComplete: (value: string) => {\r\n        console.log('4-digit OTP completed:', value);\r\n      },\r\n    },\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">SMS Verification</label>\r\n        <mi-input-otp\r\n          [length]=\"length\"\r\n          [description]=\"description\"\r\n          (complete)=\"onComplete($event)\">\r\n        </mi-input-otp>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputOtpComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Input OTP',\r\n  component: InputOtpComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'Accessible one-time password component with customizable inputs.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    length: {\r\n      control: 'number',\r\n      description: 'Number of OTP input fields',\r\n    },\r\n    value: {\r\n      control: 'text',\r\n      description: 'Current value of the OTP',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the input is disabled',\r\n    },\r\n    autoFocus: {\r\n      control: 'boolean',\r\n      description: 'Whether to auto-focus the first input',\r\n    },\r\n    allowAlphanumeric: {\r\n      control: 'boolean',\r\n      description: 'Whether to allow letters and numbers',\r\n    },\r\n    hasError: {\r\n      control: 'boolean',\r\n      description: 'Whether the input has an error state',\r\n    },\r\n    errorMessage: {\r\n      control: 'text',\r\n      description: 'Error message to display',\r\n    },\r\n    description: {\r\n      control: 'text',\r\n      description: 'Helper text to display',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "WithError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    length: 6,\r\n    hasError: true,\r\n    errorMessage: 'Invalid verification code. Please try again.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div>\r\n        <label class=\"text-sm font-medium mb-2 block\">Enter verification code</label>\r\n        <mi-input-otp\r\n          [length]=\"length\"\r\n          [hasError]=\"hasError\"\r\n          [errorMessage]=\"errorMessage\">\r\n        </mi-input-otp>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/menubar.stories.ts": [
                {
                    "name": "applicationMenus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenubarMenu[]",
                    "defaultValue": "[\r\n  {\r\n    label: 'App',\r\n    value: 'app',\r\n    items: [\r\n      { label: 'About App', value: 'about' },\r\n      { label: 'Preferences', value: 'preferences', shortcut: '⌘,' },\r\n      { separator: true },\r\n      { label: 'Quit App', value: 'quit', shortcut: '⌘Q' }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Window',\r\n    value: 'window',\r\n    items: [\r\n      { label: 'Minimize', value: 'minimize', shortcut: '⌘M' },\r\n      { label: 'Close', value: 'close', shortcut: '⌘W' },\r\n      { separator: true },\r\n      { label: 'Bring All to Front', value: 'bring-all-front' }\r\n    ]\r\n  }\r\n]"
                },
                {
                    "name": "ApplicationStyle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    menus: applicationMenus,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onItemSelect: (event: any) => {\r\n        console.log('Application menu item selected:', event);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-full max-w-xs\">\r\n        <mi-menubar\r\n          [menus]=\"menus\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-menubar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    menus: defaultMenus,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onItemSelect: (event: any) => {\r\n        console.log('Menu item selected:', event);\r\n        alert(`Selected: ${event.item.label} from ${event.menu.label} menu`);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-full max-w-md\">\r\n        <mi-menubar\r\n          [menus]=\"menus\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-menubar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "defaultMenus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenubarMenu[]",
                    "defaultValue": "[\r\n  {\r\n    label: 'File',\r\n    value: 'file',\r\n    items: [\r\n      {\r\n        label: 'New Tab',\r\n        value: 'new-tab',\r\n        shortcut: '⌘T',\r\n        icon: 'M5 12h14m-7-7v14'\r\n      },\r\n      {\r\n        label: 'New Window',\r\n        value: 'new-window',\r\n        shortcut: '⌘N',\r\n        icon: 'M8 2v4m8-4v4M3 10h18M5 4h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z'\r\n      },\r\n      { separator: true },\r\n      {\r\n        label: 'Share',\r\n        value: 'share',\r\n        children: [\r\n          {\r\n            label: 'Email Link',\r\n            value: 'email-link',\r\n            icon: 'M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z'\r\n          },\r\n          {\r\n            label: 'Copy Link',\r\n            value: 'copy-link',\r\n            icon: 'M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71'\r\n          },\r\n          {\r\n            label: 'Social Media',\r\n            value: 'social-media',\r\n            icon: 'M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z'\r\n          }\r\n        ]\r\n      },\r\n      { separator: true },\r\n      {\r\n        label: 'Print',\r\n        value: 'print',\r\n        shortcut: '⌘P',\r\n        icon: 'M6 9V2h12v7M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2M6 14h12v8H6z'\r\n      },\r\n      {\r\n        label: 'Exit',\r\n        value: 'exit',\r\n        shortcut: '⌘Q'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Edit',\r\n    value: 'edit',\r\n    items: [\r\n      {\r\n        label: 'Undo',\r\n        value: 'undo',\r\n        shortcut: '⌘Z',\r\n        icon: 'M3 7v6h6M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13'\r\n      },\r\n      {\r\n        label: 'Redo',\r\n        value: 'redo',\r\n        shortcut: '⌘Y',\r\n        icon: 'M21 7v6h-6M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3-2.3'\r\n      },\r\n      { separator: true },\r\n      {\r\n        label: 'Cut',\r\n        value: 'cut',\r\n        shortcut: '⌘X',\r\n        icon: 'M6 6l12 12M6 18L18 6'\r\n      },\r\n      {\r\n        label: 'Copy',\r\n        value: 'copy',\r\n        shortcut: '⌘C',\r\n        icon: 'M20 9H11a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-9a2 2 0 0 0-2-2z'\r\n      },\r\n      {\r\n        label: 'Paste',\r\n        value: 'paste',\r\n        shortcut: '⌘V',\r\n        icon: 'M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2'\r\n      },\r\n      { separator: true },\r\n      {\r\n        label: 'Find',\r\n        value: 'find',\r\n        shortcut: '⌘F',\r\n        icon: 'm21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z'\r\n      },\r\n      {\r\n        label: 'Replace',\r\n        value: 'replace',\r\n        shortcut: '⌘H'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: 'View',\r\n    value: 'view',\r\n    items: [\r\n      {\r\n        label: 'Zoom In',\r\n        value: 'zoom-in',\r\n        shortcut: '⌘+',\r\n        icon: 'm21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z'\r\n      },\r\n      {\r\n        label: 'Zoom Out',\r\n        value: 'zoom-out',\r\n        shortcut: '⌘-',\r\n        icon: 'm21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z'\r\n      },\r\n      {\r\n        label: 'Reset Zoom',\r\n        value: 'reset-zoom',\r\n        shortcut: '⌘0'\r\n      },\r\n      { separator: true },\r\n      {\r\n        label: 'Toggle Fullscreen',\r\n        value: 'fullscreen',\r\n        shortcut: 'F11',\r\n        icon: 'M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3'\r\n      },\r\n      {\r\n        label: 'Toggle Sidebar',\r\n        value: 'toggle-sidebar',\r\n        shortcut: '⌘B'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Help',\r\n    value: 'help',\r\n    items: [\r\n      {\r\n        label: 'Documentation',\r\n        value: 'docs',\r\n        icon: 'M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z'\r\n      },\r\n      {\r\n        label: 'Keyboard Shortcuts',\r\n        value: 'shortcuts',\r\n        shortcut: '⌘/'\r\n      },\r\n      { separator: true },\r\n      {\r\n        label: 'Report Issue',\r\n        value: 'report-issue',\r\n        icon: 'M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z'\r\n      },\r\n      {\r\n        label: 'About',\r\n        value: 'about',\r\n        icon: 'm21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z'\r\n      }\r\n    ]\r\n  }\r\n]"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MenubarComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Menubar',\r\n  component: MenubarComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A visually persistent menu common in desktop applications that provides quick access to a consistent set of commands.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    menus: {\r\n      control: 'object',\r\n      description: 'Array of menu configurations',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    menus: simpleMenus,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onItemSelect: (event: any) => {\r\n        console.log('Simple menu item selected:', event);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-full max-w-sm\">\r\n        <mi-menubar\r\n          [menus]=\"menus\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-menubar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "simpleMenus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenubarMenu[]",
                    "defaultValue": "[\r\n  {\r\n    label: 'File',\r\n    value: 'file',\r\n    items: [\r\n      { label: 'New', value: 'new', shortcut: '⌘N' },\r\n      { label: 'Open', value: 'open', shortcut: '⌘O' },\r\n      { label: 'Save', value: 'save', shortcut: '⌘S' },\r\n      { separator: true },\r\n      { label: 'Exit', value: 'exit' }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Edit',\r\n    value: 'edit',\r\n    items: [\r\n      { label: 'Cut', value: 'cut', shortcut: '⌘X' },\r\n      { label: 'Copy', value: 'copy', shortcut: '⌘C' },\r\n      { label: 'Paste', value: 'paste', shortcut: '⌘V' }\r\n    ]\r\n  }\r\n]"
                }
            ],
            "projects/mi-ui/src/stories/carousel.stories.ts": [
                {
                    "name": "AutoPlay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/carousel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    slides: [1, 2, 3, 4, 5],\r\n    autoPlay: true,\r\n    autoPlayInterval: 2000,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 max-w-xs\">\r\n        <mi-carousel [slides]=\"slides\" [autoPlay]=\"autoPlay\" [autoPlayInterval]=\"autoPlayInterval\" [loop]=\"loop\">\r\n        </mi-carousel>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/carousel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    slides: [1, 2, 3, 4, 5],\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 max-w-xs\">\r\n        <mi-carousel [slides]=\"slides\" [autoPlay]=\"autoPlay\" [loop]=\"loop\" [showPrevNext]=\"showPrevNext\" [showDots]=\"showDots\">\r\n        </mi-carousel>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/carousel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CarouselComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Carousel',\r\n  component: CarouselComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A carousel component for cycling through elements.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    slides: {\r\n      control: 'object',\r\n      description: 'Array of slides to display',\r\n    },\r\n    autoPlay: {\r\n      control: 'boolean',\r\n      description: 'Whether to auto-play the carousel',\r\n    },\r\n    autoPlayInterval: {\r\n      control: 'number',\r\n      description: 'Auto-play interval in milliseconds',\r\n    },\r\n    loop: {\r\n      control: 'boolean',\r\n      description: 'Whether to loop back to the first slide',\r\n    },\r\n    showPrevNext: {\r\n      control: 'boolean',\r\n      description: 'Whether to show previous/next buttons',\r\n    },\r\n    showDots: {\r\n      control: 'boolean',\r\n      description: 'Whether to show dot indicators',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "NoLoop",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/carousel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    slides: [1, 2, 3, 4],\r\n    loop: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 max-w-xs\">\r\n        <mi-carousel [slides]=\"slides\" [loop]=\"loop\">\r\n        </mi-carousel>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithoutControls",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/carousel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    slides: [1, 2, 3],\r\n    showPrevNext: false,\r\n    showDots: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 max-w-xs\">\r\n        <mi-carousel [slides]=\"slides\" [showPrevNext]=\"showPrevNext\" [showDots]=\"showDots\">\r\n        </mi-carousel>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/avatar.stories.ts": [
                {
                    "name": "AvatarGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <div>\r\n          <h4 class=\"text-sm font-medium mb-2\">Team Members</h4>\r\n          <div class=\"flex -space-x-2\">\r\n            <mi-avatar src=\"https://github.com/shadcn.png\" alt=\"User 1\" class=\"border-2 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"AB\" class=\"border-2 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"CD\" class=\"border-2 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"EF\" class=\"border-2 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"+5\" class=\"border-2 border-background bg-muted\"></mi-avatar>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <h4 class=\"text-sm font-medium mb-2\">Recent Collaborators</h4>\r\n          <div class=\"flex -space-x-3\">\r\n            <mi-avatar src=\"https://github.com/shadcn.png\" alt=\"User 1\" size=\"lg\" class=\"border-4 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"JD\" size=\"lg\" class=\"border-4 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"KL\" size=\"lg\" class=\"border-4 border-background\"></mi-avatar>\r\n            <mi-avatar fallback=\"MN\" size=\"lg\" class=\"border-4 border-background\"></mi-avatar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "BrokenImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-4\">\r\n        <mi-avatar src=\"https://broken-url.jpg\" fallback=\"AB\" size=\"sm\"></mi-avatar>\r\n        <mi-avatar src=\"https://broken-url.jpg\" fallback=\"CD\" size=\"default\"></mi-avatar>\r\n        <mi-avatar src=\"https://broken-url.jpg\" fallback=\"EF\" size=\"lg\"></mi-avatar>\r\n        <mi-avatar src=\"https://broken-url.jpg\" fallback=\"GH\" size=\"xl\"></mi-avatar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-avatar\r\n        [size]=\"size\"\r\n        [src]=\"src\"\r\n        [alt]=\"alt\"\r\n        [fallback]=\"fallback\"\r\n        [class]=\"class\">\r\n      </mi-avatar>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AvatarComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Avatar',\r\n  component: AvatarComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'An avatar component for displaying user profile pictures or initials.',\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        AvatarComponent,\r\n        BadgeComponent,\r\n        IconComponent,\r\n      ],\r\n      providers: [IconService],\r\n    }),\r\n    applicationConfig({\r\n      providers: [IconService],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'default', 'lg', 'xl'],\r\n      description: 'The size of the avatar',\r\n    },\r\n    src: {\r\n      control: 'text',\r\n      description: 'Image source URL',\r\n    },\r\n    alt: {\r\n      control: 'text',\r\n      description: 'Alternative text for the image',\r\n    },\r\n    fallback: {\r\n      control: 'text',\r\n      description: 'Fallback text (usually initials)',\r\n    },\r\n    class: {\r\n      control: 'text',\r\n      description: 'Additional CSS classes',\r\n    },\r\n  },\r\n  args: {\r\n    size: 'default',\r\n    src: 'https://github.com/shadcn.png',\r\n    alt: 'User avatar',\r\n    fallback: 'CN',\r\n  },\r\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-4\">\r\n        <mi-avatar size=\"sm\" src=\"https://github.com/shadcn.png\" alt=\"Small avatar\"></mi-avatar>\r\n        <mi-avatar size=\"default\" src=\"https://github.com/shadcn.png\" alt=\"Default avatar\"></mi-avatar>\r\n        <mi-avatar size=\"lg\" src=\"https://github.com/shadcn.png\" alt=\"Large avatar\"></mi-avatar>\r\n        <mi-avatar size=\"xl\" src=\"https://github.com/shadcn.png\" alt=\"Extra large avatar\"></mi-avatar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "UserProfile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-6\" style=\"max-width: 300px;\">\r\n        <div class=\"text-center\">\r\n          <mi-avatar src=\"https://github.com/shadcn.png\" alt=\"Profile picture\" size=\"xl\" class=\"mx-auto mb-4\"></mi-avatar>\r\n          <h3 class=\"text-lg font-semibold\">John Doe</h3>\r\n          <p class=\"text-sm text-muted-foreground\">Software Engineer</p>\r\n          <mi-badge variant=\"success\" class=\"mt-2\">Available</mi-badge>\r\n        </div>\r\n\r\n        <div class=\"border rounded-lg p-4\">\r\n          <h4 class=\"text-sm font-medium mb-3\">Quick Actions</h4>\r\n          <div class=\"space-y-2\">\r\n            <div class=\"flex items-center gap-3\">\r\n              <mi-avatar fallback=\"DM\" size=\"sm\"></mi-avatar>\r\n              <span class=\"text-sm\">Send direct message</span>\r\n            </div>\r\n            <div class=\"flex items-center gap-3\">\r\n              <mi-avatar fallback=\"VC\" size=\"sm\"></mi-avatar>\r\n              <span class=\"text-sm\">Start video call</span>\r\n            </div>\r\n            <div class=\"flex items-center gap-3\">\r\n              <mi-avatar fallback=\"SP\" size=\"sm\"></mi-avatar>\r\n              <span class=\"text-sm\">Share profile</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithBadge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-6\">\r\n        <div class=\"relative\">\r\n          <mi-avatar src=\"https://github.com/shadcn.png\" alt=\"User avatar\"></mi-avatar>\r\n          <mi-badge variant=\"destructive\" size=\"sm\" class=\"absolute -top-1 -right-1 h-5 w-5 rounded-full p-0 flex items-center justify-center text-xs\">\r\n            3\r\n          </mi-badge>\r\n        </div>\r\n\r\n        <div class=\"relative\">\r\n          <mi-avatar fallback=\"JD\" size=\"lg\"></mi-avatar>\r\n          <mi-badge variant=\"default\" size=\"sm\" class=\"absolute -top-1 -right-1 h-6 w-6 rounded-full p-0 flex items-center justify-center text-xs\">\r\n            9+\r\n          </mi-badge>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithFallback",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-4\">\r\n        <mi-avatar fallback=\"AB\" size=\"sm\"></mi-avatar>\r\n        <mi-avatar fallback=\"CD\" size=\"default\"></mi-avatar>\r\n        <mi-avatar fallback=\"EF\" size=\"lg\"></mi-avatar>\r\n        <mi-avatar fallback=\"GH\" size=\"xl\"></mi-avatar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-4\">\r\n        <mi-avatar size=\"sm\"></mi-avatar>\r\n        <mi-avatar size=\"default\"></mi-avatar>\r\n        <mi-avatar size=\"lg\"></mi-avatar>\r\n        <mi-avatar size=\"xl\"></mi-avatar>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithStatus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-6\">\r\n        <div class=\"relative\">\r\n          <mi-avatar src=\"https://github.com/shadcn.png\" alt=\"User avatar\"></mi-avatar>\r\n          <div class=\"absolute -bottom-0 -right-0 h-3 w-3 rounded-full border-2 border-background bg-green-500\"></div>\r\n        </div>\r\n\r\n        <div class=\"relative\">\r\n          <mi-avatar src=\"https://github.com/shadcn.png\" alt=\"User avatar\" size=\"lg\"></mi-avatar>\r\n          <div class=\"absolute -bottom-0 -right-0 h-4 w-4 rounded-full border-2 border-background bg-yellow-500\"></div>\r\n        </div>\r\n\r\n        <div class=\"relative\">\r\n          <mi-avatar fallback=\"AB\" size=\"xl\"></mi-avatar>\r\n          <div class=\"absolute -bottom-1 -right-1 h-5 w-5 rounded-full border-2 border-background bg-red-500\"></div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/select.stories.ts": [
                {
                    "name": "basicOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "defaultValue": "[\r\n  { value: 'apple', label: 'Apple' },\r\n  { value: 'banana', label: 'Banana' },\r\n  { value: 'orange', label: 'Orange' },\r\n  { value: 'grape', label: 'Grape' },\r\n]"
                },
                {
                    "name": "Countries",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: countryOptions,\r\n    placeholder: 'Select a country...',\r\n  },\r\n}"
                },
                {
                    "name": "countryOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "defaultValue": "[\r\n  { value: 'us', label: 'United States' },\r\n  { value: 'ca', label: 'Canada' },\r\n  { value: 'uk', label: 'United Kingdom' },\r\n  { value: 'de', label: 'Germany' },\r\n  { value: 'fr', label: 'France' },\r\n  { value: 'jp', label: 'Japan' },\r\n  { value: 'au', label: 'Australia' },\r\n]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: basicOptions,\r\n    placeholder: 'Select a fruit...',\r\n  },\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: basicOptions,\r\n    placeholder: 'Select a fruit...',\r\n    disabled: true,\r\n  },\r\n}"
                },
                {
                    "name": "FormExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <form class=\"space-y-4 max-w-md\">\r\n        <div>\r\n          <label for=\"country\" class=\"text-sm font-medium mb-2 block\">Country</label>\r\n          <mi-select\r\n            id=\"country\"\r\n            [options]=\"countryOptions\"\r\n            placeholder=\"Select your country...\"\r\n            (selectionChange)=\"onCountryChange($event)\">\r\n          </mi-select>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"fruit\" class=\"text-sm font-medium mb-2 block\">Favorite Fruit</label>\r\n          <mi-select\r\n            id=\"fruit\"\r\n            [options]=\"fruitOptions\"\r\n            placeholder=\"Select your favorite fruit...\"\r\n            (selectionChange)=\"onFruitChange($event)\">\r\n          </mi-select>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"size\" class=\"text-sm font-medium mb-2 block\">Size Preference</label>\r\n          <mi-select\r\n            id=\"size\"\r\n            [options]=\"sizeOptions\"\r\n            placeholder=\"Select size...\"\r\n            size=\"sm\">\r\n          </mi-select>\r\n        </div>\r\n\r\n        @if (selectedValues.country || selectedValues.fruit) {\r\n          <div class=\"p-4 bg-muted rounded-md\">\r\n            <h4 class=\"font-medium mb-2\">Selected Values:</h4>\r\n            <ul class=\"text-sm space-y-1\">\r\n              @if (selectedValues.country) {\r\n                <li><strong>Country:</strong> {{ selectedValues.country.label }}</li>\r\n              }\r\n              @if (selectedValues.fruit) {\r\n                <li><strong>Fruit:</strong> {{ selectedValues.fruit.label }}</li>\r\n              }\r\n            </ul>\r\n          </div>\r\n        }\r\n      </form>\r\n    `,\r\n    props: {\r\n      countryOptions: countryOptions,\r\n      fruitOptions: basicOptions,\r\n      sizeOptions: [\r\n        { value: 'xs', label: 'Extra Small' },\r\n        { value: 's', label: 'Small' },\r\n        { value: 'm', label: 'Medium' },\r\n        { value: 'l', label: 'Large' },\r\n        { value: 'xl', label: 'Extra Large' },\r\n      ],\r\n      selectedValues: {\r\n        country: null,\r\n        fruit: null,\r\n      },\r\n      onCountryChange: function(option: any) {\r\n        (this as any).selectedValues.country = option;\r\n      },\r\n      onFruitChange: function(option: any) {\r\n        (this as any).selectedValues.fruit = option;\r\n      },\r\n    },\r\n  }),\r\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4 max-w-md\">\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Choose an action</label>\r\n          <mi-select\r\n            [options]=\"actionOptions\"\r\n            placeholder=\"What would you like to do?\"\r\n            (selectionChange)=\"onActionChange($event)\"\r\n            [value]=\"selectedAction\">\r\n          </mi-select>\r\n        </div>\r\n\r\n        @if (message) {\r\n          <div class=\"p-3 bg-primary/10 border border-primary/20 rounded-md\">\r\n            <p class=\"text-sm\">{{ message }}</p>\r\n          </div>\r\n        }\r\n\r\n        <div class=\"flex space-x-2\">\r\n          <mi-button (click)=\"clearSelection()\" variant=\"outline\" size=\"sm\">\r\n            Clear Selection\r\n          </mi-button>\r\n          <mi-button (click)=\"setRandomSelection()\" size=\"sm\">\r\n            Random Selection\r\n          </mi-button>\r\n        </div>\r\n      </div>\r\n    `,\r\n    props: {\r\n      actionOptions: [\r\n        { value: 'read', label: '📖 Read a book' },\r\n        { value: 'code', label: '💻 Write some code' },\r\n        { value: 'walk', label: '🚶 Take a walk' },\r\n        { value: 'cook', label: '🍳 Cook a meal' },\r\n        { value: 'sleep', label: '😴 Take a nap' },\r\n      ],\r\n      selectedAction: '',\r\n      message: '',\r\n      onActionChange: function(option: any) {\r\n        if (option) {\r\n          (this as any).selectedAction = option.value;\r\n          (this as any).message = `You selected: ${option.label}`;\r\n        } else {\r\n          (this as any).selectedAction = '';\r\n          (this as any).message = '';\r\n        }\r\n      },\r\n      clearSelection: function() {\r\n        (this as any).selectedAction = '';\r\n        (this as any).message = 'Selection cleared!';\r\n      },\r\n      setRandomSelection: function() {\r\n        const options = (this as any).actionOptions;\r\n        const randomOption = options[Math.floor(Math.random() * options.length)];\r\n        (this as any).selectedAction = randomOption.value;\r\n        (this as any).message = `Randomly selected: ${randomOption.label}`;\r\n      },\r\n    },\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Select',\r\n  component: SelectComponent,\r\n  parameters: {\r\n    layout: 'padded',\r\n  },\r\n  argTypes: {\r\n    variant: {\r\n      control: { type: 'radio' },\r\n      options: ['default'],\r\n    },\r\n    size: {\r\n      control: { type: 'radio' },\r\n      options: ['default', 'sm', 'lg'],\r\n    },\r\n    disabled: {\r\n      control: { type: 'boolean' },\r\n    },\r\n    placeholder: {\r\n      control: { type: 'text' },\r\n    },\r\n    value: {\r\n      control: { type: 'text' },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "optionsWithDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "defaultValue": "[\r\n  { value: 'option1', label: 'Available Option 1' },\r\n  { value: 'option2', label: 'Available Option 2' },\r\n  { value: 'option3', label: 'Disabled Option', disabled: true },\r\n  { value: 'option4', label: 'Available Option 3' },\r\n]"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Small</label>\r\n          <mi-select [options]=\"smallOptions\" placeholder=\"Select option...\" size=\"sm\"></mi-select>\r\n        </div>\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Default</label>\r\n          <mi-select [options]=\"defaultOptions\" placeholder=\"Select option...\" size=\"default\"></mi-select>\r\n        </div>\r\n        <div>\r\n          <label class=\"text-sm font-medium mb-2 block\">Large</label>\r\n          <mi-select [options]=\"largeOptions\" placeholder=\"Select option...\" size=\"lg\"></mi-select>\r\n        </div>\r\n      </div>\r\n    `,\r\n    props: {\r\n      smallOptions: basicOptions,\r\n      defaultOptions: basicOptions,\r\n      largeOptions: basicOptions,\r\n    },\r\n  }),\r\n}"
                },
                {
                    "name": "WithDisabledOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: optionsWithDisabled,\r\n    placeholder: 'Select an option...',\r\n  },\r\n}"
                },
                {
                    "name": "WithValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: basicOptions,\r\n    placeholder: 'Select a fruit...',\r\n    value: 'banana',\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/tabs.stories.ts": [
                {
                    "name": "basicTabs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { value: 'tab1', label: 'Account' },\r\n  { value: 'tab2', label: 'Password' },\r\n  { value: 'tab3', label: 'Settings' },\r\n]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    tabs: basicTabs,\r\n    defaultValue: 'tab1',\r\n    variant: 'default',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-96\">\r\n        <mi-tabs [tabs]=\"tabs\" [defaultValue]=\"defaultValue\" [variant]=\"variant\">\r\n          <div class=\"mt-4 p-4 border border-gray-200 dark:border-gray-700 rounded-md\">\r\n            <h3 class=\"text-lg font-medium mb-2\">Account Information</h3>\r\n            <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              Make changes to your account here. Click save when you're done.\r\n            </p>\r\n          </div>\r\n        </mi-tabs>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      tabs: [\r\n        { value: 'overview', label: 'Overview' },\r\n        { value: 'analytics', label: 'Analytics' },\r\n        { value: 'reports', label: 'Reports' },\r\n        { value: 'notifications', label: 'Notifications' },\r\n      ],\r\n      currentTab: 'overview',\r\n    },\r\n    template: `\r\n      <div class=\"w-full max-w-2xl\">\r\n        <mi-tabs\r\n          [tabs]=\"tabs\"\r\n          [value]=\"currentTab\"\r\n          (valueChange)=\"currentTab = $event\">\r\n\r\n          <div class=\"mt-6\">\r\n            <div *ngIf=\"currentTab === 'overview'\" class=\"space-y-4\">\r\n              <h3 class=\"text-lg font-medium\">Overview</h3>\r\n              <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Get a high-level view of your dashboard metrics and key performance indicators.\r\n              </p>\r\n              <div class=\"grid grid-cols-3 gap-4\">\r\n                <div class=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                  <div class=\"text-2xl font-bold\">1,234</div>\r\n                  <div class=\"text-sm text-gray-500\">Total Users</div>\r\n                </div>\r\n                <div class=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                  <div class=\"text-2xl font-bold\">56</div>\r\n                  <div class=\"text-sm text-gray-500\">Active Sessions</div>\r\n                </div>\r\n                <div class=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                  <div class=\"text-2xl font-bold\">89%</div>\r\n                  <div class=\"text-sm text-gray-500\">Uptime</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"currentTab === 'analytics'\" class=\"space-y-4\">\r\n              <h3 class=\"text-lg font-medium\">Analytics</h3>\r\n              <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Detailed analytics and insights about your application usage.\r\n              </p>\r\n              <div class=\"h-32 bg-gray-100 dark:bg-gray-800 rounded-lg flex items-center justify-center\">\r\n                <span class=\"text-gray-500\">Analytics Chart Placeholder</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"currentTab === 'reports'\" class=\"space-y-4\">\r\n              <h3 class=\"text-lg font-medium\">Reports</h3>\r\n              <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Generate and view detailed reports for your data.\r\n              </p>\r\n              <div class=\"space-y-2\">\r\n                <div class=\"p-3 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                  <div class=\"font-medium\">Monthly Report</div>\r\n                  <div class=\"text-sm text-gray-500\">Generated 2 hours ago</div>\r\n                </div>\r\n                <div class=\"p-3 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                  <div class=\"font-medium\">Weekly Summary</div>\r\n                  <div class=\"text-sm text-gray-500\">Generated 1 day ago</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"currentTab === 'notifications'\" class=\"space-y-4\">\r\n              <h3 class=\"text-lg font-medium\">Notifications</h3>\r\n              <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Manage your notification preferences and settings.\r\n              </p>\r\n              <div class=\"space-y-3\">\r\n                <div class=\"flex items-center justify-between\">\r\n                  <span>Email notifications</span>\r\n                  <input type=\"checkbox\" checked class=\"rounded\">\r\n                </div>\r\n                <div class=\"flex items-center justify-between\">\r\n                  <span>Push notifications</span>\r\n                  <input type=\"checkbox\" class=\"rounded\">\r\n                </div>\r\n                <div class=\"flex items-center justify-between\">\r\n                  <span>SMS notifications</span>\r\n                  <input type=\"checkbox\" class=\"rounded\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mi-tabs>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabsComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Tabs',\r\n  component: TabsComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'underline'],\r\n    },\r\n    value: {\r\n      control: 'text',\r\n    },\r\n    defaultValue: {\r\n      control: 'text',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Underline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    tabs: basicTabs,\r\n    defaultValue: 'tab1',\r\n    variant: 'underline',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-96\">\r\n        <mi-tabs [tabs]=\"tabs\" [defaultValue]=\"defaultValue\" [variant]=\"variant\">\r\n          <div class=\"mt-4 p-4\">\r\n            <h3 class=\"text-lg font-medium mb-2\">Account Information</h3>\r\n            <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              Make changes to your account here. Click save when you're done.\r\n            </p>\r\n          </div>\r\n        </mi-tabs>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      tabs: [\r\n        { value: 'general', label: 'General' },\r\n        { value: 'security', label: 'Security' },\r\n        { value: 'integrations', label: 'Integrations', disabled: true },\r\n        { value: 'advanced', label: 'Advanced' },\r\n      ],\r\n      defaultValue: 'general',\r\n    },\r\n    template: `\r\n      <div class=\"w-96\">\r\n        <mi-tabs [tabs]=\"tabs\" [defaultValue]=\"defaultValue\">\r\n          <div class=\"mt-4 p-4 border border-gray-200 dark:border-gray-700 rounded-md\">\r\n            <h3 class=\"text-lg font-medium mb-2\">Settings</h3>\r\n            <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              Configure your application settings. Some sections may be disabled.\r\n            </p>\r\n          </div>\r\n        </mi-tabs>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/simple-theme-test.stories.ts": [
                {
                    "name": "BasicThemeTest",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/simple-theme-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div style=\"padding: 2rem; min-height: 100vh; background-color: var(--background); color: var(--foreground);\">\r\n        <h1 style=\"color: var(--foreground); margin-bottom: 2rem;\">Simple Theme Test</h1>\r\n\r\n        <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-bottom: 2rem;\">\r\n\r\n          <div style=\"padding: 1rem; background-color: var(--primary); color: var(--primary-foreground); border-radius: 8px;\">\r\n            <h3>Primary</h3>\r\n            <p>Background: var(--primary)</p>\r\n            <p>Text: var(--primary-foreground)</p>\r\n          </div>\r\n\r\n          <div style=\"padding: 1rem; background-color: var(--secondary); color: var(--secondary-foreground); border-radius: 8px;\">\r\n            <h3>Secondary</h3>\r\n            <p>Background: var(--secondary)</p>\r\n            <p>Text: var(--secondary-foreground)</p>\r\n          </div>\r\n\r\n          <div style=\"padding: 1rem; background-color: var(--card); color: var(--card-foreground); border: 1px solid var(--border); border-radius: 8px;\">\r\n            <h3>Card</h3>\r\n            <p>Background: var(--card)</p>\r\n            <p>Border: var(--border)</p>\r\n          </div>\r\n\r\n          <div style=\"padding: 1rem; background-color: var(--muted); color: var(--muted-foreground); border-radius: 8px;\">\r\n            <h3>Muted</h3>\r\n            <p>Background: var(--muted)</p>\r\n            <p>Text: var(--muted-foreground)</p>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div style=\"margin-bottom: 2rem;\">\r\n          <h2 style=\"margin-bottom: 1rem;\">Manual Theme Switch</h2>\r\n          <button\r\n            style=\"padding: 0.5rem 1rem; margin-right: 0.5rem; background-color: var(--primary); color: var(--primary-foreground); border: none; border-radius: 4px; cursor: pointer;\"\r\n            onclick=\"\r\n              document.documentElement.setAttribute('data-mode', 'light');\r\n              document.documentElement.classList.remove('dark');\r\n              console.log('🎨 Manual: Switched to Light');\r\n              console.log('🎨 Current data-mode:', document.documentElement.getAttribute('data-mode'));\r\n              console.log('🎨 Current classes:', document.documentElement.className);\r\n            \">\r\n            ☀️ Light Mode\r\n          </button>\r\n          <button\r\n            style=\"padding: 0.5rem 1rem; background-color: var(--primary); color: var(--primary-foreground); border: none; border-radius: 4px; cursor: pointer;\"\r\n            onclick=\"\r\n              document.documentElement.setAttribute('data-mode', 'dark');\r\n              document.documentElement.classList.add('dark');\r\n              console.log('🎨 Manual: Switched to Dark');\r\n              console.log('🎨 Current data-mode:', document.documentElement.getAttribute('data-mode'));\r\n              console.log('🎨 Current classes:', document.documentElement.className);\r\n            \">\r\n            🌙 Dark Mode\r\n          </button>\r\n        </div>\r\n\r\n        <div style=\"padding: 1rem; background-color: var(--muted); border-radius: 8px;\">\r\n          <h3>Instructions:</h3>\r\n          <ol>\r\n            <li>Try the theme toggle in the Storybook toolbar (☀️/🌙)</li>\r\n            <li>Try the manual buttons above</li>\r\n            <li>Watch the browser console for debug logs</li>\r\n            <li>Look for color changes in the boxes above</li>\r\n          </ol>\r\n          <p><strong>Expected Result:</strong> Colors should change when switching between light and dark themes.</p>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/simple-theme-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\r\n  title: 'Theme/Simple Test',\r\n  tags: ['autodocs'],\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/drawer.stories.ts": [
                {
                    "name": "BottomSide",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'bottom',\r\n    open: false,\r\n    dismissible: true,\r\n    modal: true,\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'right',\r\n    open: false,\r\n    dismissible: true,\r\n    modal: true,\r\n  },\r\n}"
                },
                {
                    "name": "LeftSide",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'left',\r\n    open: false,\r\n    dismissible: true,\r\n    modal: true,\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Drawer>",
                    "defaultValue": "{\r\n  title: 'Components/Drawer',\r\n  component: Drawer,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    side: {\r\n      control: 'select',\r\n      options: ['left', 'right', 'top', 'bottom']\r\n    },\r\n    open: { control: 'boolean' },\r\n    dismissible: { control: 'boolean' },\r\n    modal: { control: 'boolean' },\r\n  },\r\n}"
                },
                {
                    "name": "NonDismissible",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'right',\r\n    open: false,\r\n    dismissible: false,\r\n    modal: true,\r\n  },\r\n}"
                },
                {
                    "name": "NonModal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'right',\r\n    open: false,\r\n    dismissible: true,\r\n    modal: false,\r\n  },\r\n}"
                },
                {
                    "name": "TopSide",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'top',\r\n    open: false,\r\n    dismissible: true,\r\n    modal: true,\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/sheet.stories.ts": [
                {
                    "name": "BottomSide",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    isOpen: true,\r\n    side: 'bottom',\r\n    size: 'lg',\r\n    title: 'Quick Actions',\r\n    description: 'Frequently used actions and shortcuts.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-sheet\r\n        [isOpen]=\"isOpen\"\r\n        [side]=\"side\"\r\n        [size]=\"size\"\r\n        [title]=\"title\"\r\n        [description]=\"description\">\r\n        <div class=\"grid grid-cols-3 gap-4\">\r\n          <button class=\"p-4 border rounded hover:bg-accent\">\r\n            <div class=\"text-center\">\r\n              <div class=\"text-lg mb-2\">📊</div>\r\n              <div class=\"text-sm\">Analytics</div>\r\n            </div>\r\n          </button>\r\n          <button class=\"p-4 border rounded hover:bg-accent\">\r\n            <div class=\"text-center\">\r\n              <div class=\"text-lg mb-2\">⚙️</div>\r\n              <div class=\"text-sm\">Settings</div>\r\n            </div>\r\n          </button>\r\n          <button class=\"p-4 border rounded hover:bg-accent\">\r\n            <div class=\"text-center\">\r\n              <div class=\"text-lg mb-2\">💬</div>\r\n              <div class=\"text-sm\">Support</div>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </mi-sheet>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    isOpen: true,\r\n    title: 'Edit Profile',\r\n    description: 'Make changes to your profile here. Click save when you\\'re done.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div>\r\n        <mi-sheet\r\n          [isOpen]=\"isOpen\"\r\n          [side]=\"side\"\r\n          [size]=\"size\"\r\n          [title]=\"title\"\r\n          [description]=\"description\"\r\n          [closeOnBackdropClick]=\"closeOnBackdropClick\"\r\n          [showCloseButton]=\"showCloseButton\"\r\n          [closeOnEscape]=\"closeOnEscape\">\r\n          <div class=\"grid gap-4 py-4\">\r\n            <div class=\"grid grid-cols-4 items-center gap-4\">\r\n              <label class=\"text-right text-sm font-medium\">Name</label>\r\n              <input class=\"col-span-3 flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\" value=\"Pedro Duarte\" />\r\n            </div>\r\n            <div class=\"grid grid-cols-4 items-center gap-4\">\r\n              <label class=\"text-right text-sm font-medium\">Username</label>\r\n              <input class=\"col-span-3 flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\" value=\"@peduarte\" />\r\n            </div>\r\n          </div>\r\n          <div slot=\"footer\" class=\"space-x-2\">\r\n            <button class=\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2\">\r\n              Save changes\r\n            </button>\r\n          </div>\r\n        </mi-sheet>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "LargeSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    isOpen: true,\r\n    side: 'right',\r\n    size: 'lg',\r\n    title: 'Product Details',\r\n    description: 'Detailed information about the selected product.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-sheet\r\n        [isOpen]=\"isOpen\"\r\n        [side]=\"side\"\r\n        [size]=\"size\"\r\n        [title]=\"title\"\r\n        [description]=\"description\">\r\n        <div class=\"space-y-6\">\r\n          <div class=\"aspect-video bg-muted rounded-lg flex items-center justify-center\">\r\n            <span class=\"text-muted-foreground\">Product Image</span>\r\n          </div>\r\n          <div class=\"space-y-4\">\r\n            <h3 class=\"text-lg font-semibold\">Premium Headphones</h3>\r\n            <p class=\"text-muted-foreground\">High-quality wireless headphones with noise cancellation and premium sound quality.</p>\r\n            <div class=\"flex items-center space-x-2\">\r\n              <span class=\"text-2xl font-bold\">$299.99</span>\r\n              <span class=\"text-sm text-muted-foreground line-through\">$399.99</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div slot=\"footer\" class=\"space-x-2\">\r\n          <button class=\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2\">\r\n            Add to Wishlist\r\n          </button>\r\n          <button class=\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2\">\r\n            Add to Cart\r\n          </button>\r\n        </div>\r\n      </mi-sheet>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "LeftSide",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    isOpen: true,\r\n    side: 'left',\r\n    title: 'Navigation',\r\n    description: 'Choose a section to navigate to.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-sheet\r\n        [isOpen]=\"isOpen\"\r\n        [side]=\"side\"\r\n        [size]=\"size\"\r\n        [title]=\"title\"\r\n        [description]=\"description\">\r\n        <nav class=\"space-y-2\">\r\n          <a href=\"#\" class=\"block p-2 rounded hover:bg-accent\">Dashboard</a>\r\n          <a href=\"#\" class=\"block p-2 rounded hover:bg-accent\">Users</a>\r\n          <a href=\"#\" class=\"block p-2 rounded hover:bg-accent\">Settings</a>\r\n          <a href=\"#\" class=\"block p-2 rounded hover:bg-accent\">Reports</a>\r\n        </nav>\r\n      </mi-sheet>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SheetComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Sheet',\r\n  component: SheetComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'Extends the Dialog component to display content that complements the main content of the screen.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    isOpen: {\r\n      control: 'boolean',\r\n      description: 'Whether the sheet is open',\r\n    },\r\n    side: {\r\n      control: 'select',\r\n      options: ['top', 'right', 'bottom', 'left'],\r\n      description: 'The side from which the sheet slides in',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'md', 'lg', 'xl', 'full'],\r\n      description: 'The size of the sheet',\r\n    },\r\n    title: {\r\n      control: 'text',\r\n      description: 'The title of the sheet',\r\n    },\r\n    description: {\r\n      control: 'text',\r\n      description: 'The description of the sheet',\r\n    },\r\n    closeOnBackdropClick: {\r\n      control: 'boolean',\r\n      description: 'Whether to close when clicking the backdrop',\r\n    },\r\n    showCloseButton: {\r\n      control: 'boolean',\r\n      description: 'Whether to show the close button',\r\n    },\r\n    closeOnEscape: {\r\n      control: 'boolean',\r\n      description: 'Whether to close when pressing Escape',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "TopSide",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    isOpen: true,\r\n    side: 'top',\r\n    size: 'md',\r\n    title: 'Notifications',\r\n    description: 'Recent notifications and updates.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-sheet\r\n        [isOpen]=\"isOpen\"\r\n        [side]=\"side\"\r\n        [size]=\"size\"\r\n        [title]=\"title\"\r\n        [description]=\"description\">\r\n        <div class=\"space-y-4\">\r\n          <div class=\"p-3 border rounded\">\r\n            <h4 class=\"font-medium\">New message received</h4>\r\n            <p class=\"text-sm text-muted-foreground\">From John Doe</p>\r\n          </div>\r\n          <div class=\"p-3 border rounded\">\r\n            <h4 class=\"font-medium\">System update available</h4>\r\n            <p class=\"text-sm text-muted-foreground\">Version 2.1.0 is ready</p>\r\n          </div>\r\n        </div>\r\n      </mi-sheet>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/skeleton.stories.ts": [
                {
                    "name": "Card",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 border border-gray-200 dark:border-gray-700 rounded-lg p-6\">\r\n        <div class=\"flex items-center space-x-4 mb-4\">\r\n          <mi-skeleton variant=\"avatar\" width=\"40px\" height=\"40px\"></mi-skeleton>\r\n          <div class=\"space-y-2 flex-1\">\r\n            <mi-skeleton variant=\"text\" width=\"120px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"80px\"></mi-skeleton>\r\n          </div>\r\n        </div>\r\n        <div class=\"space-y-2\">\r\n          <mi-skeleton variant=\"text\" width=\"100%\"></mi-skeleton>\r\n          <mi-skeleton variant=\"text\" width=\"100%\"></mi-skeleton>\r\n          <mi-skeleton variant=\"text\" width=\"60%\"></mi-skeleton>\r\n        </div>\r\n        <div class=\"mt-4 flex justify-between\">\r\n          <mi-skeleton variant=\"button\" width=\"80px\"></mi-skeleton>\r\n          <mi-skeleton variant=\"button\" width=\"60px\"></mi-skeleton>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'default',\r\n    width: '200px',\r\n    height: '20px',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SkeletonComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Skeleton',\r\n  component: SkeletonComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'text', 'avatar', 'button'],\r\n    },\r\n    width: {\r\n      control: 'text',\r\n    },\r\n    height: {\r\n      control: 'text',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-full\">\r\n        <div class=\"space-y-3\">\r\n          <div class=\"flex space-x-4\">\r\n            <mi-skeleton variant=\"text\" width=\"100px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"150px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"80px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"120px\"></mi-skeleton>\r\n          </div>\r\n          <div class=\"flex space-x-4\">\r\n            <mi-skeleton variant=\"text\" width=\"100px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"150px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"80px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"120px\"></mi-skeleton>\r\n          </div>\r\n          <div class=\"flex space-x-4\">\r\n            <mi-skeleton variant=\"text\" width=\"100px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"150px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"80px\"></mi-skeleton>\r\n            <mi-skeleton variant=\"text\" width=\"120px\"></mi-skeleton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Variants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Default</p>\r\n          <mi-skeleton variant=\"default\" width=\"200px\" height=\"20px\"></mi-skeleton>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Text</p>\r\n          <mi-skeleton variant=\"text\" width=\"150px\"></mi-skeleton>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Avatar</p>\r\n          <mi-skeleton variant=\"avatar\" width=\"40px\" height=\"40px\"></mi-skeleton>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Button</p>\r\n          <mi-skeleton variant=\"button\" width=\"100px\"></mi-skeleton>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/switch.stories.ts": [
                {
                    "name": "Checked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    checked: true,\r\n    disabled: false,\r\n    size: 'default',\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    checked: false,\r\n    disabled: false,\r\n    size: 'default',\r\n  },\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    checked: false,\r\n    disabled: true,\r\n    size: 'default',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SwitchComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Switch',\r\n  component: SwitchComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'default', 'lg'],\r\n    },\r\n    checked: {\r\n      control: 'boolean',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex flex-col gap-4\">\r\n        <div class=\"flex items-center gap-2\">\r\n          <mi-switch size=\"sm\" [checked]=\"true\">Small</mi-switch>\r\n        </div>\r\n        <div class=\"flex items-center gap-2\">\r\n          <mi-switch size=\"default\" [checked]=\"true\">Default</mi-switch>\r\n        </div>\r\n        <div class=\"flex items-center gap-2\">\r\n          <mi-switch size=\"lg\" [checked]=\"true\">Large</mi-switch>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithLabels",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex flex-col gap-4\">\r\n        <div class=\"flex items-center gap-2\">\r\n          <mi-switch [checked]=\"false\">Airplane Mode</mi-switch>\r\n        </div>\r\n        <div class=\"flex items-center gap-2\">\r\n          <mi-switch [checked]=\"true\">Wi-Fi</mi-switch>\r\n        </div>\r\n        <div class=\"flex items-center gap-2\">\r\n          <mi-switch [checked]=\"false\" [disabled]=\"true\">Bluetooth</mi-switch>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/command.stories.ts": [
                {
                    "name": "commandGroups",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/command.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CommandGroup[]",
                    "defaultValue": "[\r\n  {\r\n    name: 'Suggestions',\r\n    items: [\r\n      { value: 'calendar', label: 'Calendar', icon: 'M8 2v4m8-4v4M3 10h18M5 4h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z' },\r\n      { value: 'search-emoji', label: 'Search Emoji', icon: 'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z' },\r\n      { value: 'calculator', label: 'Calculator', icon: 'M3 7v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2z' },\r\n    ]\r\n  },\r\n  {\r\n    name: 'Settings',\r\n    items: [\r\n      { value: 'profile', label: 'Profile', icon: 'M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2' },\r\n      { value: 'billing', label: 'Billing', icon: 'M3 7v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2z' },\r\n      { value: 'settings', label: 'Settings', icon: 'M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z' },\r\n    ]\r\n  }\r\n]"
                },
                {
                    "name": "CustomEmpty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/command.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: simpleItems,\r\n    placeholder: 'Search for commands...',\r\n    emptyMessage: 'No commands found. Try a different search term.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 h-64 border rounded-lg\">\r\n        <mi-command\r\n          [items]=\"items\"\r\n          [placeholder]=\"placeholder\"\r\n          [emptyMessage]=\"emptyMessage\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-command>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/command.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: simpleItems,\r\n    placeholder: 'Type a command or search...',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 h-64 border rounded-lg\">\r\n        <mi-command\r\n          [items]=\"items\"\r\n          [placeholder]=\"placeholder\"\r\n          [emptyMessage]=\"emptyMessage\"\r\n          [showSearch]=\"showSearch\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-command>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/command.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CommandComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Command',\r\n  component: CommandComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'Fast, composable, unstyled command menu for Angular.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    items: {\r\n      control: 'object',\r\n      description: 'Array of command items',\r\n    },\r\n    groups: {\r\n      control: 'object',\r\n      description: 'Array of command groups',\r\n    },\r\n    placeholder: {\r\n      control: 'text',\r\n      description: 'Placeholder text for the search input',\r\n    },\r\n    emptyMessage: {\r\n      control: 'text',\r\n      description: 'Message to show when no results are found',\r\n    },\r\n    showSearch: {\r\n      control: 'boolean',\r\n      description: 'Whether to show the search input',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "simpleItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/command.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CommandItem[]",
                    "defaultValue": "[\r\n  { value: 'calendar', label: 'Calendar', icon: 'M8 2v4m8-4v4M3 10h18M5 4h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z' },\r\n  { value: 'search-emoji', label: 'Search Emoji', icon: 'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z' },\r\n  { value: 'calculator', label: 'Calculator', icon: 'M3 7v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2z' },\r\n]"
                },
                {
                    "name": "WithGroups",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/command.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    groups: commandGroups,\r\n    placeholder: 'Type a command or search...',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 h-64 border rounded-lg\">\r\n        <mi-command\r\n          [groups]=\"groups\"\r\n          [placeholder]=\"placeholder\"\r\n          [emptyMessage]=\"emptyMessage\"\r\n          [showSearch]=\"showSearch\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-command>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithoutSearch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/command.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    groups: commandGroups,\r\n    placeholder: 'Select an option...',\r\n    showSearch: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 h-64 border rounded-lg\">\r\n        <mi-command\r\n          [groups]=\"groups\"\r\n          [placeholder]=\"placeholder\"\r\n          [showSearch]=\"showSearch\"\r\n          (itemSelect)=\"onItemSelect($event)\">\r\n        </mi-command>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/accordion.stories.ts": [
                {
                    "name": "ComplexContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: complexContentItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    className: 'w-full',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Accordion with rich HTML content and interactive elements.',\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "complexContentItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    value: 'complex-1',\r\n    trigger: 'Rich Content Example',\r\n    content: `\r\n      <div class=\"space-y-4\">\r\n        <p class=\"text-sm text-gray-600\">This accordion item contains rich HTML content:</p>\r\n        <ul class=\"list-disc list-inside space-y-1 text-sm\">\r\n          <li>Bullet points</li>\r\n          <li>Multiple paragraphs</li>\r\n          <li>Custom styling</li>\r\n        </ul>\r\n        <div class=\"mt-4 p-3 bg-gray-100 rounded-md\">\r\n          <p class=\"text-sm font-medium\">Code Example:</p>\r\n          <code class=\"text-xs\">const example = \"Hello World\";</code>\r\n        </div>\r\n      </div>\r\n    `,\r\n    contentClass: 'p-4'\r\n  },\r\n  {\r\n    value: 'complex-2',\r\n    trigger: 'Interactive Content',\r\n    content: `\r\n      <div class=\"space-y-3\">\r\n        <p>This content includes interactive elements:</p>\r\n        <button class=\"px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600\">\r\n          Click me\r\n        </button>\r\n        <p class=\"text-sm text-gray-500\">Note: In a real app, you'd use proper Angular components for interactivity.</p>\r\n      </div>\r\n    `,\r\n    headerClass: 'bg-yellow-50',\r\n    contentClass: 'bg-yellow-25 p-4'\r\n  }\r\n]"
                },
                {
                    "name": "customIconItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    value: 'icon-1',\r\n    trigger: 'Plus/Minus Icons',\r\n    content: 'This item uses plus and minus icons instead of chevrons.',\r\n    expandIcon: 'Minus',\r\n    collapseIcon: 'Plus'\r\n  },\r\n  {\r\n    value: 'icon-2',\r\n    trigger: 'Caret Icons',\r\n    content: 'This item uses caret icons for expand/collapse.',\r\n    expandIcon: 'CaretUp',\r\n    collapseIcon: 'CaretDown'\r\n  },\r\n  {\r\n    value: 'icon-3',\r\n    trigger: 'Arrow Icons', \r\n    content: 'This item uses arrow icons for a different look.',\r\n    expandIcon: 'ArrowUp',\r\n    collapseIcon: 'ArrowDown'\r\n  }\r\n]"
                },
                {
                    "name": "CustomIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: customIconItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    className: 'w-full',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Accordion items with custom expand/collapse icons.',\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "customStyledItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    value: 'styled-1',\r\n    trigger: 'Custom Header Style',\r\n    content: 'This item has custom header styling with blue colors.',\r\n    headerClass: 'bg-blue-50 text-blue-700 hover:bg-blue-100 border-blue-200',\r\n    contentClass: 'bg-blue-25 text-blue-800',\r\n    iconClass: 'text-blue-500'\r\n  },\r\n  {\r\n    value: 'styled-2',\r\n    trigger: 'Green Themed Item',\r\n    content: 'This item uses green theme colors for a different look.',\r\n    headerClass: 'bg-green-50 text-green-700 hover:bg-green-100',\r\n    contentClass: 'bg-green-25',\r\n    contentStyle: { backgroundColor: '#f0f9f0' }\r\n  },\r\n  {\r\n    value: 'styled-3',\r\n    trigger: 'Purple Accent',\r\n    content: 'Purple themed accordion item with custom styling.',\r\n    headerClass: 'bg-purple-50 text-purple-700 hover:bg-purple-100',\r\n    contentClass: 'bg-purple-25 p-6 rounded-lg'\r\n  }\r\n]"
                },
                {
                    "name": "CustomStyling",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: customStyledItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    className: 'w-full',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Accordion with custom header and content styling per item.',\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: defaultItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    className: 'w-full',\r\n  },\r\n}"
                },
                {
                    "name": "defaultItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    value: 'item-1',\r\n    trigger: 'Is it accessible?',\r\n    content: 'Yes. It adheres to the WAI-ARIA design pattern.',\r\n  },\r\n  {\r\n    value: 'item-2',\r\n    trigger: 'Is it styled?',\r\n    content: 'Yes. It comes with default styles that matches the other components aesthetic.',\r\n  },\r\n  {\r\n    value: 'item-3',\r\n    trigger: 'Is it animated?',\r\n    content: \"Yes. It's animated by default, but you can disable it if you prefer.\",\r\n  },\r\n]"
                },
                {
                    "name": "LeftIconPosition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: defaultItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    iconPosition: 'left',\r\n    className: 'w-full',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Accordion with icons positioned on the left side of the trigger.',\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AccordionComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Accordion',\r\n  component: AccordionComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A collapsible content component that follows the shadcn/ui design system. Supports single and multiple selection modes.',\r\n      },\r\n    },\r\n  },\r\n  argTypes: {\r\n    type: {\r\n      control: 'select',\r\n      options: ['single', 'multiple'],\r\n      description: 'Whether to allow only one or multiple items to be open at once',\r\n    },\r\n    collapsible: {\r\n      control: 'boolean',\r\n      description: 'Whether items can be collapsed when in single mode',\r\n    },\r\n    className: {\r\n      control: 'text',\r\n      description: 'Additional CSS classes',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "MixedConfiguration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      {\r\n        value: 'mixed-1',\r\n        trigger: 'Default Styling',\r\n        content: 'This item uses default styling.'\r\n      },\r\n      {\r\n        value: 'mixed-2', \r\n        trigger: 'Custom Header',\r\n        content: 'This item has custom header styling.',\r\n        headerClass: 'bg-blue-50 text-blue-700'\r\n      },\r\n      {\r\n        value: 'mixed-3',\r\n        trigger: 'Custom Everything',\r\n        content: 'This item has custom styling for everything.',\r\n        headerClass: 'bg-green-50 text-green-700',\r\n        contentClass: 'bg-green-25 p-4',\r\n        expandIcon: 'Minus',\r\n        collapseIcon: 'Plus'\r\n      }\r\n    ],\r\n    type: 'single',\r\n    collapsible: true,\r\n    iconPosition: 'right',\r\n    className: 'w-full',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Accordion with mixed styling configurations per item.',\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Multiple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: defaultItems,\r\n    type: 'multiple',\r\n    className: 'w-full',\r\n  },\r\n}"
                },
                {
                    "name": "productItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    value: 'product-info',\r\n    trigger: 'Product Information',\r\n    content: `\r\n      <p>Our flagship product combines cutting-edge technology with sleek design. Built with premium materials, it offers unparalleled performance and reliability.</p>\r\n      <br>\r\n      <p>Key features include advanced processing capabilities, and an intuitive user interface designed for both beginners and experts.</p>\r\n    `,\r\n  },\r\n  {\r\n    value: 'shipping',\r\n    trigger: 'Shipping Details',\r\n    content: `\r\n      <p>We offer worldwide shipping through trusted courier partners. Standard delivery takes 3-5 business days, while express shipping ensures your order arrives within 1-2 business days.</p>\r\n      <br>\r\n      <p>Free shipping is available for orders over $50. All packages are carefully tracked and insured for your peace of mind.</p>\r\n    `,\r\n  },\r\n  {\r\n    value: 'return-policy',\r\n    trigger: 'Return Policy',\r\n    content: `\r\n      <p>We stand behind our products with a 30-day money-back guarantee. If you're not completely satisfied, you can return any item in its original condition for a full refund.</p>\r\n      <br>\r\n      <p>Returns are easy - just contact our customer service team and they'll provide a prepaid shipping label.</p>\r\n    `,\r\n  },\r\n]"
                },
                {
                    "name": "ShadcnExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: productItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    defaultValue: 'product-info',\r\n    className: 'w-full',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Example that matches the official shadcn/ui accordion demo with product information.',\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "WithDefaultValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: defaultItems,\r\n    type: 'single',\r\n    collapsible: true,\r\n    defaultValue: 'item-1',\r\n    className: 'w-full',\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/dialog.stories.ts": [
                {
                    "name": "ConfirmationDialog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    title: 'Are you absolutely sure?',\r\n    description: 'This action cannot be undone. This will permanently delete your account and remove your data from our servers.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-dialog [open]=\"open\" [title]=\"title\" [description]=\"description\">\r\n        <div slot=\"footer\" class=\"flex justify-end space-x-2\">\r\n          <mi-button variant=\"outline\">Cancel</mi-button>\r\n          <mi-button variant=\"destructive\">Delete account</mi-button>\r\n        </div>\r\n      </mi-dialog>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    title: 'Dialog Title',\r\n    description: 'This is a dialog description that provides more context.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-dialog [open]=\"open\" [title]=\"title\" [description]=\"description\">\r\n        <p>This is the dialog content. You can put any content here.</p>\r\n        <div slot=\"footer\" class=\"flex justify-end space-x-2\">\r\n          <mi-button variant=\"outline\">Cancel</mi-button>\r\n          <mi-button>Confirm</mi-button>\r\n        </div>\r\n      </mi-dialog>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    open: false,\r\n    title: 'Interactive Dialog',\r\n    description: 'Click the button to open the dialog.',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      dialogOpen: false,\r\n      openDialog: function() {\r\n        (this as any)['dialogOpen'] = true;\r\n      },\r\n      closeDialog: function() {\r\n        (this as any)['dialogOpen'] = false;\r\n      }\r\n    },\r\n    template: `\r\n      <div>\r\n        <mi-button (click)=\"openDialog()\">Open Dialog</mi-button>\r\n\r\n        <mi-dialog\r\n          [open]=\"dialogOpen\"\r\n          [title]=\"title\"\r\n          [description]=\"description\"\r\n          (openChange)=\"dialogOpen = $event\"\r\n          (close)=\"closeDialog()\">\r\n          <p>This is an interactive dialog that you can open and close.</p>\r\n          <div slot=\"footer\" class=\"flex justify-end space-x-2\">\r\n            <mi-button variant=\"outline\" (click)=\"closeDialog()\">Cancel</mi-button>\r\n            <mi-button (click)=\"closeDialog()\">OK</mi-button>\r\n          </div>\r\n        </mi-dialog>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "LongContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    title: 'Dialog with Long Content',\r\n    description: 'This dialog contains a lot of content to test scrolling behavior.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-dialog [open]=\"open\" [title]=\"title\" [description]=\"description\">\r\n        <div class=\"space-y-4 max-h-96 overflow-y-auto\">\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n          <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\r\n          <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>\r\n          <p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n          <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.</p>\r\n          <p>Totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.</p>\r\n          <p>Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos.</p>\r\n          <p>Qui ratione voluptatem sequi nesciunt neque porro quisquam est, qui dolorem ipsum quia dolor sit amet.</p>\r\n        </div>\r\n        <div slot=\"footer\" class=\"flex justify-end space-x-2\">\r\n          <mi-button variant=\"outline\">Cancel</mi-button>\r\n          <mi-button>Accept</mi-button>\r\n        </div>\r\n      </mi-dialog>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DialogComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Dialog',\r\n  component: DialogComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    open: {\r\n      control: { type: 'boolean' },\r\n    },\r\n    title: {\r\n      control: { type: 'text' },\r\n    },\r\n    description: {\r\n      control: { type: 'text' },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "WithForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    title: 'Edit Profile',\r\n    description: 'Make changes to your profile here. Click save when you\\'re done.',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-dialog [open]=\"open\" [title]=\"title\" [description]=\"description\">\r\n        <div class=\"grid gap-4\">\r\n          <div class=\"grid grid-cols-4 items-center gap-4\">\r\n            <label for=\"name\" class=\"text-right text-sm font-medium\">Name</label>\r\n            <mi-input id=\"name\" value=\"John Doe\" class=\"col-span-3\" />\r\n          </div>\r\n          <div class=\"grid grid-cols-4 items-center gap-4\">\r\n            <label for=\"email\" class=\"text-right text-sm font-medium\">Email</label>\r\n            <mi-input id=\"email\" value=\"john@example.com\" class=\"col-span-3\" />\r\n          </div>\r\n        </div>\r\n        <div slot=\"footer\" class=\"flex justify-end space-x-2\">\r\n          <mi-button variant=\"outline\">Cancel</mi-button>\r\n          <mi-button>Save changes</mi-button>\r\n        </div>\r\n      </mi-dialog>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithoutDescription",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    title: 'Simple Dialog',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-dialog [open]=\"open\" [title]=\"title\">\r\n        <p>This dialog only has a title and content.</p>\r\n        <div slot=\"footer\" class=\"flex justify-end space-x-2\">\r\n          <mi-button variant=\"outline\">Cancel</mi-button>\r\n          <mi-button>Save</mi-button>\r\n        </div>\r\n      </mi-dialog>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/form.stories.ts": [
                {
                    "name": "ContactForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    fields: contactFormFields,\r\n    submitButtonText: 'Send Message',\r\n    showCancelButton: true,\r\n    cancelButtonText: 'Clear',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onFormSubmit: (data: any) => {\r\n        console.log('Form submitted:', data);\r\n        alert('Form submitted! Check console for data.');\r\n      },\r\n      onFormCancel: () => {\r\n        console.log('Form cancelled');\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-96\">\r\n        <mi-form\r\n          [fields]=\"fields\"\r\n          [initialValues]=\"initialValues\"\r\n          [submitButtonText]=\"submitButtonText\"\r\n          [cancelButtonText]=\"cancelButtonText\"\r\n          [showCancelButton]=\"showCancelButton\"\r\n          [loading]=\"loading\"\r\n          (formSubmit)=\"onFormSubmit($event)\"\r\n          (formCancel)=\"onFormCancel()\">\r\n        </mi-form>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "contactFormFields",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormField[]",
                    "defaultValue": "[\r\n  {\r\n    name: 'firstName',\r\n    label: 'First Name',\r\n    type: 'text',\r\n    placeholder: 'Enter your first name',\r\n    required: true,\r\n  },\r\n  {\r\n    name: 'lastName',\r\n    label: 'Last Name',\r\n    type: 'text',\r\n    placeholder: 'Enter your last name',\r\n    required: true,\r\n  },\r\n  {\r\n    name: 'email',\r\n    label: 'Email',\r\n    type: 'email',\r\n    placeholder: 'Enter your email address',\r\n    required: true,\r\n    description: 'We\\'ll never share your email with anyone else.',\r\n  },\r\n  {\r\n    name: 'message',\r\n    label: 'Message',\r\n    type: 'textarea',\r\n    placeholder: 'Enter your message',\r\n    required: true,\r\n    description: 'Tell us what you\\'re thinking about.',\r\n  },\r\n]"
                },
                {
                    "name": "LoadingState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    fields: contactFormFields,\r\n    submitButtonText: 'Sending...',\r\n    loading: true,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-96\">\r\n        <mi-form\r\n          [fields]=\"fields\"\r\n          [submitButtonText]=\"submitButtonText\"\r\n          [loading]=\"loading\">\r\n        </mi-form>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Form',\r\n  component: FormComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A comprehensive form component with validation and multiple field types.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    fields: {\r\n      control: 'object',\r\n      description: 'Array of form field definitions',\r\n    },\r\n    initialValues: {\r\n      control: 'object',\r\n      description: 'Initial values for the form fields',\r\n    },\r\n    submitButtonText: {\r\n      control: 'text',\r\n      description: 'Text for the submit button',\r\n    },\r\n    cancelButtonText: {\r\n      control: 'text',\r\n      description: 'Text for the cancel button',\r\n    },\r\n    showCancelButton: {\r\n      control: 'boolean',\r\n      description: 'Whether to show the cancel button',\r\n    },\r\n    loading: {\r\n      control: 'boolean',\r\n      description: 'Whether the form is in loading state',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "ProfileForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    fields: profileFormFields,\r\n    submitButtonText: 'Update Profile',\r\n    showCancelButton: true,\r\n    initialValues: {\r\n      username: 'johndoe',\r\n      email: 'john@example.com',\r\n      country: 'us',\r\n      newsletter: true,\r\n      plan: 'pro',\r\n    },\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onFormSubmit: (data: any) => {\r\n        console.log('Profile updated:', data);\r\n        alert('Profile updated! Check console for data.');\r\n      },\r\n      onFormCancel: () => {\r\n        console.log('Update cancelled');\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-96\">\r\n        <mi-form\r\n          [fields]=\"fields\"\r\n          [initialValues]=\"initialValues\"\r\n          [submitButtonText]=\"submitButtonText\"\r\n          [cancelButtonText]=\"cancelButtonText\"\r\n          [showCancelButton]=\"showCancelButton\"\r\n          [loading]=\"loading\"\r\n          (formSubmit)=\"onFormSubmit($event)\"\r\n          (formCancel)=\"onFormCancel()\">\r\n        </mi-form>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "profileFormFields",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormField[]",
                    "defaultValue": "[\r\n  {\r\n    name: 'username',\r\n    label: 'Username',\r\n    type: 'text',\r\n    placeholder: 'Enter username',\r\n    required: true,\r\n    validators: [Validators.minLength(3)],\r\n  },\r\n  {\r\n    name: 'email',\r\n    label: 'Email',\r\n    type: 'email',\r\n    placeholder: 'Enter email address',\r\n    required: true,\r\n  },\r\n  {\r\n    name: 'password',\r\n    label: 'Password',\r\n    type: 'password',\r\n    placeholder: 'Enter password',\r\n    required: true,\r\n    validators: [Validators.minLength(8)],\r\n  },\r\n  {\r\n    name: 'age',\r\n    label: 'Age',\r\n    type: 'number',\r\n    placeholder: 'Enter your age',\r\n  },\r\n  {\r\n    name: 'country',\r\n    label: 'Country',\r\n    type: 'select',\r\n    required: true,\r\n    options: [\r\n      { value: 'us', label: 'United States' },\r\n      { value: 'ca', label: 'Canada' },\r\n      { value: 'uk', label: 'United Kingdom' },\r\n      { value: 'de', label: 'Germany' },\r\n      { value: 'fr', label: 'France' },\r\n    ],\r\n  },\r\n  {\r\n    name: 'newsletter',\r\n    label: 'Subscribe to newsletter',\r\n    type: 'checkbox',\r\n    description: 'Get the latest updates and news.',\r\n  },\r\n  {\r\n    name: 'plan',\r\n    label: 'Subscription Plan',\r\n    type: 'radio',\r\n    required: true,\r\n    options: [\r\n      { value: 'basic', label: 'Basic ($9/month)' },\r\n      { value: 'pro', label: 'Pro ($19/month)' },\r\n      { value: 'enterprise', label: 'Enterprise ($49/month)' },\r\n    ],\r\n  },\r\n]"
                },
                {
                    "name": "simpleFields",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormField[]",
                    "defaultValue": "[\r\n  {\r\n    name: 'name',\r\n    label: 'Name',\r\n    type: 'text',\r\n    placeholder: 'Enter your name',\r\n    required: true,\r\n  },\r\n  {\r\n    name: 'email',\r\n    label: 'Email',\r\n    type: 'email',\r\n    placeholder: 'Enter your email',\r\n    required: true,\r\n  },\r\n]"
                },
                {
                    "name": "SimpleForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    fields: simpleFields,\r\n    submitButtonText: 'Submit',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onFormSubmit: (data: any) => {\r\n        console.log('Simple form submitted:', data);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-80\">\r\n        <mi-form\r\n          [fields]=\"fields\"\r\n          [submitButtonText]=\"submitButtonText\"\r\n          (formSubmit)=\"onFormSubmit($event)\">\r\n        </mi-form>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/badge.stories.ts": [
                {
                    "name": "Counts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <div class=\"flex items-center gap-2\">\r\n          <span class=\"text-sm\">Notifications</span>\r\n          <mi-badge variant=\"destructive\">3</mi-badge>\r\n        </div>\r\n\r\n        <div class=\"flex items-center gap-2\">\r\n          <span class=\"text-sm\">Messages</span>\r\n          <mi-badge variant=\"default\">12</mi-badge>\r\n        </div>\r\n\r\n        <div class=\"flex items-center gap-2\">\r\n          <span class=\"text-sm\">Cart Items</span>\r\n          <mi-badge variant=\"secondary\">5</mi-badge>\r\n        </div>\r\n\r\n        <div class=\"flex items-center gap-2\">\r\n          <span class=\"text-sm\">New Updates</span>\r\n          <mi-badge variant=\"success\">2</mi-badge>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-badge [variant]=\"variant\" [size]=\"size\" [class]=\"class\">\r\n        Badge\r\n      </mi-badge>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "InContext",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\" style=\"max-width: 400px;\">\r\n        <div class=\"border rounded-lg p-4\">\r\n          <div class=\"flex items-center justify-between mb-2\">\r\n            <h3 class=\"font-semibold\">Project Alpha</h3>\r\n            <mi-badge variant=\"success\">Active</mi-badge>\r\n          </div>\r\n          <p class=\"text-sm text-muted-foreground mb-3\">A modern web application built with Angular and Tailwind CSS.</p>\r\n          <div class=\"flex gap-2\">\r\n            <mi-badge variant=\"secondary\" size=\"sm\">Angular</mi-badge>\r\n            <mi-badge variant=\"secondary\" size=\"sm\">TypeScript</mi-badge>\r\n            <mi-badge variant=\"secondary\" size=\"sm\">Tailwind</mi-badge>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"border rounded-lg p-4\">\r\n          <div class=\"flex items-center justify-between mb-2\">\r\n            <h3 class=\"font-semibold\">Project Beta</h3>\r\n            <mi-badge variant=\"warning\">In Review</mi-badge>\r\n          </div>\r\n          <p class=\"text-sm text-muted-foreground mb-3\">Mobile-first design system with comprehensive component library.</p>\r\n          <div class=\"flex gap-2\">\r\n            <mi-badge variant=\"secondary\" size=\"sm\">React</mi-badge>\r\n            <mi-badge variant=\"secondary\" size=\"sm\">Storybook</mi-badge>\r\n            <mi-badge variant=\"secondary\" size=\"sm\">Jest</mi-badge>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BadgeComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Badge',\r\n  component: BadgeComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A badge component for displaying status, counts, or labels.',\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        BadgeComponent,\r\n        IconComponent,\r\n      ],\r\n      providers: [IconService],\r\n    }),\r\n    applicationConfig({\r\n      providers: [IconService],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'secondary', 'destructive', 'outline', 'success', 'warning'],\r\n      description: 'The visual variant of the badge',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'default', 'lg'],\r\n      description: 'The size of the badge',\r\n    },\r\n    class: {\r\n      control: 'text',\r\n      description: 'Additional CSS classes',\r\n    },\r\n  },\r\n  args: {\r\n    variant: 'default',\r\n    size: 'default',\r\n  },\r\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex flex-wrap items-center gap-2\">\r\n        <mi-badge size=\"sm\">Small</mi-badge>\r\n        <mi-badge size=\"default\">Default</mi-badge>\r\n        <mi-badge size=\"lg\">Large</mi-badge>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "StatusIndicators",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <div class=\"space-y-2\">\r\n          <h4 class=\"text-sm font-medium\">Order Status</h4>\r\n          <div class=\"flex gap-2\">\r\n            <mi-badge variant=\"warning\">Pending</mi-badge>\r\n            <mi-badge variant=\"default\">Processing</mi-badge>\r\n            <mi-badge variant=\"success\">Shipped</mi-badge>\r\n            <mi-badge variant=\"secondary\">Delivered</mi-badge>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"space-y-2\">\r\n          <h4 class=\"text-sm font-medium\">User Roles</h4>\r\n          <div class=\"flex gap-2\">\r\n            <mi-badge variant=\"destructive\">Admin</mi-badge>\r\n            <mi-badge variant=\"default\">Moderator</mi-badge>\r\n            <mi-badge variant=\"secondary\">User</mi-badge>\r\n            <mi-badge variant=\"outline\">Guest</mi-badge>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"space-y-2\">\r\n          <h4 class=\"text-sm font-medium\">Priority Levels</h4>\r\n          <div class=\"flex gap-2\">\r\n            <mi-badge variant=\"destructive\">Critical</mi-badge>\r\n            <mi-badge variant=\"warning\">High</mi-badge>\r\n            <mi-badge variant=\"default\">Medium</mi-badge>\r\n            <mi-badge variant=\"secondary\">Low</mi-badge>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Variants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex flex-wrap gap-2\">\r\n        <mi-badge variant=\"default\">Default</mi-badge>\r\n        <mi-badge variant=\"secondary\">Secondary</mi-badge>\r\n        <mi-badge variant=\"destructive\">Destructive</mi-badge>\r\n        <mi-badge variant=\"outline\">Outline</mi-badge>\r\n        <mi-badge variant=\"success\">Success</mi-badge>\r\n        <mi-badge variant=\"warning\">Warning</mi-badge>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex flex-wrap gap-2\">\r\n        <mi-badge variant=\"default\" class=\"flex items-center gap-1\">\r\n          <mi-icon name=\"Check\" size=\"12\"></mi-icon>\r\n          Verified\r\n        </mi-badge>\r\n        <mi-badge variant=\"secondary\" class=\"flex items-center gap-1\">\r\n          <mi-icon name=\"Star\" size=\"12\"></mi-icon>\r\n          Featured\r\n        </mi-badge>\r\n        <mi-badge variant=\"destructive\" class=\"flex items-center gap-1\">\r\n          <mi-icon name=\"X\" size=\"12\"></mi-icon>\r\n          Error\r\n        </mi-badge>\r\n        <mi-badge variant=\"success\" class=\"flex items-center gap-1\">\r\n          <mi-icon name=\"CheckCircle\" size=\"12\"></mi-icon>\r\n          Success\r\n        </mi-badge>\r\n        <mi-badge variant=\"warning\" class=\"flex items-center gap-1\">\r\n          <mi-icon name=\"AlertTriangle\" size=\"12\"></mi-icon>\r\n          Warning\r\n        </mi-badge>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/alert.stories.ts": [
                {
                    "name": "CustomContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: 'Bell',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-alert [variant]=\"variant\" [icon]=\"icon\" [title]=\"title\" [description]=\"description\">\r\n        <p>This alert uses custom content instead of the description prop.</p>\r\n        <ul class=\"mt-2 list-disc list-inside\">\r\n          <li>Custom HTML content</li>\r\n          <li>Lists and other elements</li>\r\n          <li>More flexibility</li>\r\n        </ul>\r\n      </mi-alert>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: 'Info',\r\n    title: 'Info',\r\n    description: 'This is a default alert with some information.',\r\n  },\r\n}"
                },
                {
                    "name": "DescriptionOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: 'Info',\r\n    description: 'This alert only has a description with no title.',\r\n  },\r\n}"
                },
                {
                    "name": "Destructive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'destructive',\r\n    icon: 'AlertTriangle',\r\n    title: 'Error',\r\n    description: 'This is a destructive alert indicating an error.',\r\n  },\r\n}"
                },
                {
                    "name": "DifferentIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <mi-alert icon=\"CheckCircle\" title=\"Success\"\r\n                  description=\"Operation completed successfully.\">\r\n        </mi-alert>\r\n\r\n        <mi-alert icon=\"Info\" title=\"Information\"\r\n                  description=\"Here's some helpful information.\">\r\n        </mi-alert>\r\n\r\n        <mi-alert icon=\"AlertCircle\" title=\"Warning\"\r\n                  description=\"Please pay attention to this warning.\">\r\n        </mi-alert>\r\n\r\n        <mi-alert variant=\"destructive\" icon=\"XCircle\" title=\"Error\"\r\n                  description=\"Something went wrong.\">\r\n        </mi-alert>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AlertComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Alert',\r\n  component: AlertComponent,\r\n  parameters: {\r\n    layout: 'padded',\r\n  },\r\n  argTypes: {\r\n    variant: {\r\n      control: { type: 'radio' },\r\n      options: ['default', 'destructive'],\r\n    },\r\n    icon: {\r\n      control: { type: 'text' },\r\n    },\r\n    title: {\r\n      control: { type: 'text' },\r\n    },\r\n    description: {\r\n      control: { type: 'text' },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "TitleOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: 'CheckCircle',\r\n    title: 'Success',\r\n  },\r\n}"
                },
                {
                    "name": "Variants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <mi-alert variant=\"default\" icon=\"Info\" title=\"Default Alert\"\r\n                  description=\"This is a default alert for general information.\">\r\n        </mi-alert>\r\n\r\n        <mi-alert variant=\"destructive\" icon=\"AlertTriangle\" title=\"Destructive Alert\"\r\n                  description=\"This is a destructive alert for errors or warnings.\">\r\n        </mi-alert>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithoutIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    title: 'Simple Alert',\r\n    description: 'This alert has no icon.',\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/icon.stories.ts": [
                {
                    "name": "CustomSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'Heart',\r\n    size: 32,\r\n    color: '#ef4444',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Icons can be customized with different sizes and colors.',\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'Check',\r\n  },\r\n}"
                },
                {
                    "name": "IconSizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex items-center gap-4\">\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Home\" [size]=\"16\"></mi-icon>\r\n          <span class=\"text-xs\">16px</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Home\" [size]=\"20\"></mi-icon>\r\n          <span class=\"text-xs\">20px</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Home\" [size]=\"24\"></mi-icon>\r\n          <span class=\"text-xs\">24px</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Home\" [size]=\"32\"></mi-icon>\r\n          <span class=\"text-xs\">32px</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Home\" [size]=\"48\"></mi-icon>\r\n          <span class=\"text-xs\">48px</span>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Different icon sizes available.',\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "IconTest",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"p-4 space-y-4\">\r\n        <h2 class=\"text-lg font-bold\">Icon Test</h2>\r\n        <div class=\"space-y-2\">\r\n          <div class=\"flex items-center gap-2\">\r\n            <span>Check:</span>\r\n            <mi-icon name=\"Check\" [size]=\"24\"></mi-icon>\r\n          </div>\r\n          <div class=\"flex items-center gap-2\">\r\n            <span>Heart:</span>\r\n            <mi-icon name=\"Heart\" [size]=\"24\" class=\"text-red-500\"></mi-icon>\r\n          </div>\r\n          <div class=\"flex items-center gap-2\">\r\n            <span>ArrowRight:</span>\r\n            <mi-icon name=\"ArrowRight\" [size]=\"24\"></mi-icon>\r\n          </div>\r\n          <div class=\"flex items-center gap-2\">\r\n            <span>Loader2:</span>\r\n            <mi-icon name=\"Loader2\" [size]=\"24\" class=\"animate-spin\"></mi-icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Test component to verify icons are rendering correctly.',\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<IconComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Icon',\r\n  component: IconComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: `\r\nA comprehensive icon component that provides access to all Lucide icons with TypeScript autocomplete support.\r\n\r\n## Features\r\n- **Full Lucide Icon Library**: Access to 1000+ icons\r\n- **TypeScript Autocomplete**: Get intellisense when typing icon names\r\n- **Customizable**: Size, color, stroke width, and CSS classes\r\n- **Performance**: Built-in caching for SVG generation\r\n- **Type Safe**: Full TypeScript support with \\`LucideIconName\\` type\r\n\r\n## Usage\r\n\\`\\`\\`html\r\n<mi-icon name=\"Check\" [size]=\"24\" color=\"green\" [strokeWidth]=\"2\"></mi-icon>\r\n<mi-icon name=\"Heart\" class=\"text-red-500\"></mi-icon>\r\n<mi-icon name=\"Search\" [size]=\"16\"></mi-icon>\r\n\\`\\`\\`\r\n\r\nTry typing in the \"name\" control below to see autocomplete in action!\r\n        `,\r\n      },\r\n    },\r\n  },\r\n  argTypes: {\r\n    name: {\r\n      control: { type: 'text' },\r\n      description: 'Icon name from Lucide icons (with TypeScript autocomplete)',\r\n      table: {\r\n        type: { summary: 'LucideIconName' },\r\n        defaultValue: { summary: 'Check' },\r\n      },\r\n    },\r\n    size: {\r\n      control: { type: 'number', min: 12, max: 64, step: 1 },\r\n      description: 'Icon size in pixels',\r\n      table: {\r\n        type: { summary: 'number' },\r\n        defaultValue: { summary: '24' },\r\n      },\r\n    },\r\n    color: {\r\n      control: { type: 'color' },\r\n      description: 'Icon stroke color',\r\n      table: {\r\n        type: { summary: 'string' },\r\n        defaultValue: { summary: 'currentColor' },\r\n      },\r\n    },\r\n    strokeWidth: {\r\n      control: { type: 'number', min: 0.5, max: 4, step: 0.5 },\r\n      description: 'Icon stroke width',\r\n      table: {\r\n        type: { summary: 'number' },\r\n        defaultValue: { summary: '2' },\r\n      },\r\n    },\r\n    class: {\r\n      control: { type: 'text' },\r\n      description: 'Additional CSS classes',\r\n      table: {\r\n        type: { summary: 'string' },\r\n        defaultValue: { summary: '' },\r\n      },\r\n    },\r\n  },\r\n  args: {\r\n    name: 'Check',\r\n    size: 24,\r\n    color: 'currentColor',\r\n    strokeWidth: 2,\r\n    class: '',\r\n  },\r\n}"
                },
                {
                    "name": "PopularIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"flex flex-wrap gap-4 items-center\">\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Check\" [size]=\"24\" class=\"text-green-600\"></mi-icon>\r\n          <span class=\"text-xs\">Check</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"X\" [size]=\"24\" class=\"text-red-600\"></mi-icon>\r\n          <span class=\"text-xs\">X</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Heart\" [size]=\"24\" class=\"text-pink-600\"></mi-icon>\r\n          <span class=\"text-xs\">Heart</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Star\" [size]=\"24\" class=\"text-yellow-600\"></mi-icon>\r\n          <span class=\"text-xs\">Star</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Search\" [size]=\"24\" class=\"text-blue-600\"></mi-icon>\r\n          <span class=\"text-xs\">Search</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Settings\" [size]=\"24\" class=\"text-gray-600\"></mi-icon>\r\n          <span class=\"text-xs\">Settings</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"User\" [size]=\"24\" class=\"text-indigo-600\"></mi-icon>\r\n          <span class=\"text-xs\">User</span>\r\n        </div>\r\n        <div class=\"flex flex-col items-center gap-2\">\r\n          <mi-icon name=\"Mail\" [size]=\"24\" class=\"text-purple-600\"></mi-icon>\r\n          <span class=\"text-xs\">Mail</span>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'A showcase of popular icons with different colors.',\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "WithStrokeWidth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'Star',\r\n    size: 28,\r\n    strokeWidth: 3,\r\n    color: '#f59e0b',\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        story: 'Adjust stroke width for different visual weights.',\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/breadcrumb.stories.ts": [
                {
                    "name": "DeepNavigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      { label: 'Dashboard', href: '#' },\r\n      { label: 'Projects', href: '#' },\r\n      { label: 'Web Development', href: '#' },\r\n      { label: 'Frontend', href: '#' },\r\n      { label: 'Angular', href: '#' },\r\n      { label: 'Components', href: '#' },\r\n      { label: 'UI Library' }\r\n    ]\r\n  }\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Breadcrumb>",
                    "defaultValue": "{\r\n  title: 'Components/Breadcrumb',\r\n  component: Breadcrumb,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [Breadcrumb],\r\n    }),\r\n  ],\r\n  args: {\r\n    items: [\r\n      { label: 'Home', href: '#' },\r\n      { label: 'Components', href: '#' },\r\n      { label: 'Breadcrumb' }\r\n    ]\r\n  },\r\n  argTypes: {\r\n    items: {\r\n      control: 'object',\r\n      description: 'Array of breadcrumb items'\r\n    }\r\n  },\r\n}"
                },
                {
                    "name": "SimpleNavigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      { label: 'Home', href: '/' },\r\n      { label: 'Library', href: '/library' },\r\n      { label: 'Data', href: '/library/data' },\r\n      { label: 'Current Page' }\r\n    ]\r\n  }\r\n}"
                },
                {
                    "name": "SingleItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      { label: 'Dashboard' }\r\n    ]\r\n  }\r\n}"
                },
                {
                    "name": "WithDisabledItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      { label: 'Home', href: '#' },\r\n      { label: 'Disabled Item', disabled: true },\r\n      { label: 'Components', href: '#' },\r\n      { label: 'Current Page' }\r\n    ]\r\n  }\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/alert-dialog.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n  },\r\n}"
                },
                {
                    "name": "Destructive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    destructive: true,\r\n    title: 'Delete Account',\r\n    description: 'This action cannot be undone. This will permanently delete your account and remove your data from our servers.',\r\n    confirmText: 'Delete Account',\r\n  },\r\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      dialogOpen: false,\r\n      showDialog() {\r\n        this['dialogOpen'] = true;\r\n      },\r\n      hideDialog() {\r\n        this['dialogOpen'] = false;\r\n      },\r\n      onConfirm() {\r\n        console.log('Confirmed!');\r\n        this['hideDialog']();\r\n      },\r\n      onCancel() {\r\n        console.log('Cancelled!');\r\n        this['hideDialog']();\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"p-4\">\r\n        <mi-button (click)=\"showDialog()\">Show Alert Dialog</mi-button>\r\n\r\n        <mi-alert-dialog\r\n          [open]=\"dialogOpen\"\r\n          title=\"Delete Project\"\r\n          description=\"Are you sure you want to delete this project? This action cannot be undone.\"\r\n          confirmText=\"Delete\"\r\n          cancelText=\"Cancel\"\r\n          [destructive]=\"true\"\r\n          (confirm)=\"onConfirm()\"\r\n          (cancel)=\"onCancel()\"\r\n          (openChange)=\"dialogOpen = $event\">\r\n        </mi-alert-dialog>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n    loading: true,\r\n    title: 'Processing Request',\r\n    description: 'Please wait while we process your request.',\r\n    confirmText: 'Processing...',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AlertDialog>",
                    "defaultValue": "{\r\n  title: 'Components/Alert Dialog',\r\n  component: AlertDialog,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [AlertDialog],\r\n    }),\r\n  ],\r\n  args: {\r\n    open: false,\r\n    title: 'Are you absolutely sure?',\r\n    description: 'This action cannot be undone. This will permanently delete your account and remove your data from our servers.',\r\n    confirmText: 'Continue',\r\n    cancelText: 'Cancel',\r\n    destructive: false,\r\n    loading: false,\r\n  },\r\n  argTypes: {\r\n    open: {\r\n      control: 'boolean',\r\n      description: 'Whether the dialog is open'\r\n    },\r\n    title: {\r\n      control: 'text',\r\n      description: 'Dialog title'\r\n    },\r\n    description: {\r\n      control: 'text',\r\n      description: 'Dialog description text'\r\n    },\r\n    confirmText: {\r\n      control: 'text',\r\n      description: 'Text for the confirm button'\r\n    },\r\n    cancelText: {\r\n      control: 'text',\r\n      description: 'Text for the cancel button'\r\n    },\r\n    destructive: {\r\n      control: 'boolean',\r\n      description: 'Whether to show destructive styling on confirm button'\r\n    },\r\n    loading: {\r\n      control: 'boolean',\r\n      description: 'Whether to show loading state'\r\n    }\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/aspect-ratio.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    ratio: 'video',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-aspect-ratio [ratio]=\"ratio\" class=\"bg-muted rounded-md overflow-hidden\">\r\n        <img\r\n          src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\r\n          alt=\"Photo by Drew Beamer\"\r\n          class=\"h-full w-full object-cover\"\r\n        />\r\n      </mi-aspect-ratio>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AspectRatio>",
                    "defaultValue": "{\r\n  title: 'Components/AspectRatio',\r\n  component: AspectRatio,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    ratio: {\r\n      control: { type: 'select' },\r\n      options: ['square', 'video', '4/3', '3/2', '16/9', '21/9'],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Portrait",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    ratio: '4/3',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-aspect-ratio [ratio]=\"ratio\" class=\"bg-muted rounded-md overflow-hidden\">\r\n        <img\r\n          src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\r\n          alt=\"Photo by Drew Beamer\"\r\n          class=\"h-full w-full object-cover\"\r\n        />\r\n      </mi-aspect-ratio>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Square",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    ratio: 'square',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-aspect-ratio [ratio]=\"ratio\" class=\"bg-muted rounded-md overflow-hidden\">\r\n        <img\r\n          src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\r\n          alt=\"Photo by Drew Beamer\"\r\n          class=\"h-full w-full object-cover\"\r\n        />\r\n      </mi-aspect-ratio>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/calendar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    disabled: true,\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CalendarComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Calendar',\r\n  component: CalendarComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A date field component that allows users to enter and edit date.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    selected: {\r\n      control: 'date',\r\n      description: 'The selected date',\r\n    },\r\n    minDate: {\r\n      control: 'date',\r\n      description: 'The minimum selectable date',\r\n    },\r\n    maxDate: {\r\n      control: 'date',\r\n      description: 'The maximum selectable date',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the calendar is disabled',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "WithDateRange",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    minDate: new Date(2024, 0, 1),\r\n    maxDate: new Date(2024, 11, 31),\r\n  },\r\n}"
                },
                {
                    "name": "WithSelectedDate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    selected: new Date(),\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-card [variant]=\"variant\" [class]=\"class\" style=\"width: 350px;\">\r\n        <mi-card-header>\r\n          <mi-card-title>Card Title</mi-card-title>\r\n          <mi-card-description>Card description goes here. This provides context about the card's content.</mi-card-description>\r\n        </mi-card-header>\r\n        <mi-card-content>\r\n          <p>This is the main content area of the card. You can put any content here, including text, images, forms, or other components.</p>\r\n        </mi-card-content>\r\n        <mi-card-footer>\r\n          <mi-button variant=\"default\">Action</mi-button>\r\n          <mi-button variant=\"outline\" class=\"ml-2\">Cancel</mi-button>\r\n        </mi-card-footer>\r\n      </mi-card>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Elevated",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'elevated',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-card [variant]=\"variant\" [class]=\"class\" style=\"width: 350px;\">\r\n        <mi-card-header>\r\n          <mi-card-title>Elevated Card</mi-card-title>\r\n          <mi-card-description>This card has more prominent shadow for emphasis.</mi-card-description>\r\n        </mi-card-header>\r\n        <mi-card-content>\r\n          <p>Elevated cards are great for highlighting important content or creating visual hierarchy.</p>\r\n        </mi-card-content>\r\n      </mi-card>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Grid",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\" style=\"width: 900px;\">\r\n        <mi-card variant=\"default\">\r\n          <mi-card-header>\r\n            <mi-card-title>Product A</mi-card-title>\r\n            <mi-card-description>High-quality product with excellent features.</mi-card-description>\r\n          </mi-card-header>\r\n          <mi-card-content>\r\n            <p class=\"text-2xl font-bold\">$99</p>\r\n          </mi-card-content>\r\n          <mi-card-footer>\r\n            <mi-button variant=\"default\" class=\"w-full\">Choose Plan</mi-button>\r\n          </mi-card-footer>\r\n        </mi-card>\r\n\r\n        <mi-card variant=\"elevated\">\r\n          <mi-card-header>\r\n            <mi-card-title>Product B</mi-card-title>\r\n            <mi-card-description>Premium product with advanced capabilities.</mi-card-description>\r\n          </mi-card-header>\r\n          <mi-card-content>\r\n            <p class=\"text-2xl font-bold\">$199</p>\r\n          </mi-card-content>\r\n          <mi-card-footer>\r\n            <mi-button variant=\"default\" class=\"w-full\">Choose Plan</mi-button>\r\n          </mi-card-footer>\r\n        </mi-card>\r\n\r\n        <mi-card variant=\"outline\">\r\n          <mi-card-header>\r\n            <mi-card-title>Product C</mi-card-title>\r\n            <mi-card-description>Enterprise solution for large organizations.</mi-card-description>\r\n          </mi-card-header>\r\n          <mi-card-content>\r\n            <p class=\"text-2xl font-bold\">$299</p>\r\n          </mi-card-content>\r\n          <mi-card-footer>\r\n            <mi-button variant=\"default\" class=\"w-full\">Choose Plan</mi-button>\r\n          </mi-card-footer>\r\n        </mi-card>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CardComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Card',\r\n  component: CardComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A card component for displaying content in a contained, elevated surface.',\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        CardComponent,\r\n        CardHeaderComponent,\r\n        CardTitleComponent,\r\n        CardDescriptionComponent,\r\n        CardContentComponent,\r\n        CardFooterComponent,\r\n        Button,\r\n        IconComponent,\r\n      ],\r\n      providers: [IconService],\r\n    }),\r\n    applicationConfig({\r\n      providers: [IconService],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'elevated', 'outline'],\r\n      description: 'The visual variant of the card',\r\n    },\r\n    class: {\r\n      control: 'text',\r\n      description: 'Additional CSS classes',\r\n    },\r\n  },\r\n  args: {\r\n    variant: 'default',\r\n  },\r\n}"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'outline',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-card [variant]=\"variant\" [class]=\"class\" style=\"width: 350px;\">\r\n        <mi-card-header>\r\n          <mi-card-title>Outline Card</mi-card-title>\r\n          <mi-card-description>This card has a prominent border instead of shadow.</mi-card-description>\r\n        </mi-card-header>\r\n        <mi-card-content>\r\n          <p>Outline cards work well for subtle emphasis without using shadows.</p>\r\n        </mi-card-content>\r\n      </mi-card>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "SimpleContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-card [variant]=\"variant\" [class]=\"class\" style=\"width: 300px;\">\r\n        <mi-card-content>\r\n          <div class=\"text-center\">\r\n            <mi-icon name=\"check-circle\" size=\"48\" class=\"mx-auto mb-4 text-green-500\"></mi-icon>\r\n            <h3 class=\"text-lg font-semibold mb-2\">Success!</h3>\r\n            <p class=\"text-sm text-muted-foreground\">Your action was completed successfully.</p>\r\n          </div>\r\n        </mi-card-content>\r\n      </mi-card>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-card [variant]=\"variant\" [class]=\"class\" style=\"width: 350px;\">\r\n        <mi-card-header>\r\n          <div class=\"flex items-center space-x-2\">\r\n            <mi-icon name=\"star\" size=\"20\"></mi-icon>\r\n            <mi-card-title>Featured Item</mi-card-title>\r\n          </div>\r\n          <mi-card-description>This card includes an icon in the header for visual interest.</mi-card-description>\r\n        </mi-card-header>\r\n        <mi-card-content>\r\n          <p>Icons can help categorize content and make cards more visually appealing.</p>\r\n        </mi-card-content>\r\n        <mi-card-footer>\r\n          <mi-button variant=\"default\">\r\n            <mi-icon name=\"arrow-right\" size=\"16\" class=\"mr-2\"></mi-icon>\r\n            Learn More\r\n          </mi-button>\r\n        </mi-card-footer>\r\n      </mi-card>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/checkbox.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-checkbox\r\n        [size]=\"size\"\r\n        [checked]=\"checked\"\r\n        [indeterminate]=\"indeterminate\"\r\n        [disabled]=\"disabled\"\r\n        [class]=\"class\">\r\n        Accept terms and conditions\r\n      </mi-checkbox>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "FormExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-6\" style=\"max-width: 400px;\">\r\n        <h3 class=\"text-lg font-semibold\">Privacy Settings</h3>\r\n        <div class=\"space-y-4\">\r\n          <div class=\"space-y-3\">\r\n            <h4 class=\"text-sm font-medium\">Email Notifications</h4>\r\n            <div class=\"space-y-2 ml-4\">\r\n              <mi-checkbox [checked]=\"true\">Security alerts</mi-checkbox>\r\n              <mi-checkbox>Marketing emails</mi-checkbox>\r\n              <mi-checkbox [checked]=\"true\">Product updates</mi-checkbox>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"space-y-3\">\r\n            <h4 class=\"text-sm font-medium\">Data Usage</h4>\r\n            <div class=\"space-y-2 ml-4\">\r\n              <mi-checkbox [checked]=\"true\">Analytics tracking</mi-checkbox>\r\n              <mi-checkbox>Performance monitoring</mi-checkbox>\r\n              <mi-checkbox [disabled]=\"true\">Required cookies (cannot be disabled)</mi-checkbox>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pt-4 border-t\">\r\n            <mi-checkbox [indeterminate]=\"true\">\r\n              <span class=\"font-medium\">Select all preferences</span>\r\n            </mi-checkbox>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "ListExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\" style=\"max-width: 300px;\">\r\n        <h3 class=\"text-lg font-semibold\">Todo List</h3>\r\n        <div class=\"space-y-2\">\r\n          <mi-checkbox [checked]=\"true\" class=\"line-through opacity-60\">\r\n            Set up project repository\r\n          </mi-checkbox>\r\n          <mi-checkbox [checked]=\"true\" class=\"line-through opacity-60\">\r\n            Create initial components\r\n          </mi-checkbox>\r\n          <mi-checkbox>\r\n            Add form validation\r\n          </mi-checkbox>\r\n          <mi-checkbox>\r\n            Write comprehensive tests\r\n          </mi-checkbox>\r\n          <mi-checkbox>\r\n            Deploy to production\r\n          </mi-checkbox>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Checkbox',\r\n  component: CheckboxComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A checkbox component for selecting options.',\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CheckboxComponent,\r\n        IconComponent,\r\n      ],\r\n      providers: [IconService],\r\n    }),\r\n    applicationConfig({\r\n      providers: [IconService],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'default', 'lg'],\r\n      description: 'The size of the checkbox',\r\n    },\r\n    checked: {\r\n      control: 'boolean',\r\n      description: 'Whether the checkbox is checked',\r\n    },\r\n    indeterminate: {\r\n      control: 'boolean',\r\n      description: 'Whether the checkbox is in indeterminate state',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the checkbox is disabled',\r\n    },\r\n    class: {\r\n      control: 'text',\r\n      description: 'Additional CSS classes',\r\n    },\r\n  },\r\n  args: {\r\n    size: 'default',\r\n    checked: false,\r\n    indeterminate: false,\r\n    disabled: false,\r\n  },\r\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <mi-checkbox size=\"sm\">Small checkbox</mi-checkbox>\r\n        <mi-checkbox size=\"default\">Default checkbox</mi-checkbox>\r\n        <mi-checkbox size=\"lg\">Large checkbox</mi-checkbox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "States",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <mi-checkbox [checked]=\"false\">Unchecked</mi-checkbox>\r\n        <mi-checkbox [checked]=\"true\">Checked</mi-checkbox>\r\n        <mi-checkbox [indeterminate]=\"true\">Indeterminate</mi-checkbox>\r\n        <mi-checkbox [disabled]=\"true\">Disabled unchecked</mi-checkbox>\r\n        <mi-checkbox [checked]=\"true\" [disabled]=\"true\">Disabled checked</mi-checkbox>\r\n        <mi-checkbox [indeterminate]=\"true\" [disabled]=\"true\">Disabled indeterminate</mi-checkbox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithLabels",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <mi-checkbox>\r\n          I agree to the terms and conditions\r\n        </mi-checkbox>\r\n        <mi-checkbox>\r\n          Subscribe to newsletter for updates and promotions\r\n        </mi-checkbox>\r\n        <mi-checkbox [checked]=\"true\">\r\n          Remember my preferences\r\n        </mi-checkbox>\r\n        <mi-checkbox [indeterminate]=\"true\">\r\n          Enable notifications (some selected)\r\n        </mi-checkbox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/collapsible.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    open: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      isOpen: args.open,\r\n      onToggle: () => {\r\n        args.open = !args.open;\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"w-[350px] space-y-2\">\r\n        <h4 class=\"text-sm font-medium\">\r\n          @peduarte starred 3 repositories\r\n        </h4>\r\n        <mi-collapsible [open]=\"isOpen\" (openChange)=\"onToggle()\">\r\n          <mi-collapsible-trigger [open]=\"isOpen\" [disabled]=\"disabled\" (trigger)=\"onToggle()\">\r\n            Can I use this in my project?\r\n          </mi-collapsible-trigger>\r\n          <mi-collapsible-content [open]=\"isOpen\">\r\n            <div class=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n              @radix-ui/react-collapsible\r\n            </div>\r\n            <div class=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n              @radix-ui/react-accordion\r\n            </div>\r\n            <div class=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n              @radix-ui/react-dropdown-menu\r\n            </div>\r\n          </mi-collapsible-content>\r\n        </mi-collapsible>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Collapsible>",
                    "defaultValue": "{\r\n  title: 'Components/Collapsible',\r\n  component: Collapsible,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    open: {\r\n      control: { type: 'boolean' },\r\n    },\r\n    disabled: {\r\n      control: { type: 'boolean' },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Open",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    open: true,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      isOpen: args.open,\r\n      onToggle: () => {\r\n        args.open = !args.open;\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"w-[350px] space-y-2\">\r\n        <h4 class=\"text-sm font-medium\">\r\n          @peduarte starred 3 repositories\r\n        </h4>\r\n        <mi-collapsible [open]=\"isOpen\" (openChange)=\"onToggle()\">\r\n          <mi-collapsible-trigger [open]=\"isOpen\" [disabled]=\"disabled\" (trigger)=\"onToggle()\">\r\n            Can I use this in my project?\r\n          </mi-collapsible-trigger>\r\n          <mi-collapsible-content [open]=\"isOpen\">\r\n            <div class=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n              @radix-ui/react-collapsible\r\n            </div>\r\n            <div class=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n              @radix-ui/react-accordion\r\n            </div>\r\n            <div class=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n              @radix-ui/react-dropdown-menu\r\n            </div>\r\n          </mi-collapsible-content>\r\n        </mi-collapsible>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/combobox.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: defaultOptions,\r\n    placeholder: 'Select framework...',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <mi-combobox\r\n          [options]=\"options\"\r\n          [placeholder]=\"placeholder\"\r\n          [disabled]=\"disabled\"\r\n          [searchable]=\"searchable\"\r\n          [value]=\"value\">\r\n        </mi-combobox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "defaultOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComboboxOption[]",
                    "defaultValue": "[\r\n  { value: 'next.js', label: 'Next.js' },\r\n  { value: 'sveltekit', label: 'SvelteKit' },\r\n  { value: 'nuxt.js', label: 'Nuxt.js' },\r\n  { value: 'remix', label: 'Remix' },\r\n  { value: 'astro', label: 'Astro' },\r\n  { value: 'wordpress', label: 'WordPress', disabled: true },\r\n]"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: defaultOptions,\r\n    placeholder: 'Select framework...',\r\n    disabled: true,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <mi-combobox\r\n          [options]=\"options\"\r\n          [placeholder]=\"placeholder\"\r\n          [disabled]=\"disabled\">\r\n        </mi-combobox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ComboboxComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Combobox',\r\n  component: ComboboxComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'Combines a text input with a listbox, allowing users to filter a list of options to items matching a query.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    options: {\r\n      control: 'object',\r\n      description: 'Array of options to choose from',\r\n    },\r\n    placeholder: {\r\n      control: 'text',\r\n      description: 'Placeholder text for the input',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the combobox is disabled',\r\n    },\r\n    searchable: {\r\n      control: 'boolean',\r\n      description: 'Whether the options can be searched/filtered',\r\n    },\r\n    value: {\r\n      control: 'text',\r\n      description: 'The selected value',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "NotSearchable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: defaultOptions,\r\n    placeholder: 'Select framework...',\r\n    searchable: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <mi-combobox\r\n          [options]=\"options\"\r\n          [placeholder]=\"placeholder\"\r\n          [searchable]=\"searchable\">\r\n        </mi-combobox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithPreselectedValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: defaultOptions,\r\n    placeholder: 'Select framework...',\r\n    value: 'next.js',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <mi-combobox\r\n          [options]=\"options\"\r\n          [placeholder]=\"placeholder\"\r\n          [value]=\"value\">\r\n        </mi-combobox>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/context-menu.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/context-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    menuItems: defaultMenuItems,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onItemSelected: (item: ContextMenuItem) => {\r\n        console.log('Selected:', item.label);\r\n      }\r\n    },\r\n    template: `\r\n      <mi-context-menu [menuItems]=\"menuItems\" (itemSelected)=\"onItemSelected($event)\">\r\n        <div class=\"flex h-[150px] w-[300px] items-center justify-center rounded-md border border-dashed text-sm\">\r\n          Right click here\r\n        </div>\r\n      </mi-context-menu>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "defaultMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/context-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ContextMenuItem[]",
                    "defaultValue": "[\r\n  { label: 'Back', shortcut: '⌘[' },\r\n  { label: 'Forward', shortcut: '⌘]', disabled: true },\r\n  { label: 'Reload', shortcut: '⌘R' },\r\n  { label: 'More Tools', children: [\r\n    { label: 'Save Page As...', shortcut: '⌘⇧S' },\r\n    { label: 'Create Shortcut...' },\r\n    { label: 'Name Window...' },\r\n  ]},\r\n  { label: 'Developer Tools', shortcut: '⌘⇧I' },\r\n]"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/context-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ContextMenu>",
                    "defaultValue": "{\r\n  title: 'Components/ContextMenu',\r\n  component: ContextMenu,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n}"
                },
                {
                    "name": "WithActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/context-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    menuItems: [\r\n      {\r\n        label: 'Cut',\r\n        shortcut: '⌘X',\r\n        action: () => console.log('Cut action')\r\n      },\r\n      {\r\n        label: 'Copy',\r\n        shortcut: '⌘C',\r\n        action: () => console.log('Copy action')\r\n      },\r\n      {\r\n        label: 'Paste',\r\n        shortcut: '⌘V',\r\n        action: () => console.log('Paste action')\r\n      },\r\n      {\r\n        label: 'Delete',\r\n        destructive: true,\r\n        action: () => console.log('Delete action')\r\n      },\r\n    ],\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onItemSelected: (item: ContextMenuItem) => {\r\n        console.log('Selected:', item.label);\r\n      }\r\n    },\r\n    template: `\r\n      <mi-context-menu [menuItems]=\"menuItems\" (itemSelected)=\"onItemSelected($event)\">\r\n        <div class=\"flex h-[150px] w-[300px] items-center justify-center rounded-md border border-dashed text-sm\">\r\n          Right click for edit menu\r\n        </div>\r\n      </mi-context-menu>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/data-table.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    data: sampleUsers,\r\n    columns: userColumns,\r\n    pageSize: 5,\r\n  },\r\n}"
                },
                {
                    "name": "EmptyState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    data: [],\r\n    columns: userColumns,\r\n    emptyMessage: 'No users found. Try adjusting your filters.',\r\n  },\r\n}"
                },
                {
                    "name": "LargePageSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    data: sampleUsers,\r\n    columns: userColumns,\r\n    pageSize: 10,\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DataTableComponent<User>>",
                    "defaultValue": "{\r\n  title: 'Components/Data Table',\r\n  component: DataTableComponent,\r\n  parameters: {\r\n    layout: 'padded',\r\n    docs: {\r\n      description: {\r\n        component: 'Powerful table with sorting, pagination, and customizable columns.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    data: {\r\n      control: 'object',\r\n      description: 'Array of data objects to display',\r\n    },\r\n    columns: {\r\n      control: 'object',\r\n      description: 'Column definitions',\r\n    },\r\n    pageSize: {\r\n      control: 'number',\r\n      description: 'Number of items per page',\r\n    },\r\n    showPagination: {\r\n      control: 'boolean',\r\n      description: 'Whether to show pagination controls',\r\n    },\r\n    sortable: {\r\n      control: 'boolean',\r\n      description: 'Whether columns can be sorted',\r\n    },\r\n    emptyMessage: {\r\n      control: 'text',\r\n      description: 'Message to show when no data is available',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "NotSortable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    data: sampleUsers.slice(0, 5),\r\n    columns: userColumns,\r\n    sortable: false,\r\n    showPagination: false,\r\n  },\r\n}"
                },
                {
                    "name": "sampleUsers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User[]",
                    "defaultValue": "[\r\n  { id: 1, name: 'John Doe', email: 'john@example.com', age: 32, isActive: true, joinDate: '2023-01-15' },\r\n  { id: 2, name: 'Jane Smith', email: 'jane@example.com', age: 28, isActive: true, joinDate: '2023-02-20' },\r\n  { id: 3, name: 'Bob Johnson', email: 'bob@example.com', age: 45, isActive: false, joinDate: '2023-03-10' },\r\n  { id: 4, name: 'Alice Brown', email: 'alice@example.com', age: 35, isActive: true, joinDate: '2023-04-05' },\r\n  { id: 5, name: 'Charlie Wilson', email: 'charlie@example.com', age: 29, isActive: false, joinDate: '2023-05-12' },\r\n  { id: 6, name: 'Diana Davis', email: 'diana@example.com', age: 31, isActive: true, joinDate: '2023-06-18' },\r\n  { id: 7, name: 'Edward Miller', email: 'edward@example.com', age: 38, isActive: true, joinDate: '2023-07-22' },\r\n  { id: 8, name: 'Fiona Taylor', email: 'fiona@example.com', age: 26, isActive: false, joinDate: '2023-08-14' },\r\n  { id: 9, name: 'George Anderson', email: 'george@example.com', age: 42, isActive: true, joinDate: '2023-09-03' },\r\n  { id: 10, name: 'Helen Thomas', email: 'helen@example.com', age: 33, isActive: true, joinDate: '2023-10-01' },\r\n  { id: 11, name: 'Ian Jackson', email: 'ian@example.com', age: 27, isActive: false, joinDate: '2023-11-15' },\r\n  { id: 12, name: 'Julia White', email: 'julia@example.com', age: 30, isActive: true, joinDate: '2023-12-08' },\r\n]"
                },
                {
                    "name": "userColumns",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableColumn[]",
                    "defaultValue": "[\r\n  {\r\n    key: 'id',\r\n    header: 'ID',\r\n    sortable: true,\r\n    width: '80px',\r\n    type: 'number'\r\n  },\r\n  {\r\n    key: 'name',\r\n    header: 'Name',\r\n    sortable: true,\r\n    type: 'text'\r\n  },\r\n  {\r\n    key: 'email',\r\n    header: 'Email',\r\n    sortable: true,\r\n    type: 'text'\r\n  },\r\n  {\r\n    key: 'age',\r\n    header: 'Age',\r\n    sortable: true,\r\n    width: '100px',\r\n    type: 'number'\r\n  },\r\n  {\r\n    key: 'isActive',\r\n    header: 'Status',\r\n    sortable: true,\r\n    width: '120px',\r\n    type: 'boolean'\r\n  },\r\n  {\r\n    key: 'joinDate',\r\n    header: 'Join Date',\r\n    sortable: true,\r\n    width: '150px',\r\n    type: 'date'\r\n  }\r\n]"
                },
                {
                    "name": "WithoutPagination",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    data: sampleUsers.slice(0, 5),\r\n    columns: userColumns,\r\n    showPagination: false,\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/date-picker.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Pick a date',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onDateSelect: (date: Date) => {\r\n        console.log('Date selected:', date);\r\n      },\r\n      onValueChange: (date: Date) => {\r\n        console.log('Value changed:', date);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <label class=\"text-sm font-medium mb-2 block\">Select Date</label>\r\n        <mi-date-picker\r\n          [value]=\"value\"\r\n          [placeholder]=\"placeholder\"\r\n          [disabled]=\"disabled\"\r\n          [minDate]=\"minDate\"\r\n          [maxDate]=\"maxDate\"\r\n          [format]=\"format\"\r\n          [showToday]=\"showToday\"\r\n          (dateSelect)=\"onDateSelect($event)\"\r\n          (valueChange)=\"onValueChange($event)\">\r\n        </mi-date-picker>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "DifferentFormats",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: () => ({\r\n    props: {\r\n      onDateSelect: (date: Date, format: string) => {\r\n        console.log(`Date selected in ${format}:`, date);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"space-y-6\">\r\n        <div class=\"w-64\">\r\n          <label class=\"text-sm font-medium mb-2 block\">MM/dd/yyyy Format</label>\r\n          <mi-date-picker\r\n            placeholder=\"Select date\"\r\n            format=\"MM/dd/yyyy\"\r\n            (dateSelect)=\"onDateSelect($event, 'MM/dd/yyyy')\">\r\n          </mi-date-picker>\r\n        </div>\r\n\r\n        <div class=\"w-64\">\r\n          <label class=\"text-sm font-medium mb-2 block\">dd/MM/yyyy Format</label>\r\n          <mi-date-picker\r\n            placeholder=\"Select date\"\r\n            format=\"dd/MM/yyyy\"\r\n            (dateSelect)=\"onDateSelect($event, 'dd/MM/yyyy')\">\r\n          </mi-date-picker>\r\n        </div>\r\n\r\n        <div class=\"w-64\">\r\n          <label class=\"text-sm font-medium mb-2 block\">yyyy-MM-dd Format</label>\r\n          <mi-date-picker\r\n            placeholder=\"Select date\"\r\n            format=\"yyyy-MM-dd\"\r\n            (dateSelect)=\"onDateSelect($event, 'yyyy-MM-dd')\">\r\n          </mi-date-picker>\r\n        </div>\r\n\r\n        <div class=\"w-64\">\r\n          <label class=\"text-sm font-medium mb-2 block\">MMM dd, yyyy Format</label>\r\n          <mi-date-picker\r\n            placeholder=\"Select date\"\r\n            format=\"MMM dd, yyyy\"\r\n            (dateSelect)=\"onDateSelect($event, 'MMM dd, yyyy')\">\r\n          </mi-date-picker>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    disabled: true,\r\n    value: new Date(),\r\n    placeholder: 'Date picker is disabled',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <label class=\"text-sm font-medium mb-2 block\">Disabled Date Picker</label>\r\n        <mi-date-picker\r\n          [value]=\"value\"\r\n          [placeholder]=\"placeholder\"\r\n          [disabled]=\"disabled\">\r\n        </mi-date-picker>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DatePickerComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Date Picker',\r\n  component: DatePickerComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n    docs: {\r\n      description: {\r\n        component: 'A date picker component that allows users to select a date from a calendar.',\r\n      },\r\n    },\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    value: {\r\n      control: 'date',\r\n      description: 'The selected date',\r\n    },\r\n    placeholder: {\r\n      control: 'text',\r\n      description: 'Placeholder text for the input',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Whether the date picker is disabled',\r\n    },\r\n    minDate: {\r\n      control: 'date',\r\n      description: 'The minimum selectable date',\r\n    },\r\n    maxDate: {\r\n      control: 'date',\r\n      description: 'The maximum selectable date',\r\n    },\r\n    format: {\r\n      control: 'select',\r\n      options: ['MM/dd/yyyy', 'dd/MM/yyyy', 'yyyy-MM-dd', 'MMM dd, yyyy'],\r\n      description: 'The date format to display',\r\n    },\r\n    showToday: {\r\n      control: 'boolean',\r\n      description: 'Whether to show the \"Today\" button',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "WithDateRange",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Select appointment date',\r\n    minDate: new Date(),\r\n    maxDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days from now\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onDateSelect: (date: Date) => {\r\n        console.log('Appointment date selected:', date);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <label class=\"text-sm font-medium mb-2 block\">Appointment Date</label>\r\n        <p class=\"text-sm text-muted-foreground mb-2\">Select a date within the next 30 days</p>\r\n        <mi-date-picker\r\n          [placeholder]=\"placeholder\"\r\n          [minDate]=\"minDate\"\r\n          [maxDate]=\"maxDate\"\r\n          (dateSelect)=\"onDateSelect($event)\">\r\n        </mi-date-picker>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithoutTodayButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Pick a date',\r\n    showToday: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onDateSelect: (date: Date) => {\r\n        console.log('Date selected:', date);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <label class=\"text-sm font-medium mb-2 block\">No Today Button</label>\r\n        <mi-date-picker\r\n          [placeholder]=\"placeholder\"\r\n          [showToday]=\"showToday\"\r\n          (dateSelect)=\"onDateSelect($event)\">\r\n        </mi-date-picker>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithPreselectedDate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: new Date(),\r\n    placeholder: 'Pick a date',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onDateSelect: (date: Date) => {\r\n        console.log('Date selected:', date);\r\n      },\r\n    },\r\n    template: `\r\n      <div class=\"w-64\">\r\n        <label class=\"text-sm font-medium mb-2 block\">Birthday</label>\r\n        <mi-date-picker\r\n          [value]=\"value\"\r\n          [placeholder]=\"placeholder\"\r\n          (dateSelect)=\"onDateSelect($event)\">\r\n        </mi-date-picker>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/dropdown-menu.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onItemClick(item: DropdownMenuItem) {\r\n        console.log('Clicked item:', item);\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"p-8 flex justify-center\">\r\n        <mi-dropdown-menu [items]=\"items\" [placement]=\"placement\" (itemClick)=\"onItemClick($event)\">\r\n          <mi-button variant=\"outline\">Open Menu</mi-button>\r\n        </mi-dropdown-menu>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "FileMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      items: [\r\n        { label: 'New File', value: 'new', shortcut: '⌘N' },\r\n        { label: 'Open File', value: 'open', shortcut: '⌘O' },\r\n        { label: 'Open Recent', value: 'recent', shortcut: '⌘⇧O' },\r\n        { separator: true, label: '' },\r\n        { label: 'Save', value: 'save', shortcut: '⌘S' },\r\n        { label: 'Save As...', value: 'saveas', shortcut: '⌘⇧S' },\r\n        { separator: true, label: '' },\r\n        { label: 'Import', value: 'import' },\r\n        { label: 'Export', value: 'export', disabled: true },\r\n        { separator: true, label: '' },\r\n        { label: 'Print', value: 'print', shortcut: '⌘P' },\r\n      ],\r\n      onItemClick(item: DropdownMenuItem) {\r\n        console.log('File action:', item.value);\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"p-8 flex justify-center\">\r\n        <mi-dropdown-menu [items]=\"items\" (itemClick)=\"onItemClick($event)\">\r\n          <mi-button variant=\"ghost\">File</mi-button>\r\n        </mi-dropdown-menu>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DropdownMenu>",
                    "defaultValue": "{\r\n  title: 'Components/Dropdown Menu',\r\n  component: DropdownMenu,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [DropdownMenu, Button],\r\n    }),\r\n  ],\r\n  args: {\r\n    items: [\r\n      { label: 'Profile', value: 'profile', shortcut: '⇧⌘P' },\r\n      { label: 'Billing', value: 'billing' },\r\n      { label: 'Settings', value: 'settings', shortcut: '⌘,' },\r\n      { separator: true, label: '' },\r\n      { label: 'Logout', value: 'logout' },\r\n    ],\r\n    open: false,\r\n    placement: 'bottom',\r\n  },\r\n  argTypes: {\r\n    items: {\r\n      control: 'object',\r\n      description: 'Array of menu items'\r\n    },\r\n    open: {\r\n      control: 'boolean',\r\n      description: 'Whether the menu is open'\r\n    },\r\n    placement: {\r\n      control: 'select',\r\n      options: ['top', 'bottom', 'left', 'right'],\r\n      description: 'Placement of the menu relative to trigger'\r\n    }\r\n  },\r\n}"
                },
                {
                    "name": "UserAccountMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      items: [\r\n        { label: 'My Profile', value: 'profile', icon: '👤' },\r\n        { label: 'Account Settings', value: 'settings', icon: '⚙️' },\r\n        { label: 'Billing', value: 'billing', icon: '💳' },\r\n        { separator: true, label: '' },\r\n        { label: 'Team Settings', value: 'team', icon: '👥' },\r\n        { label: 'Invite Users', value: 'invite', icon: '➕', shortcut: '⌘+I' },\r\n        { separator: true, label: '' },\r\n        { label: 'Help & Support', value: 'help', icon: '❓' },\r\n        { label: 'Sign Out', value: 'signout', icon: '🚪' },\r\n      ],\r\n      onItemClick(item: DropdownMenuItem) {\r\n        console.log('Account action:', item.value);\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"p-8 flex justify-center\">\r\n        <mi-dropdown-menu [items]=\"items\" (itemClick)=\"onItemClick($event)\">\r\n          <mi-button>\r\n            John Doe\r\n            <span class=\"ml-2\">▼</span>\r\n          </mi-button>\r\n        </mi-dropdown-menu>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithDisabledItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      items: [\r\n        { label: 'Edit', value: 'edit' },\r\n        { label: 'Copy', value: 'copy', shortcut: '⌘C' },\r\n        { label: 'Paste', value: 'paste', shortcut: '⌘V', disabled: true },\r\n        { separator: true, label: '' },\r\n        { label: 'Delete', value: 'delete', disabled: true },\r\n        { label: 'Rename', value: 'rename' },\r\n      ],\r\n      onItemClick(item: DropdownMenuItem) {\r\n        console.log('Context action:', item.value);\r\n      }\r\n    },\r\n    template: `\r\n      <div class=\"p-8 flex justify-center\">\r\n        <mi-dropdown-menu [items]=\"items\" (itemClick)=\"onItemClick($event)\">\r\n          <mi-button variant=\"outline\">Right Click Menu</mi-button>\r\n        </mi-dropdown-menu>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/hover-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/hover-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'bottom',\r\n    openDelay: 700,\r\n    closeDelay: 300,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-hover-card [side]=\"side\" [openDelay]=\"openDelay\" [closeDelay]=\"closeDelay\">\r\n        <a\r\n          slot=\"trigger\"\r\n          class=\"inline-block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground\"\r\n          href=\"https://twitter.com/nextjs\"\r\n          target=\"_blank\"\r\n        >\r\n          <div class=\"text-sm font-medium leading-none\">@nextjs</div>\r\n          <p class=\"line-clamp-2 text-sm leading-snug text-muted-foreground\">\r\n            The React Framework – created and maintained by @vercel.\r\n          </p>\r\n        </a>\r\n\r\n        <div class=\"flex justify-between space-x-4\">\r\n          <div class=\"space-y-1\">\r\n            <h4 class=\"text-sm font-semibold\">@nextjs</h4>\r\n            <p class=\"text-sm\">\r\n              The React Framework – created and maintained by @vercel.\r\n            </p>\r\n            <div class=\"flex items-center pt-2\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                stroke-width=\"2\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                class=\"mr-2 h-4 w-4 opacity-70\">\r\n                <rect width=\"20\" height=\"14\" x=\"2\" y=\"3\" rx=\"2\" ry=\"2\"/>\r\n                <path d=\"m22 3-10 9L2 3\"/>\r\n              </svg>\r\n              <span class=\"text-xs text-muted-foreground\">\r\n                Joined December 2021\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mi-hover-card>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/hover-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HoverCard>",
                    "defaultValue": "{\r\n  title: 'Components/HoverCard',\r\n  component: HoverCard,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    side: {\r\n      control: { type: 'select' },\r\n      options: ['top', 'right', 'bottom', 'left'],\r\n    },\r\n    openDelay: {\r\n      control: { type: 'number' },\r\n    },\r\n    closeDelay: {\r\n      control: { type: 'number' },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "TopSide",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/hover-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'top',\r\n    openDelay: 500,\r\n    closeDelay: 300,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"mt-20\">\r\n        <mi-hover-card [side]=\"side\" [openDelay]=\"openDelay\" [closeDelay]=\"closeDelay\">\r\n          <button\r\n            slot=\"trigger\"\r\n            class=\"inline-flex h-10 items-center justify-center whitespace-nowrap rounded-md bg-primary px-4 py-2 text-sm font-medium text-primary-foreground ring-offset-background transition-colors hover:bg-primary/90 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\"\r\n          >\r\n            Hover for details\r\n          </button>\r\n\r\n          <div class=\"flex justify-between space-x-4\">\r\n            <div class=\"space-y-1\">\r\n              <h4 class=\"text-sm font-semibold\">Angular Component Library</h4>\r\n              <p class=\"text-sm\">\r\n                Beautiful, accessible components built with Angular and Tailwind CSS.\r\n              </p>\r\n              <div class=\"flex items-center pt-2\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  stroke-width=\"2\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"\r\n                  class=\"mr-2 h-4 w-4 opacity-70\">\r\n                  <path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"/>\r\n                  <polyline points=\"9,22 9,12 15,12 15,22\"/>\r\n                </svg>\r\n                <span class=\"text-xs text-muted-foreground\">\r\n                  Open source project\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mi-hover-card>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/label.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'default',\r\n    for: 'email',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex flex-col gap-2\">\r\n        <mi-label [for]=\"for\" [size]=\"size\">Email address</mi-label>\r\n        <input id=\"email\" type=\"email\" class=\"px-3 py-2 border border-gray-300 rounded-md\" placeholder=\"Enter your email\" />\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "FormExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <form class=\"flex flex-col gap-4 w-80\">\r\n        <div class=\"flex flex-col gap-2\">\r\n          <mi-label for=\"name\">Full Name</mi-label>\r\n          <input id=\"name\" type=\"text\" class=\"px-3 py-2 border border-gray-300 rounded-md dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100\" placeholder=\"John Doe\" />\r\n        </div>\r\n        <div class=\"flex flex-col gap-2\">\r\n          <mi-label for=\"email-form\">Email Address</mi-label>\r\n          <input id=\"email-form\" type=\"email\" class=\"px-3 py-2 border border-gray-300 rounded-md dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100\" placeholder=\"john@example.com\" />\r\n        </div>\r\n        <div class=\"flex items-center gap-2\">\r\n          <input id=\"terms\" type=\"checkbox\" class=\"w-4 h-4\" />\r\n          <mi-label for=\"terms\" size=\"sm\">I accept the terms and conditions</mi-label>\r\n        </div>\r\n      </form>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LabelComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Label',\r\n  component: LabelComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'default', 'lg'],\r\n    },\r\n    for: {\r\n      control: 'text',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex flex-col gap-4\">\r\n        <mi-label size=\"sm\">Small Label</mi-label>\r\n        <mi-label size=\"default\">Default Label</mi-label>\r\n        <mi-label size=\"lg\">Large Label</mi-label>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/navigation-menu.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    orientation: 'horizontal',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NavigationMenu>",
                    "defaultValue": "{\r\n  title: 'Components/NavigationMenu',\r\n  component: NavigationMenu,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    orientation: {\r\n      control: 'select',\r\n      options: ['horizontal', 'vertical']\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Vertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    orientation: 'vertical',\r\n  },\r\n}"
                },
                {
                    "name": "WithSubmenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    orientation: 'horizontal',\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/pagination.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/pagination.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    currentPage: 1,\r\n    totalPages: 10,\r\n    siblingCount: 1,\r\n    showFirstLast: true,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onPageChange: (page: number) => {\r\n        console.log('Page changed to:', page);\r\n        args.currentPage = page;\r\n      }\r\n    },\r\n    template: `\r\n      <mi-pagination\r\n        [currentPage]=\"currentPage\"\r\n        [totalPages]=\"totalPages\"\r\n        [siblingCount]=\"siblingCount\"\r\n        [showFirstLast]=\"showFirstLast\"\r\n        [disabled]=\"disabled\"\r\n        (pageChange)=\"onPageChange($event)\">\r\n      </mi-pagination>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "FewPages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/pagination.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    currentPage: 2,\r\n    totalPages: 5,\r\n    siblingCount: 1,\r\n    showFirstLast: true,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onPageChange: (page: number) => {\r\n        console.log('Page changed to:', page);\r\n        args.currentPage = page;\r\n      }\r\n    },\r\n    template: `\r\n      <mi-pagination\r\n        [currentPage]=\"currentPage\"\r\n        [totalPages]=\"totalPages\"\r\n        [siblingCount]=\"siblingCount\"\r\n        [showFirstLast]=\"showFirstLast\"\r\n        [disabled]=\"disabled\"\r\n        (pageChange)=\"onPageChange($event)\">\r\n      </mi-pagination>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "ManyPages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/pagination.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    currentPage: 10,\r\n    totalPages: 50,\r\n    siblingCount: 1,\r\n    showFirstLast: true,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onPageChange: (page: number) => {\r\n        console.log('Page changed to:', page);\r\n        args.currentPage = page;\r\n      }\r\n    },\r\n    template: `\r\n      <mi-pagination\r\n        [currentPage]=\"currentPage\"\r\n        [totalPages]=\"totalPages\"\r\n        [siblingCount]=\"siblingCount\"\r\n        [showFirstLast]=\"showFirstLast\"\r\n        [disabled]=\"disabled\"\r\n        (pageChange)=\"onPageChange($event)\">\r\n      </mi-pagination>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/pagination.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Pagination>",
                    "defaultValue": "{\r\n  title: 'Components/Pagination',\r\n  component: Pagination,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    currentPage: {\r\n      control: { type: 'number', min: 1 },\r\n    },\r\n    totalPages: {\r\n      control: { type: 'number', min: 1 },\r\n    },\r\n    siblingCount: {\r\n      control: { type: 'number', min: 0, max: 3 },\r\n    },\r\n    showFirstLast: {\r\n      control: { type: 'boolean' },\r\n    },\r\n    disabled: {\r\n      control: { type: 'boolean' },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "MiddlePage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/pagination.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    currentPage: 5,\r\n    totalPages: 10,\r\n    siblingCount: 1,\r\n    showFirstLast: true,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      onPageChange: (page: number) => {\r\n        console.log('Page changed to:', page);\r\n        args.currentPage = page;\r\n      }\r\n    },\r\n    template: `\r\n      <mi-pagination\r\n        [currentPage]=\"currentPage\"\r\n        [totalPages]=\"totalPages\"\r\n        [siblingCount]=\"siblingCount\"\r\n        [showFirstLast]=\"showFirstLast\"\r\n        [disabled]=\"disabled\"\r\n        (pageChange)=\"onPageChange($event)\">\r\n      </mi-pagination>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/popover.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"p-8 flex justify-center\">\r\n        <mi-popover [content]=\"content\" [placement]=\"placement\" [offset]=\"offset\">\r\n          <mi-button>Open Popover</mi-button>\r\n        </mi-popover>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "DifferentPlacements",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"p-16 flex justify-center items-center gap-8\">\r\n        <mi-popover content=\"Top placement\" placement=\"top\">\r\n          <mi-button variant=\"outline\">Top</mi-button>\r\n        </mi-popover>\r\n\r\n        <mi-popover content=\"Bottom placement\" placement=\"bottom\">\r\n          <mi-button variant=\"outline\">Bottom</mi-button>\r\n        </mi-popover>\r\n\r\n        <mi-popover content=\"Left placement\" placement=\"left\">\r\n          <mi-button variant=\"outline\">Left</mi-button>\r\n        </mi-popover>\r\n\r\n        <mi-popover content=\"Right placement\" placement=\"right\">\r\n          <mi-button variant=\"outline\">Right</mi-button>\r\n        </mi-popover>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Popover>",
                    "defaultValue": "{\r\n  title: 'Components/Popover',\r\n  component: Popover,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [Popover, Button, InputComponent, LabelComponent],\r\n    }),\r\n  ],\r\n  args: {\r\n    content: 'This is a popover content.',\r\n    open: false,\r\n    placement: 'bottom',\r\n    offset: 8,\r\n  },\r\n  argTypes: {\r\n    content: {\r\n      control: 'text',\r\n      description: 'Simple text content for the popover'\r\n    },\r\n    open: {\r\n      control: 'boolean',\r\n      description: 'Whether the popover is open'\r\n    },\r\n    placement: {\r\n      control: 'select',\r\n      options: ['top', 'bottom', 'left', 'right'],\r\n      description: 'Placement of the popover relative to trigger'\r\n    },\r\n    offset: {\r\n      control: 'number',\r\n      description: 'Offset from the trigger element'\r\n    }\r\n  },\r\n}"
                },
                {
                    "name": "WithCustomContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"p-8 flex justify-center\">\r\n        <mi-popover>\r\n          <mi-button>Settings</mi-button>\r\n          <div slot=\"content\" class=\"space-y-4\">\r\n            <div class=\"space-y-2\">\r\n              <h4 class=\"font-medium leading-none\">Dimensions</h4>\r\n              <p class=\"text-sm text-muted-foreground\">\r\n                Set the dimensions for the layer.\r\n              </p>\r\n            </div>\r\n            <div class=\"grid gap-2\">\r\n              <div class=\"grid grid-cols-3 items-center gap-4\">\r\n                <mi-label htmlFor=\"width\">Width</mi-label>\r\n                <mi-input id=\"width\" value=\"100%\" class=\"col-span-2 h-8\" />\r\n              </div>\r\n              <div class=\"grid grid-cols-3 items-center gap-4\">\r\n                <mi-label htmlFor=\"maxWidth\">Max. width</mi-label>\r\n                <mi-input id=\"maxWidth\" value=\"300px\" class=\"col-span-2 h-8\" />\r\n              </div>\r\n              <div class=\"grid grid-cols-3 items-center gap-4\">\r\n                <mi-label htmlFor=\"height\">Height</mi-label>\r\n                <mi-input id=\"height\" value=\"25px\" class=\"col-span-2 h-8\" />\r\n              </div>\r\n              <div class=\"grid grid-cols-3 items-center gap-4\">\r\n                <mi-label htmlFor=\"maxHeight\">Max. height</mi-label>\r\n                <mi-input id=\"maxHeight\" value=\"none\" class=\"col-span-2 h-8\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mi-popover>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/progress.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/progress.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 60,\r\n    max: 100,\r\n    size: 'default',\r\n    variant: 'default',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80\">\r\n        <mi-progress [value]=\"value\" [max]=\"max\" [size]=\"size\" [variant]=\"variant\"></mi-progress>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/progress.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProgressComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Progress',\r\n  component: ProgressComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    value: {\r\n      control: { type: 'range', min: 0, max: 100, step: 1 },\r\n    },\r\n    max: {\r\n      control: 'number',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'default', 'lg'],\r\n    },\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'success', 'warning', 'destructive'],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/progress.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 space-y-4\">\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Small</p>\r\n          <mi-progress [value]=\"75\" size=\"sm\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Default</p>\r\n          <mi-progress [value]=\"75\" size=\"default\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Large</p>\r\n          <mi-progress [value]=\"75\" size=\"lg\"></mi-progress>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Variants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/progress.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 space-y-4\">\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Default</p>\r\n          <mi-progress [value]=\"60\" variant=\"default\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Success</p>\r\n          <mi-progress [value]=\"85\" variant=\"success\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Warning</p>\r\n          <mi-progress [value]=\"45\" variant=\"warning\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Destructive</p>\r\n          <mi-progress [value]=\"25\" variant=\"destructive\"></mi-progress>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithLabels",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/progress.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80 space-y-6\">\r\n        <div>\r\n          <div class=\"flex justify-between text-sm mb-2\">\r\n            <span>File Upload</span>\r\n            <span>60%</span>\r\n          </div>\r\n          <mi-progress [value]=\"60\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <div class=\"flex justify-between text-sm mb-2\">\r\n            <span>Storage Used</span>\r\n            <span>85%</span>\r\n          </div>\r\n          <mi-progress [value]=\"85\" variant=\"warning\"></mi-progress>\r\n        </div>\r\n        <div>\r\n          <div class=\"flex justify-between text-sm mb-2\">\r\n            <span>Download</span>\r\n            <span>100%</span>\r\n          </div>\r\n          <mi-progress [value]=\"100\" variant=\"success\"></mi-progress>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/radio-group.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/radio-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'default-radio',\r\n    options: [\r\n      { value: 'option1', label: 'Option 1' },\r\n      { value: 'option2', label: 'Option 2' },\r\n      { value: 'option3', label: 'Option 3' },\r\n    ],\r\n  },\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/radio-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'disabled-radio',\r\n    disabled: true,\r\n    options: [\r\n      { value: 'option1', label: 'Option 1' },\r\n      { value: 'option2', label: 'Option 2' },\r\n      { value: 'option3', label: 'Option 3' },\r\n    ],\r\n  },\r\n}"
                },
                {
                    "name": "Horizontal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/radio-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'horizontal-radio',\r\n    orientation: 'horizontal',\r\n    options: [\r\n      { value: 'small', label: 'Small' },\r\n      { value: 'medium', label: 'Medium' },\r\n      { value: 'large', label: 'Large' },\r\n    ],\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/radio-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadioGroup>",
                    "defaultValue": "{\r\n  title: 'Components/RadioGroup',\r\n  component: RadioGroup,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    orientation: {\r\n      control: { type: 'radio' },\r\n      options: ['vertical', 'horizontal'],\r\n    },\r\n    disabled: {\r\n      control: { type: 'boolean' },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "WithDisabledOption",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/radio-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'disabled-option-radio',\r\n    options: [\r\n      { value: 'option1', label: 'Available Option' },\r\n      { value: 'option2', label: 'Disabled Option', disabled: true },\r\n      { value: 'option3', label: 'Another Available Option' },\r\n    ],\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/scroll-area.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'md',\r\n    hideScrollbar: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-scroll-area [size]=\"size\" [hideScrollbar]=\"hideScrollbar\" class=\"w-48 border rounded-md\">\r\n        <div class=\"p-4\">\r\n          <h4 class=\"mb-4 text-sm font-medium leading-none\">Tags</h4>\r\n          <div class=\"text-sm\">\r\n            <div class=\"mb-2\">v1.2.0-beta</div>\r\n            <div class=\"mb-2\">v1.1.0-alpha</div>\r\n            <div class=\"mb-2\">v1.0.0</div>\r\n            <div class=\"mb-2\">v0.9.0</div>\r\n            <div class=\"mb-2\">v0.8.0</div>\r\n            <div class=\"mb-2\">v0.7.0</div>\r\n            <div class=\"mb-2\">v0.6.0</div>\r\n            <div class=\"mb-2\">v0.5.0</div>\r\n            <div class=\"mb-2\">v0.4.0</div>\r\n            <div class=\"mb-2\">v0.3.0</div>\r\n            <div class=\"mb-2\">v0.2.0</div>\r\n            <div class=\"mb-2\">v0.1.0</div>\r\n          </div>\r\n        </div>\r\n      </mi-scroll-area>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "HorizontalScrolling",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'md',\r\n    hideScrollbar: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-scroll-area [size]=\"size\" [hideScrollbar]=\"hideScrollbar\" class=\"w-96 border rounded-md\">\r\n        <div class=\"flex w-max space-x-4 p-4\">\r\n          <div class=\"shrink-0 bg-accent rounded-md p-4 w-48\">\r\n            <h4 class=\"mb-2 font-medium\">Card 1</h4>\r\n            <p class=\"text-sm text-muted-foreground\">\r\n              This is a card with some content that makes the container scroll horizontally.\r\n            </p>\r\n          </div>\r\n          <div class=\"shrink-0 bg-accent rounded-md p-4 w-48\">\r\n            <h4 class=\"mb-2 font-medium\">Card 2</h4>\r\n            <p class=\"text-sm text-muted-foreground\">\r\n              This is another card with content. The scroll area allows horizontal scrolling.\r\n            </p>\r\n          </div>\r\n          <div class=\"shrink-0 bg-accent rounded-md p-4 w-48\">\r\n            <h4 class=\"mb-2 font-medium\">Card 3</h4>\r\n            <p class=\"text-sm text-muted-foreground\">\r\n              A third card to demonstrate the horizontal scrolling functionality.\r\n            </p>\r\n          </div>\r\n          <div class=\"shrink-0 bg-accent rounded-md p-4 w-48\">\r\n            <h4 class=\"mb-2 font-medium\">Card 4</h4>\r\n            <p class=\"text-sm text-muted-foreground\">\r\n              And one more card to make sure we have enough content to scroll.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </mi-scroll-area>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'lg',\r\n    hideScrollbar: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-scroll-area [size]=\"size\" [hideScrollbar]=\"hideScrollbar\" class=\"w-72 border rounded-md\">\r\n        <div class=\"p-4\">\r\n          <h4 class=\"mb-4 text-sm font-medium leading-none\">Components</h4>\r\n          <div class=\"grid gap-2 text-sm\">\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Accordion\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Alert Dialog\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Aspect Ratio\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-yellow-500\"></div>\r\n              Avatar\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Badge\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Button\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Calendar\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Card\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Checkbox\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Collapsible\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Combobox\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Command\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Context Menu\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Data Table\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Date Picker\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Dialog\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Dropdown Menu\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Form\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Hover Card\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Input\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Label\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Menubar\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Navigation Menu\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Popover\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Progress\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Radio Group\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Scroll Area\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Select\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Separator\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Sheet\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Skeleton\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Slider\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Switch\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Table\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Tabs\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Textarea\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Toast\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Toggle\r\n            </div>\r\n            <div class=\"flex items-center gap-2 p-2 hover:bg-accent rounded-sm\">\r\n              <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n              Tooltip\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mi-scroll-area>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ScrollArea>",
                    "defaultValue": "{\r\n  title: 'Components/ScrollArea',\r\n  component: ScrollArea,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'md', 'lg', 'xl', 'auto'],\r\n    },\r\n    hideScrollbar: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'sm',\r\n    hideScrollbar: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-scroll-area [size]=\"size\" [hideScrollbar]=\"hideScrollbar\" class=\"w-48 border rounded-md\">\r\n        <div class=\"p-4 space-y-2\">\r\n          <p class=\"text-sm\">\r\n            Radix Primitives is a low-level UI primitive library with a focus on accessibility, customization and developer experience.\r\n          </p>\r\n          <p class=\"text-sm\">\r\n            You can use these primitives to build your own design system, or you can use them as a starting point and customize them to your needs.\r\n          </p>\r\n          <p class=\"text-sm\">\r\n            All primitives are built with accessibility in mind and follow the WAI-ARIA guidelines.\r\n          </p>\r\n        </div>\r\n      </mi-scroll-area>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithoutScrollbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'md',\r\n    hideScrollbar: true,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-scroll-area [size]=\"size\" [hideScrollbar]=\"hideScrollbar\" class=\"w-48 border rounded-md\">\r\n        <div class=\"p-4\">\r\n          <h4 class=\"mb-4 text-sm font-medium leading-none\">Hidden Scrollbar</h4>\r\n          <div class=\"text-sm space-y-2\">\r\n            <p>This scroll area has a hidden scrollbar.</p>\r\n            <p>You can still scroll with your mouse wheel or by dragging on touch devices.</p>\r\n            <p>This is useful when you want a clean look without visible scrollbars.</p>\r\n            <p>The content is still scrollable, just without the visual scrollbar indicator.</p>\r\n            <p>Scroll down to see more content...</p>\r\n            <p>More content here.</p>\r\n            <p>Even more content.</p>\r\n            <p>Keep scrolling...</p>\r\n            <p>Almost at the end.</p>\r\n            <p>This is the last line.</p>\r\n          </div>\r\n        </div>\r\n      </mi-scroll-area>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/sidebar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'left',\r\n    variant: 'sidebar',\r\n    collapsible: 'offcanvas',\r\n    className: '',\r\n  },\r\n}"
                },
                {
                    "name": "Floating",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'left',\r\n    variant: 'floating',\r\n    collapsible: 'offcanvas',\r\n    className: '',\r\n  },\r\n}"
                },
                {
                    "name": "IconCollapsible",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'left',\r\n    variant: 'sidebar',\r\n    collapsible: 'icon',\r\n    className: '',\r\n  },\r\n}"
                },
                {
                    "name": "Inset",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'left',\r\n    variant: 'inset',\r\n    collapsible: 'offcanvas',\r\n    className: '',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Sidebar>",
                    "defaultValue": "{\r\n  title: 'Components/Sidebar',\r\n  component: Sidebar,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    side: {\r\n      control: 'select',\r\n      options: ['left', 'right']\r\n    },\r\n    variant: {\r\n      control: 'select',\r\n      options: ['sidebar', 'inset', 'floating']\r\n    },\r\n    collapsible: {\r\n      control: 'select',\r\n      options: ['offcanvas', 'icon', 'none']\r\n    },\r\n    className: { control: 'text' },\r\n  },\r\n}"
                },
                {
                    "name": "NonCollapsible",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'left',\r\n    variant: 'sidebar',\r\n    collapsible: 'none',\r\n    className: '',\r\n  },\r\n}"
                },
                {
                    "name": "Right",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    side: 'right',\r\n    variant: 'sidebar',\r\n    collapsible: 'offcanvas',\r\n    className: '',\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/slider.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    min: 0,\r\n    max: 100,\r\n    step: 1,\r\n    orientation: 'horizontal',\r\n    size: 'md',\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      currentValue: 50,\r\n    },\r\n    template: `\r\n      <div class=\"w-80 space-y-4\">\r\n        <mi-slider\r\n          [min]=\"min\"\r\n          [max]=\"max\"\r\n          [step]=\"step\"\r\n          [orientation]=\"orientation\"\r\n          [size]=\"size\"\r\n          [disabled]=\"disabled\">\r\n        </mi-slider>\r\n        <div class=\"text-sm text-muted-foreground\">\r\n          Value: {{ currentValue }}\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    min: 0,\r\n    max: 100,\r\n    step: 1,\r\n    orientation: 'horizontal',\r\n    size: 'md',\r\n    disabled: true,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      currentValue: 75,\r\n    },\r\n    template: `\r\n      <div class=\"w-80 space-y-4\">\r\n        <mi-slider\r\n          [min]=\"min\"\r\n          [max]=\"max\"\r\n          [step]=\"step\"\r\n          [orientation]=\"orientation\"\r\n          [size]=\"size\"\r\n          [disabled]=\"disabled\">\r\n        </mi-slider>\r\n        <div class=\"text-sm text-muted-foreground\">\r\n          Disabled slider, Value: {{ currentValue }}\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Slider>",
                    "defaultValue": "{\r\n  title: 'Components/Slider',\r\n  component: Slider,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    orientation: {\r\n      control: { type: 'radio' },\r\n      options: ['horizontal', 'vertical'],\r\n    },\r\n    size: {\r\n      control: { type: 'radio' },\r\n      options: ['sm', 'md', 'lg'],\r\n    },\r\n    disabled: {\r\n      control: { type: 'boolean' },\r\n    },\r\n    min: {\r\n      control: { type: 'number' },\r\n    },\r\n    max: {\r\n      control: { type: 'number' },\r\n    },\r\n    step: {\r\n      control: { type: 'number' },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Range",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    min: 0,\r\n    max: 20,\r\n    step: 1,\r\n    orientation: 'horizontal',\r\n    size: 'md',\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      currentValue: 10,\r\n    },\r\n    template: `\r\n      <div class=\"w-80 space-y-4\">\r\n        <mi-slider\r\n          [min]=\"min\"\r\n          [max]=\"max\"\r\n          [step]=\"step\"\r\n          [orientation]=\"orientation\"\r\n          [size]=\"size\"\r\n          [disabled]=\"disabled\">\r\n        </mi-slider>\r\n        <div class=\"text-sm text-muted-foreground\">\r\n          Range: {{ min }} - {{ max }}, Value: {{ currentValue }}\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "SmallSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    min: 0,\r\n    max: 100,\r\n    step: 5,\r\n    orientation: 'horizontal',\r\n    size: 'sm',\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      currentValue: 25,\r\n    },\r\n    template: `\r\n      <div class=\"w-80 space-y-4\">\r\n        <mi-slider\r\n          [min]=\"min\"\r\n          [max]=\"max\"\r\n          [step]=\"step\"\r\n          [orientation]=\"orientation\"\r\n          [size]=\"size\"\r\n          [disabled]=\"disabled\">\r\n        </mi-slider>\r\n        <div class=\"text-sm text-muted-foreground\">\r\n          Small size, Step: {{ step }}, Value: {{ currentValue }}\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/sonner.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    toasts: [],\r\n    showIcon: true,\r\n    maxToasts: 5,\r\n  },\r\n}"
                },
                {
                    "name": "LimitedToasts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    toasts: [\r\n      ...sampleToasts,\r\n      {\r\n        id: '4',\r\n        title: 'Info',\r\n        description: 'This is an info message.',\r\n        variant: 'info' as const,\r\n        position: 'bottom-right' as const,\r\n      },\r\n      {\r\n        id: '5',\r\n        title: 'Default',\r\n        description: 'This is a default message.',\r\n        variant: 'default' as const,\r\n        position: 'bottom-right' as const,\r\n      },\r\n    ],\r\n    showIcon: true,\r\n    maxToasts: 3,\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SonnerToaster>",
                    "defaultValue": "{\r\n  title: 'Components/Sonner',\r\n  component: SonnerToaster,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    toasts: { control: 'object' },\r\n    showIcon: { control: 'boolean' },\r\n    maxToasts: { control: 'number' },\r\n  },\r\n}"
                },
                {
                    "name": "sampleToasts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: '1',\r\n    title: 'Success',\r\n    description: 'Your changes have been saved.',\r\n    variant: 'success' as const,\r\n    position: 'bottom-right' as const,\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Warning',\r\n    description: 'Please check your input.',\r\n    variant: 'warning' as const,\r\n    position: 'bottom-right' as const,\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Error',\r\n    description: 'Something went wrong.',\r\n    variant: 'destructive' as const,\r\n    position: 'bottom-right' as const,\r\n  },\r\n]"
                },
                {
                    "name": "WithoutIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    toasts: sampleToasts,\r\n    showIcon: false,\r\n    maxToasts: 5,\r\n  },\r\n}"
                },
                {
                    "name": "WithToasts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    toasts: sampleToasts,\r\n    showIcon: true,\r\n    maxToasts: 5,\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/table.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Table>",
                    "defaultValue": "{\r\n  title: 'Components/Table',\r\n  component: Table,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [Table, BadgeComponent],\r\n    }),\r\n  ],\r\n  args: {\r\n    columns: [\r\n      { key: 'name', header: 'Name' },\r\n      { key: 'email', header: 'Email' },\r\n      { key: 'status', header: 'Status' },\r\n    ],\r\n    data: [\r\n      { name: 'John Doe', email: 'john@example.com', status: 'Active' },\r\n      { name: 'Jane Smith', email: 'jane@example.com', status: 'Inactive' },\r\n      { name: 'Bob Johnson', email: 'bob@example.com', status: 'Active' },\r\n    ]\r\n  },\r\n  argTypes: {\r\n    columns: {\r\n      control: 'object',\r\n      description: 'Array of table column definitions'\r\n    },\r\n    data: {\r\n      control: 'object',\r\n      description: 'Array of data objects to display'\r\n    }\r\n  },\r\n}"
                },
                {
                    "name": "ProductTable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    columns: [\r\n      { key: 'sku', header: 'SKU', width: '100px' },\r\n      { key: 'name', header: 'Product Name' },\r\n      { key: 'category', header: 'Category' },\r\n      { key: 'price', header: 'Price', width: '100px' },\r\n      { key: 'stock', header: 'Stock', width: '80px' },\r\n    ],\r\n    data: [\r\n      {\r\n        sku: 'PRD-001',\r\n        name: 'Wireless Headphones',\r\n        category: 'Electronics',\r\n        price: '$99.99',\r\n        stock: 45\r\n      },\r\n      {\r\n        sku: 'PRD-002',\r\n        name: 'Coffee Mug',\r\n        category: 'Kitchen',\r\n        price: '$12.99',\r\n        stock: 120\r\n      },\r\n      {\r\n        sku: 'PRD-003',\r\n        name: 'Laptop Stand',\r\n        category: 'Office',\r\n        price: '$29.99',\r\n        stock: 8\r\n      },\r\n    ]\r\n  }\r\n}"
                },
                {
                    "name": "UserTable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    columns: [\r\n      { key: 'id', header: 'ID', width: '80px' },\r\n      { key: 'name', header: 'Name' },\r\n      { key: 'email', header: 'Email' },\r\n      { key: 'role', header: 'Role' },\r\n      { key: 'status', header: 'Status', width: '120px' },\r\n      { key: 'joinDate', header: 'Join Date' },\r\n    ],\r\n    data: [\r\n      {\r\n        id: 1,\r\n        name: 'John Doe',\r\n        email: 'john@example.com',\r\n        role: 'Admin',\r\n        status: 'Active',\r\n        joinDate: '2024-01-15'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Jane Smith',\r\n        email: 'jane@example.com',\r\n        role: 'User',\r\n        status: 'Inactive',\r\n        joinDate: '2024-02-20'\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Bob Johnson',\r\n        email: 'bob@example.com',\r\n        role: 'Moderator',\r\n        status: 'Active',\r\n        joinDate: '2024-03-10'\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'Alice Brown',\r\n        email: 'alice@example.com',\r\n        role: 'User',\r\n        status: 'Pending',\r\n        joinDate: '2024-03-25'\r\n      },\r\n    ]\r\n  }\r\n}"
                },
                {
                    "name": "WithCustomCell",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      columns: [\r\n        { key: 'name', header: 'Name' },\r\n        { key: 'email', header: 'Email' },\r\n        { key: 'status', header: 'Status' },\r\n        { key: 'actions', header: 'Actions', width: '120px' },\r\n      ],\r\n      data: [\r\n        { name: 'John Doe', email: 'john@example.com', status: 'active' },\r\n        { name: 'Jane Smith', email: 'jane@example.com', status: 'inactive' },\r\n        { name: 'Bob Johnson', email: 'bob@example.com', status: 'pending' },\r\n      ]\r\n    },\r\n    template: `\r\n      <mi-table [columns]=\"columns\" [data]=\"data\">\r\n        <ng-template #cellTemplate let-item let-column=\"column\" let-value=\"value\">\r\n          <ng-container [ngSwitch]=\"column.key\">\r\n            <mi-badge\r\n              *ngSwitchCase=\"'status'\"\r\n              [variant]=\"value === 'active' ? 'default' : value === 'inactive' ? 'destructive' : 'secondary'\">\r\n              {{ value | titlecase }}\r\n            </mi-badge>\r\n            <div *ngSwitchCase=\"'actions'\" class=\"flex gap-2\">\r\n              <button class=\"text-xs px-2 py-1 bg-blue-100 text-blue-800 rounded hover:bg-blue-200\">Edit</button>\r\n              <button class=\"text-xs px-2 py-1 bg-red-100 text-red-800 rounded hover:bg-red-200\">Delete</button>\r\n            </div>\r\n            <span *ngSwitchDefault>{{ value }}</span>\r\n          </ng-container>\r\n        </ng-template>\r\n      </mi-table>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/textarea.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Enter your message...',\r\n    rows: 4,\r\n    disabled: false,\r\n    readonly: false,\r\n    variant: 'default',\r\n  },\r\n}"
                },
                {
                    "name": "FormExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <form class=\"flex flex-col gap-4 w-96\">\r\n        <div class=\"flex flex-col gap-2\">\r\n          <label class=\"text-sm font-medium\">Message</label>\r\n          <mi-textarea placeholder=\"Write your message here...\" rows=\"4\"></mi-textarea>\r\n          <p class=\"text-xs text-gray-500\">Your message will be sent to the support team.</p>\r\n        </div>\r\n        <div class=\"flex flex-col gap-2\">\r\n          <label class=\"text-sm font-medium\">Additional Notes</label>\r\n          <mi-textarea placeholder=\"Any additional information...\" rows=\"6\"></mi-textarea>\r\n        </div>\r\n      </form>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextareaComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Textarea',\r\n  component: TextareaComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'destructive'],\r\n    },\r\n    placeholder: {\r\n      control: 'text',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n    readonly: {\r\n      control: 'boolean',\r\n    },\r\n    rows: {\r\n      control: 'number',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "States",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex flex-col gap-4 w-80\">\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Normal</p>\r\n          <mi-textarea placeholder=\"Normal textarea\" rows=\"3\"></mi-textarea>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Disabled</p>\r\n          <mi-textarea [disabled]=\"true\" placeholder=\"Disabled textarea\" rows=\"3\"></mi-textarea>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Readonly</p>\r\n          <mi-textarea [readonly]=\"true\" value=\"This is readonly content\" rows=\"3\"></mi-textarea>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Variants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex flex-col gap-4 w-80\">\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Default</p>\r\n          <mi-textarea placeholder=\"Default textarea\" rows=\"3\"></mi-textarea>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-sm font-medium mb-2\">Error State</p>\r\n          <mi-textarea variant=\"destructive\" placeholder=\"Error textarea\" rows=\"3\"></mi-textarea>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/theme-toggle-test.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "ForceDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  globals: { theme: 'dark' },\r\n}"
                },
                {
                    "name": "ForceLight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  globals: { theme: 'light' },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\r\n  title: 'Theme Test/Theme Toggle Check',\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  render: () => ({\r\n    template: `\r\n      <div class=\"p-8 rounded-lg border bg-card text-card-foreground\">\r\n        <h1 class=\"text-2xl font-bold mb-4\">Theme Toggle Test</h1>\r\n        <div class=\"space-y-4\">\r\n          <div class=\"p-4 bg-background border rounded\">\r\n            <p class=\"text-foreground\">Background: <span class=\"text-muted-foreground\">This should change color</span></p>\r\n          </div>\r\n          <div class=\"p-4 bg-primary text-primary-foreground rounded\">\r\n            <p>Primary Background</p>\r\n          </div>\r\n          <div class=\"p-4 bg-secondary text-secondary-foreground rounded\">\r\n            <p>Secondary Background</p>\r\n          </div>\r\n          <div class=\"p-4 bg-muted text-muted-foreground rounded\">\r\n            <p>Muted Background</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-4 text-sm text-muted-foreground\">\r\n          <p>Current theme class: <span id=\"theme-class\"></span></p>\r\n          <p>Current data-mode: <span id=\"data-mode\"></span></p>\r\n        </div>\r\n      </div>\r\n      <script>\r\n        setTimeout(() => {\r\n          document.getElementById('theme-class').textContent = document.documentElement.className || 'none';\r\n          document.getElementById('data-mode').textContent = document.documentElement.getAttribute('data-mode') || 'none';\r\n        }, 100);\r\n      </script>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/toast.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    title: 'Notification',\r\n    description: 'Your message has been sent successfully.',\r\n    variant: 'default',\r\n    closable: true,\r\n  },\r\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: {\r\n      showToast: false,\r\n      toastType: 'default',\r\n    },\r\n    template: `\r\n      <div class=\"space-y-4\">\r\n        <div class=\"flex gap-2\">\r\n          <button\r\n            (click)=\"showToast = true; toastType = 'default'\"\r\n            class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n            Show Default\r\n          </button>\r\n          <button\r\n            (click)=\"showToast = true; toastType = 'success'\"\r\n            class=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\">\r\n            Show Success\r\n          </button>\r\n          <button\r\n            (click)=\"showToast = true; toastType = 'warning'\"\r\n            class=\"px-4 py-2 bg-yellow-600 text-white rounded-md hover:bg-yellow-700\">\r\n            Show Warning\r\n          </button>\r\n          <button\r\n            (click)=\"showToast = true; toastType = 'destructive'\"\r\n            class=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700\">\r\n            Show Error\r\n          </button>\r\n        </div>\r\n\r\n        <div *ngIf=\"showToast\" class=\"w-96\">\r\n          <mi-toast\r\n            [title]=\"toastType === 'default' ? 'Notification' :\r\n                    toastType === 'success' ? 'Success!' :\r\n                    toastType === 'warning' ? 'Warning' : 'Error'\"\r\n            [description]=\"toastType === 'default' ? 'This is a default notification.' :\r\n                         toastType === 'success' ? 'Action completed successfully.' :\r\n                         toastType === 'warning' ? 'Please review your input.' : 'Something went wrong.'\"\r\n            [variant]=\"toastType\"\r\n            [icon]=\"toastType === 'default' ? 'Bell' :\r\n                    toastType === 'success' ? 'CheckCircle' :\r\n                    toastType === 'warning' ? 'AlertTriangle' : 'AlertCircle'\"\r\n            (close)=\"showToast = false\">\r\n          </mi-toast>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToastComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Toast',\r\n  component: ToastComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'destructive', 'success', 'warning'],\r\n    },\r\n    title: {\r\n      control: 'text',\r\n    },\r\n    description: {\r\n      control: 'text',\r\n    },\r\n    icon: {\r\n      control: 'text',\r\n    },\r\n    action: {\r\n      control: 'text',\r\n    },\r\n    closable: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "SimpleMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    description: 'File saved successfully.',\r\n    variant: 'success',\r\n    icon: 'Check',\r\n    closable: false,\r\n  },\r\n}"
                },
                {
                    "name": "Variants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-4 w-96\">\r\n        <mi-toast\r\n          title=\"Default Toast\"\r\n          description=\"This is a default toast notification.\"\r\n          variant=\"default\"\r\n          icon=\"Bell\">\r\n        </mi-toast>\r\n\r\n        <mi-toast\r\n          title=\"Success!\"\r\n          description=\"Your action was completed successfully.\"\r\n          variant=\"success\"\r\n          icon=\"CheckCircle\">\r\n        </mi-toast>\r\n\r\n        <mi-toast\r\n          title=\"Warning\"\r\n          description=\"Please review your settings before continuing.\"\r\n          variant=\"warning\"\r\n          icon=\"AlertTriangle\">\r\n        </mi-toast>\r\n\r\n        <mi-toast\r\n          title=\"Error\"\r\n          description=\"Something went wrong. Please try again.\"\r\n          variant=\"destructive\"\r\n          icon=\"AlertCircle\">\r\n        </mi-toast>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "WithAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    title: 'New Update Available',\r\n    description: 'Version 2.0 is now available for download.',\r\n    variant: 'default',\r\n    icon: 'Download',\r\n    action: 'Update',\r\n    closable: true,\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/toggle.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'default',\r\n    size: 'default',\r\n    pressed: false,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-toggle\r\n        [variant]=\"variant\"\r\n        [size]=\"size\"\r\n        [pressed]=\"pressed\"\r\n        [disabled]=\"disabled\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          class=\"h-4 w-4\">\r\n          <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"/>\r\n        </svg>\r\n      </mi-toggle>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'default',\r\n    size: 'default',\r\n    pressed: false,\r\n    disabled: true,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-toggle\r\n        [variant]=\"variant\"\r\n        [size]=\"size\"\r\n        [pressed]=\"pressed\"\r\n        [disabled]=\"disabled\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          class=\"h-4 w-4\">\r\n          <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"/>\r\n        </svg>\r\n      </mi-toggle>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'default',\r\n    size: 'lg',\r\n    pressed: false,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-toggle\r\n        [variant]=\"variant\"\r\n        [size]=\"size\"\r\n        [pressed]=\"pressed\"\r\n        [disabled]=\"disabled\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          class=\"h-4 w-4\">\r\n          <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"/>\r\n        </svg>\r\n      </mi-toggle>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Toggle>",
                    "defaultValue": "{\r\n  title: 'Components/Toggle',\r\n  component: Toggle,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    variant: {\r\n      control: { type: 'radio' },\r\n      options: ['default', 'outline'],\r\n    },\r\n    size: {\r\n      control: { type: 'radio' },\r\n      options: ['default', 'sm', 'lg'],\r\n    },\r\n    pressed: {\r\n      control: { type: 'boolean' },\r\n    },\r\n    disabled: {\r\n      control: { type: 'boolean' },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'outline',\r\n    size: 'default',\r\n    pressed: false,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-toggle\r\n        [variant]=\"variant\"\r\n        [size]=\"size\"\r\n        [pressed]=\"pressed\"\r\n        [disabled]=\"disabled\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          class=\"h-4 w-4\">\r\n          <path d=\"M7 4V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v2\"/>\r\n          <path d=\"M5.5 4h13l-.5 7.5a2 2 0 0 1-2 1.5h-8a2 2 0 0 1-2-1.5L5.5 4z\"/>\r\n          <path d=\"M11 11v-1a2 2 0 1 1 4 0v1\"/>\r\n        </svg>\r\n      </mi-toggle>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'default',\r\n    size: 'sm',\r\n    pressed: false,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-toggle\r\n        [variant]=\"variant\"\r\n        [size]=\"size\"\r\n        [pressed]=\"pressed\"\r\n        [disabled]=\"disabled\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          class=\"h-4 w-4\">\r\n          <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"/>\r\n        </svg>\r\n      </mi-toggle>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'default',\r\n    size: 'default',\r\n    pressed: false,\r\n    disabled: false,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-toggle\r\n        [variant]=\"variant\"\r\n        [size]=\"size\"\r\n        [pressed]=\"pressed\"\r\n        [disabled]=\"disabled\">\r\n        Toggle\r\n      </mi-toggle>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/tooltip.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    content: 'This is a tooltip',\r\n    variant: 'default',\r\n    side: 'top',\r\n    delay: 500,\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <mi-tooltip [content]=\"content\" [variant]=\"variant\" [side]=\"side\" [delay]=\"delay\">\r\n        <button class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n          Hover me\r\n        </button>\r\n      </mi-tooltip>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"space-y-8 p-8\">\r\n        <div class=\"flex items-center gap-4\">\r\n          <mi-tooltip content=\"Click to save your work\">\r\n            <button class=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 flex items-center gap-2\">\r\n              <span>💾</span>\r\n              Save\r\n            </button>\r\n          </mi-tooltip>\r\n\r\n          <mi-tooltip content=\"Delete this item permanently\" variant=\"secondary\">\r\n            <button class=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 flex items-center gap-2\">\r\n              <span>🗑️</span>\r\n              Delete\r\n            </button>\r\n          </mi-tooltip>\r\n\r\n          <mi-tooltip content=\"View more options\">\r\n            <button class=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\">\r\n              ⋯\r\n            </button>\r\n          </mi-tooltip>\r\n        </div>\r\n\r\n        <div class=\"border border-gray-200 dark:border-gray-700 rounded-lg p-4\">\r\n          <h3 class=\"font-medium mb-2\">Form Controls</h3>\r\n          <div class=\"space-y-3\">\r\n            <div class=\"flex items-center gap-2\">\r\n              <mi-tooltip content=\"Enter your full name\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Full Name\"\r\n                  class=\"px-3 py-2 border border-gray-300 rounded-md dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100\"\r\n                />\r\n              </mi-tooltip>\r\n            </div>\r\n\r\n            <div class=\"flex items-center gap-2\">\r\n              <mi-tooltip content=\"Choose your preferred option\" side=\"right\">\r\n                <select class=\"px-3 py-2 border border-gray-300 rounded-md dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100\">\r\n                  <option>Option 1</option>\r\n                  <option>Option 2</option>\r\n                  <option>Option 3</option>\r\n                </select>\r\n              </mi-tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TooltipComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Tooltip',\r\n  component: TooltipComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    content: {\r\n      control: 'text',\r\n    },\r\n    variant: {\r\n      control: 'select',\r\n      options: ['default', 'secondary'],\r\n    },\r\n    side: {\r\n      control: 'select',\r\n      options: ['top', 'right', 'bottom', 'left'],\r\n    },\r\n    delay: {\r\n      control: 'number',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Positions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"grid grid-cols-3 gap-8 p-16\">\r\n        <div></div>\r\n        <div class=\"flex justify-center\">\r\n          <mi-tooltip content=\"Tooltip on top\" side=\"top\">\r\n            <button class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n              Top\r\n            </button>\r\n          </mi-tooltip>\r\n        </div>\r\n        <div></div>\r\n\r\n        <div class=\"flex justify-center\">\r\n          <mi-tooltip content=\"Tooltip on left\" side=\"left\">\r\n            <button class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n              Left\r\n            </button>\r\n          </mi-tooltip>\r\n        </div>\r\n        <div></div>\r\n        <div class=\"flex justify-center\">\r\n          <mi-tooltip content=\"Tooltip on right\" side=\"right\">\r\n            <button class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n              Right\r\n            </button>\r\n          </mi-tooltip>\r\n        </div>\r\n\r\n        <div></div>\r\n        <div class=\"flex justify-center\">\r\n          <mi-tooltip content=\"Tooltip on bottom\" side=\"bottom\">\r\n            <button class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n              Bottom\r\n            </button>\r\n          </mi-tooltip>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "Variants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex gap-4\">\r\n        <mi-tooltip content=\"Default tooltip\" variant=\"default\">\r\n          <button class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n            Default\r\n          </button>\r\n        </mi-tooltip>\r\n\r\n        <mi-tooltip content=\"Secondary tooltip\" variant=\"secondary\">\r\n          <button class=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\">\r\n            Secondary\r\n          </button>\r\n        </mi-tooltip>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/chart.stories.ts": [
                {
                    "name": "ExtraLarge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'xl',\r\n    className: '',\r\n  },\r\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'lg',\r\n    className: '',\r\n  },\r\n}"
                },
                {
                    "name": "Medium",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'md',\r\n    className: '',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ChartContainer>",
                    "defaultValue": "{\r\n  title: 'Components/Chart',\r\n  component: ChartContainer,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    size: {\r\n      control: 'select',\r\n      options: ['sm', 'md', 'lg', 'xl']\r\n    },\r\n    className: { control: 'text' },\r\n  },\r\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'sm',\r\n    className: '',\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/resizable.stories.ts": [
                {
                    "name": "Horizontal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/resizable.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    direction: 'horizontal',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/resizable.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ResizablePanelGroup>",
                    "defaultValue": "{\r\n  title: 'Components/Resizable',\r\n  component: ResizablePanelGroup,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    direction: {\r\n      control: 'select',\r\n      options: ['horizontal', 'vertical']\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Vertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/resizable.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    direction: 'vertical',\r\n  },\r\n}"
                },
                {
                    "name": "WithHandle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/resizable.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    direction: 'horizontal',\r\n  },\r\n}"
                }
            ],
            "projects/mi-ui/src/stories/separator.stories.ts": [
                {
                    "name": "Horizontal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/separator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    orientation: 'horizontal',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"w-80\">\r\n        <div class=\"space-y-1\">\r\n          <h4 class=\"text-sm font-medium leading-none\">Radix Primitives</h4>\r\n          <p class=\"text-sm text-gray-500\">An open-source UI component library.</p>\r\n        </div>\r\n        <mi-separator [orientation]=\"orientation\" class=\"my-4\"></mi-separator>\r\n        <div class=\"flex h-5 items-center space-x-4 text-sm\">\r\n          <div>Blog</div>\r\n          <mi-separator orientation=\"vertical\"></mi-separator>\r\n          <div>Docs</div>\r\n          <mi-separator orientation=\"vertical\"></mi-separator>\r\n          <div>Source</div>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "InContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/separator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"max-w-md\">\r\n        <div class=\"space-y-1\">\r\n          <h4 class=\"text-sm font-medium leading-none\">Account Settings</h4>\r\n          <p class=\"text-sm text-gray-500 dark:text-gray-400\">Manage your account preferences.</p>\r\n        </div>\r\n        <mi-separator class=\"my-4\"></mi-separator>\r\n        <div class=\"space-y-1\">\r\n          <h4 class=\"text-sm font-medium leading-none\">Privacy Settings</h4>\r\n          <p class=\"text-sm text-gray-500 dark:text-gray-400\">Control your privacy and data usage.</p>\r\n        </div>\r\n        <mi-separator class=\"my-4\"></mi-separator>\r\n        <div class=\"space-y-1\">\r\n          <h4 class=\"text-sm font-medium leading-none\">Notification Settings</h4>\r\n          <p class=\"text-sm text-gray-500 dark:text-gray-400\">Configure how you receive notifications.</p>\r\n        </div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/separator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SeparatorComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Separator',\r\n  component: SeparatorComponent,\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    orientation: {\r\n      control: 'select',\r\n      options: ['horizontal', 'vertical'],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Vertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/src/stories/separator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    orientation: 'vertical',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"flex h-5 items-center space-x-4 text-sm\">\r\n        <div>Blog</div>\r\n        <mi-separator [orientation]=\"orientation\"></mi-separator>\r\n        <div>Docs</div>\r\n        <mi-separator [orientation]=\"orientation\"></mi-separator>\r\n        <div>Source</div>\r\n      </div>\r\n    `,\r\n  }),\r\n}"
                }
            ],
            "projects/mi-ui/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/mi-ui/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n       color: /(background|color)$/i,\n       date: /Date$/i,\n      },\n    },\n    backgrounds: { disable: true },\n  },\n  decorators: [\n    applicationConfig({\n      providers: [provideAnimations()]\n    }),\n    withThemeByClassName({\n      themes: {\n        light: '',\n        dark: 'dark',\n      },\n      defaultTheme: 'light',\n    })\n  ],\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/mi-ui/src/stories/accordion.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AccordionComponent>",
                    "file": "projects/mi-ui/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/alert-dialog.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AlertDialog>",
                    "file": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/alert.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AlertComponent>",
                    "file": "projects/mi-ui/src/stories/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/all-components-theme-test.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/aspect-ratio.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AspectRatio>",
                    "file": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/avatar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AvatarComponent>",
                    "file": "projects/mi-ui/src/stories/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/badge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BadgeComponent>",
                    "file": "projects/mi-ui/src/stories/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/breadcrumb.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Breadcrumb>",
                    "file": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Button>",
                    "file": "projects/mi-ui/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/calendar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CalendarComponent>",
                    "file": "projects/mi-ui/src/stories/calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CardComponent>",
                    "file": "projects/mi-ui/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/carousel.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CarouselComponent>",
                    "file": "projects/mi-ui/src/stories/carousel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/chart.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ChartContainer>",
                    "file": "projects/mi-ui/src/stories/chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxComponent>",
                    "file": "projects/mi-ui/src/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/collapsible.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Collapsible>",
                    "file": "projects/mi-ui/src/stories/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/combobox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ComboboxComponent>",
                    "file": "projects/mi-ui/src/stories/combobox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/command.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CommandComponent>",
                    "file": "projects/mi-ui/src/stories/command.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/context-menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ContextMenu>",
                    "file": "projects/mi-ui/src/stories/context-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/data-table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DataTableComponent<User>>",
                    "file": "projects/mi-ui/src/stories/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/date-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DatePickerComponent>",
                    "file": "projects/mi-ui/src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/dialog.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DialogComponent>",
                    "file": "projects/mi-ui/src/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/drawer.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Drawer>",
                    "file": "projects/mi-ui/src/stories/drawer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/dropdown-menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DropdownMenu>",
                    "file": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/form.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormComponent>",
                    "file": "projects/mi-ui/src/stories/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/hover-card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HoverCard>",
                    "file": "projects/mi-ui/src/stories/hover-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/icon.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<IconComponent>",
                    "file": "projects/mi-ui/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/input-otp.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputOtpComponent>",
                    "file": "projects/mi-ui/src/stories/input-otp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "projects/mi-ui/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/label.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LabelComponent>",
                    "file": "projects/mi-ui/src/stories/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/menubar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MenubarComponent>",
                    "file": "projects/mi-ui/src/stories/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/navigation-menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NavigationMenu>",
                    "file": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/pagination.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Pagination>",
                    "file": "projects/mi-ui/src/stories/pagination.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/popover.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Popover>",
                    "file": "projects/mi-ui/src/stories/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/progress.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProgressComponent>",
                    "file": "projects/mi-ui/src/stories/progress.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/radio-group.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadioGroup>",
                    "file": "projects/mi-ui/src/stories/radio-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/resizable.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ResizablePanelGroup>",
                    "file": "projects/mi-ui/src/stories/resizable.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/scroll-area.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ScrollArea>",
                    "file": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/select.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectComponent>",
                    "file": "projects/mi-ui/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/separator.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SeparatorComponent>",
                    "file": "projects/mi-ui/src/stories/separator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/sheet.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SheetComponent>",
                    "file": "projects/mi-ui/src/stories/sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/sidebar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Sidebar>",
                    "file": "projects/mi-ui/src/stories/sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/simple-theme-test.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/mi-ui/src/stories/simple-theme-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/skeleton.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SkeletonComponent>",
                    "file": "projects/mi-ui/src/stories/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/slider.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Slider>",
                    "file": "projects/mi-ui/src/stories/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/sonner.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SonnerToaster>",
                    "file": "projects/mi-ui/src/stories/sonner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/switch.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SwitchComponent>",
                    "file": "projects/mi-ui/src/stories/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Table>",
                    "file": "projects/mi-ui/src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/tabs.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabsComponent>",
                    "file": "projects/mi-ui/src/stories/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/textarea.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextareaComponent>",
                    "file": "projects/mi-ui/src/stories/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/theme-test.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/mi-ui/src/stories/theme-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/theme-toggle-test.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/toast.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToastComponent>",
                    "file": "projects/mi-ui/src/stories/toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/toggle-group.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToggleGroupComponent>",
                    "file": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/toggle.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Toggle>",
                    "file": "projects/mi-ui/src/stories/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/mi-ui/src/stories/tooltip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TooltipComponent>",
                    "file": "projects/mi-ui/src/stories/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/mi-ui/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ComplexContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "complexContentItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customIconItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customStyledItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomStyling",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftIconPosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MixedConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Multiple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ShadcnExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDefaultValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/accordion.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Destructive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert-dialog.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DescriptionOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Destructive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DifferentIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TitleOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/alert.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllComponentsTest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ForceDarkMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ForceLightMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/all-components-theme-test.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Portrait",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Square",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/aspect-ratio.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AvatarGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BrokenImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserProfile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithBadge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithFallback",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithStatus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/avatar.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Counts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InContext",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "StatusIndicators",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/badge.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeepNavigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleNavigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SingleItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDisabledItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/breadcrumb.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllSizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Destructive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Ghost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Link",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SpacingAndAlignment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithSVGIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDateRange",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithSelectedDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/calendar.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Elevated",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Grid",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/card.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/carousel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AutoPlay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/carousel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/carousel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/carousel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoLoop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/carousel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutControls",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/carousel.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraLarge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Medium",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/chart.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ListExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "States",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLabels",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/checkbox.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Open",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/collapsible.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/combobox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/combobox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/combobox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/combobox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/combobox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotSearchable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/combobox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithPreselectedValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/combobox.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/command.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "commandGroups",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/command.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomEmpty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/command.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/command.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/command.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simpleItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/command.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithGroups",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/command.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutSearch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/command.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/context-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/context-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/context-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/context-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/context-menu.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/data-table.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EmptyState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargePageSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotSortable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sampleUsers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutPagination",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/data-table.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DifferentFormats",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDateRange",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutTodayButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithPreselectedDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/date-picker.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ConfirmationDialog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LongContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutDescription",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dialog.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/drawer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomSide",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/drawer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/drawer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftSide",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/drawer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/drawer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NonDismissible",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/drawer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NonModal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/drawer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TopSide",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/drawer.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FileMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserAccountMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDisabledItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/dropdown-menu.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ContactForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "contactFormFields",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoadingState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProfileForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "profileFormFields",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simpleFields",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/form.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/hover-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/hover-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/hover-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TopSide",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/hover-card.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconSizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconTest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PopularIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithStrokeWidth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/icon.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Alphanumeric",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EightDigit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FourDigit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input-otp.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Destructive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Filled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FilledWithDefaultLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Floating",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FloatingLabelDemo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FloatingWithDefaultLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineVariantDemo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineWithDefaultLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "States",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/input.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/label.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "applicationMenus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ApplicationStyle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultMenus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simpleMenus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/menubar.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Vertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithSubmenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/navigation-menu.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FewPages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ManyPages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MiddlePage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/pagination.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DifferentPlacements",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithCustomContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/popover.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/progress.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/progress.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/progress.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/progress.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/progress.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLabels",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/progress.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/radio-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/radio-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/radio-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Horizontal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/radio-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/radio-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDisabledOption",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/radio-group.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/resizable.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Horizontal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/resizable.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/resizable.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Vertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/resizable.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithHandle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/resizable.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HorizontalScrolling",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutScrollbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/scroll-area.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "basicOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Countries",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "countryOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "optionsWithDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDisabledOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/select.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/separator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Horizontal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/separator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/separator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/separator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Vertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/separator.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomSide",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargeSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftSide",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TopSide",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sheet.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Floating",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconCollapsible",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Inset",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NonCollapsible",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Right",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sidebar.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/simple-theme-test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicThemeTest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/simple-theme-test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/simple-theme-test.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Table",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/skeleton.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Range",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SmallSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/slider.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sonner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sonner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LimitedToasts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sonner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sonner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sampleToasts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sonner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sonner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithToasts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/sonner.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLabels",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/switch.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductTable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserTable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithCustomCell",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/table.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "basicTabs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Underline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/tabs.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "States",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/textarea.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/theme-test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/theme-test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/theme-test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThemeVariables",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/theme-test.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ForceDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ForceLight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/theme-toggle-test.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toast.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "alignmentItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mixedItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Multiple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "textFormattingItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Vertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDisabledItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle-group.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/toggle.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Positions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/mi-ui/src/stories/tooltip.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}